% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediastoredata_operations.R
\name{mediastoredata_put_object}
\alias{mediastoredata_put_object}
\title{Uploads an object to the specified path}
\usage{
mediastoredata_put_object(Body, Path, ContentType, CacheControl,
  StorageClass, UploadAvailability)
}
\arguments{
\item{Body}{[required] The bytes to be stored.}

\item{Path}{[required] The path (including the file name) where the object is stored in the
container. Format: \\<folder name\\>/\\<folder name\\>/\\<file name\\>

For example, to upload the file \code{mlaw.avi} to the folder path
\verb{premium\\\\canada} in the container \code{movies}, enter the path
\code{premium/canada/mlaw.avi}.

Do not include the container name in this path.

If the path includes any folders that don\'t exist yet, the service
creates them. For example, suppose you have an existing \code{premium/usa}
subfolder. If you specify \code{premium/canada}, the service creates a
\code{canada} subfolder in the \code{premium} folder. You then have two
subfolders, \code{usa} and \code{canada}, in the \code{premium} folder.

There is no correlation between the path to the source and the path
(folders) in the container in AWS Elemental MediaStore.

For more information about folders and how they exist in a container,
see the \href{http://docs.aws.amazon.com/mediastore/latest/ug/}{AWS Elemental MediaStore User Guide}.

The file name is the name that is assigned to the file that you upload.
The file can have the same name inside and outside of AWS Elemental
MediaStore, or it can have the same name. The file name can include or
omit an extension.}

\item{ContentType}{The content type of the object.}

\item{CacheControl}{An optional \code{CacheControl} header that allows the caller to control the
object\'s cache behavior. Headers can be passed in as specified in the
HTTP at
\url{https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9}.

Headers with a custom user-defined value are also accepted.}

\item{StorageClass}{Indicates the storage class of a \code{Put} request. Defaults to
high-performance temporal storage class, and objects are persisted into
durable storage shortly after being received.}

\item{UploadAvailability}{Indicates the availability of an object while it is still uploading. If
the value is set to \code{streaming}, the object is available for downloading
after some initial buffering but before the object is uploaded
completely. If the value is set to \code{standard}, the object is available
for downloading only when it is uploaded completely. The default value
for this header is \code{standard}.

To use this header, you must also set the HTTP \code{Transfer-Encoding}
header to \code{chunked}.}
}
\description{
Uploads an object to the specified path. Object sizes are limited to 25
MB for standard upload availability and 10 MB for streaming upload
availability.
}
\section{Request syntax}{
\preformatted{svc$put_object(
  Body = raw,
  Path = "string",
  ContentType = "string",
  CacheControl = "string",
  StorageClass = "TEMPORAL",
  UploadAvailability = "STANDARD"|"STREAMING"
)
}
}

\keyword{internal}
