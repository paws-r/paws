% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codeartifact_operations.R
\name{codeartifact_list_packages}
\alias{codeartifact_list_packages}
\title{Returns a list of PackageSummary objects for packages in a repository
that match the request parameters}
\usage{
codeartifact_list_packages(domain, domainOwner, repository, format,
  namespace, packagePrefix, maxResults, nextToken)
}
\arguments{
\item{domain}{[required] The domain that contains the repository that contains the requested list
of packages.}

\item{domainOwner}{The 12-digit account number of the AWS account that owns the domain. It
does not include dashes or spaces.}

\item{repository}{[required] The name of the repository from which packages are to be listed.}

\item{format}{The format of the packages. The valid package types are:
\itemize{
\item \code{npm}: A Node Package Manager (npm) package.
\item \code{pypi}: A Python Package Index (PyPI) package.
\item \code{maven}: A Maven package that contains compiled code in a
distributable format, such as a JAR file.
\item \code{nuget}: A NuGet package.
}}

\item{namespace}{The namespace of the package. The package component that specifies its
namespace depends on its type. For example:
\itemize{
\item The namespace of a Maven package is its \code{groupId}.
\item The namespace of an npm package is its \code{scope}.
\item A Python package does not contain a corresponding component, so
Python packages do not have a namespace.
\item A NuGet package does not contain a corresponding component, so NuGet
packages do not have a namespace.
}}

\item{packagePrefix}{A prefix used to filter returned packages. Only packages with names that
start with \code{packagePrefix} are returned.}

\item{maxResults}{The maximum number of results to return per page.}

\item{nextToken}{The token for the next set of results. Use the value returned in the
previous response in the next request to retrieve the next set of
results.}
}
\description{
Returns a list of
\href{https://docs.aws.amazon.com/codeartifact/latest/APIReference/API_PackageSummary.html}{\code{PackageSummary}}
objects for packages in a repository that match the request parameters.
}
\section{Request syntax}{
\preformatted{svc$list_packages(
  domain = "string",
  domainOwner = "string",
  repository = "string",
  format = "npm"|"pypi"|"maven"|"nuget",
  namespace = "string",
  packagePrefix = "string",
  maxResults = 123,
  nextToken = "string"
)
}
}

\keyword{internal}
