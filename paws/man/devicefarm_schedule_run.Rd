% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_schedule_run}
\alias{devicefarm_schedule_run}
\title{Schedules a run}
\usage{
devicefarm_schedule_run(projectArn, appArn, devicePoolArn,
  deviceSelectionConfiguration, name, test, configuration,
  executionConfiguration)
}
\arguments{
\item{projectArn}{[required] The ARN of the project for the run to be scheduled.}

\item{appArn}{The ARN of an application package to run tests against, created with
CreateUpload. See ListUploads.}

\item{devicePoolArn}{The ARN of the device pool for the run to be scheduled.}

\item{deviceSelectionConfiguration}{The filter criteria used to dynamically select a set of devices for a
test run and the maximum number of devices to be included in the run.

Either \strong{\code{devicePoolArn}} or \strong{\code{deviceSelectionConfiguration}} is
required in a request.}

\item{name}{The name for the run to be scheduled.}

\item{test}{[required] Information about the test for the run to be scheduled.}

\item{configuration}{Information about the settings for the run to be scheduled.}

\item{executionConfiguration}{Specifies configuration information about a test run, such as the
execution timeout (in minutes).}
}
\description{
Schedules a run.
}
\section{Request syntax}{
\preformatted{svc$schedule_run(
  projectArn = "string",
  appArn = "string",
  devicePoolArn = "string",
  deviceSelectionConfiguration = list(
    filters = list(
      list(
        attribute = "ARN"|"PLATFORM"|"OS_VERSION"|"MODEL"|"AVAILABILITY"|"FORM_FACTOR"|"MANUFACTURER"|"REMOTE_ACCESS_ENABLED"|"REMOTE_DEBUG_ENABLED"|"INSTANCE_ARN"|"INSTANCE_LABELS"|"FLEET_TYPE",
        operator = "EQUALS"|"LESS_THAN"|"LESS_THAN_OR_EQUALS"|"GREATER_THAN"|"GREATER_THAN_OR_EQUALS"|"IN"|"NOT_IN"|"CONTAINS",
        values = list(
          "string"
        )
      )
    ),
    maxDevices = 123
  ),
  name = "string",
  test = list(
    type = "BUILTIN_FUZZ"|"BUILTIN_EXPLORER"|"WEB_PERFORMANCE_PROFILE"|"APPIUM_JAVA_JUNIT"|"APPIUM_JAVA_TESTNG"|"APPIUM_PYTHON"|"APPIUM_NODE"|"APPIUM_RUBY"|"APPIUM_WEB_JAVA_JUNIT"|"APPIUM_WEB_JAVA_TESTNG"|"APPIUM_WEB_PYTHON"|"APPIUM_WEB_NODE"|"APPIUM_WEB_RUBY"|"CALABASH"|"INSTRUMENTATION"|"UIAUTOMATION"|"UIAUTOMATOR"|"XCTEST"|"XCTEST_UI"|"REMOTE_ACCESS_RECORD"|"REMOTE_ACCESS_REPLAY",
    testPackageArn = "string",
    testSpecArn = "string",
    filter = "string",
    parameters = list(
      "string"
    )
  ),
  configuration = list(
    extraDataPackageArn = "string",
    networkProfileArn = "string",
    locale = "string",
    location = list(
      latitude = 123.0,
      longitude = 123.0
    ),
    vpceConfigurationArns = list(
      "string"
    ),
    customerArtifactPaths = list(
      iosPaths = list(
        "string"
      ),
      androidPaths = list(
        "string"
      ),
      deviceHostPaths = list(
        "string"
      )
    ),
    radios = list(
      wifi = TRUE|FALSE,
      bluetooth = TRUE|FALSE,
      nfc = TRUE|FALSE,
      gps = TRUE|FALSE
    ),
    auxiliaryApps = list(
      "string"
    ),
    billingMethod = "METERED"|"UNMETERED"
  ),
  executionConfiguration = list(
    jobTimeoutMinutes = 123,
    accountsCleanup = TRUE|FALSE,
    appPackagesCleanup = TRUE|FALSE,
    videoCapture = TRUE|FALSE,
    skipAppResign = TRUE|FALSE
  )
)
}
}

\section{Examples}{
\preformatted{# The following example schedules a test run named MyRun.
svc$schedule_run(
  name = "MyRun",
  devicePoolArn = "arn:aws:devicefarm:us-west-2:123456789101:pool:EXAMPLE-GUID-123-456",
  projectArn = "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
  test = list(
    type = "APPIUM_JAVA_JUNIT",
    testPackageArn = "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456"
  )
)
}
}

\keyword{internal}
