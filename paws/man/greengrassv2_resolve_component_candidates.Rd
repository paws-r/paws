% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/greengrassv2_operations.R
\name{greengrassv2_resolve_component_candidates}
\alias{greengrassv2_resolve_component_candidates}
\title{Retrieves a list of components that meet the component, version, and
platform requirements of a deployment}
\usage{
greengrassv2_resolve_component_candidates(platform, componentCandidates)
}
\arguments{
\item{platform}{[required] The platform to use to resolve compatible components.}

\item{componentCandidates}{[required] The list of components to resolve.}
}
\description{
Retrieves a list of components that meet the component, version, and
platform requirements of a deployment. AWS IoT Greengrass core devices
call this operation when they receive a deployment to identify the
components to install.

This operation identifies components that meet all dependency
requirements for a deployment. If the requirements conflict, then this
operation returns an error and the deployment fails. For example, this
occurs if component \code{A} requires version \verb{&gt;2.0.0} and component \code{B}
requires version \verb{&lt;2.0.0} of a component dependency.

When you specify the component candidates to resolve, AWS IoT Greengrass
compares each component's digest from the core device with the
component's digest in the AWS Cloud. If the digests don't match, then
AWS IoT Greengrass specifies to use the version from the AWS Cloud.

To use this operation, you must use the data plane API endpoint and
authenticate with an AWS IoT device certificate. For more information,
see AWS IoT Greengrass endpoints and quotas.
}
\section{Request syntax}{
\preformatted{svc$resolve_component_candidates(
  platform = list(
    name = "string",
    attributes = list(
      "string"
    )
  ),
  componentCandidates = list(
    list(
      componentName = "string",
      componentVersion = "string",
      versionRequirements = list(
        "string"
      )
    )
  )
)
}
}

\keyword{internal}
