% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snowball_service.R
\name{snowball}
\alias{snowball}
\title{Amazon Import/Export Snowball}
\usage{
snowball(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
AWS Snowball is a petabyte-scale data transport solution that uses
secure devices to transfer large amounts of data between your
on-premises data centers and Amazon Simple Storage Service (Amazon S3).
The Snowball commands described here provide access to the same
functionality that is available in the AWS Snowball Management Console,
which enables you to create and manage jobs for Snowball. To transfer
data locally with a Snowball device, you\'ll need to use the Snowball
client or the Amazon S3 API adapter for Snowball. For more information,
see the \href{https://docs.aws.amazon.com/AWSImportExport/latest/ug/api-reference.html}{User Guide}.
}
\section{Service syntax}{
\preformatted{svc <- snowball(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=snowball_cancel_cluster]{cancel_cluster} \tab Cancels a cluster job \cr
\link[=snowball_cancel_job]{cancel_job} \tab Cancels the specified job \cr
\link[=snowball_create_address]{create_address} \tab Creates an address for a Snowball to be shipped to \cr
\link[=snowball_create_cluster]{create_cluster} \tab Creates an empty cluster \cr
\link[=snowball_create_job]{create_job} \tab Creates a job to import or export data between Amazon S3 and your on-premises data center \cr
\link[=snowball_describe_address]{describe_address} \tab Takes an AddressId and returns specific details about that address in the form of an Address object \cr
\link[=snowball_describe_addresses]{describe_addresses} \tab Returns a specified number of ADDRESS objects \cr
\link[=snowball_describe_cluster]{describe_cluster} \tab Returns information about a specific cluster including shipping information, cluster status, and other important metadata \cr
\link[=snowball_describe_job]{describe_job} \tab Returns information about a specific job including shipping information, job status, and other important metadata \cr
\link[=snowball_get_job_manifest]{get_job_manifest} \tab Returns a link to an Amazon S3 presigned URL for the manifest file associated with the specified JobId value \cr
\link[=snowball_get_job_unlock_code]{get_job_unlock_code} \tab Returns the UnlockCode code value for the specified job \cr
\link[=snowball_get_snowball_usage]{get_snowball_usage} \tab Returns information about the Snowball service limit for your account, and also the number of Snowballs your account has in use \cr
\link[=snowball_get_software_updates]{get_software_updates} \tab Returns an Amazon S3 presigned URL for an update file associated with a specified JobId \cr
\link[=snowball_list_cluster_jobs]{list_cluster_jobs} \tab Returns an array of JobListEntry objects of the specified length \cr
\link[=snowball_list_clusters]{list_clusters} \tab Returns an array of ClusterListEntry objects of the specified length \cr
\link[=snowball_list_compatible_images]{list_compatible_images} \tab This action returns a list of the different Amazon EC2 Amazon Machine Images (AMIs) that are owned by your AWS account that would be supported for use on a Snowball Edge device\cr
\link[=snowball_list_jobs]{list_jobs} \tab Returns an array of JobListEntry objects of the specified length \cr
\link[=snowball_update_cluster]{update_cluster} \tab While a cluster's ClusterState value is in the AwaitingQuorum state, you can update some of the information associated with a cluster \cr
\link[=snowball_update_job]{update_job} \tab While a job's JobState value is New, you can update some of the information associated with a job
}
}

\examples{
# This operation cancels a cluster job. You can only cancel a cluster job
# while it's in the AwaitingQuorum status.
\donttest{svc <- snowball()
svc$cancel_cluster(
  ClusterId = "CID123e4567-e89b-12d3-a456-426655440000"
)}

}
