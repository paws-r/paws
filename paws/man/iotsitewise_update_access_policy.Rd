% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iotsitewise_operations.R
\name{iotsitewise_update_access_policy}
\alias{iotsitewise_update_access_policy}
\title{Updates an existing access policy that specifies an AWS SSO user or
group's access to an AWS IoT SiteWise Monitor portal or project resource}
\usage{
iotsitewise_update_access_policy(accessPolicyId, accessPolicyIdentity,
  accessPolicyResource, accessPolicyPermission, clientToken)
}
\arguments{
\item{accessPolicyId}{[required] The ID of the access policy.}

\item{accessPolicyIdentity}{[required] The identity for this access policy. Choose either a \code{user} or a \code{group}
but not both.}

\item{accessPolicyResource}{[required] The AWS IoT SiteWise Monitor resource for this access policy. Choose
either \code{portal} or \code{project} but not both.}

\item{accessPolicyPermission}{[required] The permission level for this access policy. Note that a project
\code{ADMINISTRATOR} is also known as a project owner.}

\item{clientToken}{A unique case-sensitive identifier that you can provide to ensure the
idempotency of the request. Don\'t reuse this client token if a new
idempotent request is required.}
}
\description{
Updates an existing access policy that specifies an AWS SSO user or
group\'s access to an AWS IoT SiteWise Monitor portal or project
resource.
}
\section{Request syntax}{
\preformatted{svc$update_access_policy(
  accessPolicyId = "string",
  accessPolicyIdentity = list(
    user = list(
      id = "string"
    ),
    group = list(
      id = "string"
    )
  ),
  accessPolicyResource = list(
    portal = list(
      id = "string"
    ),
    project = list(
      id = "string"
    )
  ),
  accessPolicyPermission = "ADMINISTRATOR"|"VIEWER",
  clientToken = "string"
)
}
}

\keyword{internal}
