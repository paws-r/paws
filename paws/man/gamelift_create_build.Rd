% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_create_build}
\alias{gamelift_create_build}
\title{Creates a new Amazon GameLift build resource for your game server binary
files}
\usage{
gamelift_create_build(Name, Version, StorageLocation, OperatingSystem,
  Tags)
}
\arguments{
\item{Name}{A descriptive label that is associated with a build. Build names do not
need to be unique. You can use \code{\link[=gamelift_update_build]{update_build}}
to change this value later.}

\item{Version}{Version information that is associated with a build or script. Version
strings do not need to be unique. You can use
\code{\link[=gamelift_update_build]{update_build}} to change this value later.}

\item{StorageLocation}{The location where your game build files are stored. Use this parameter
only when creating a build using files that are stored in an S3 bucket
that you own. Identify an S3 bucket name and key, which must in the same
Region where you're creating a build. This parameter must also specify
the ARN for an IAM role that you've set up to give Amazon GameLift
access your S3 bucket. To call this operation with a storage location,
you must have IAM PassRole permission. For more details on IAM roles and
PassRole permissions, see \href{https://docs.aws.amazon.com/gamelift/latest/developerguide/setting-up-role.html}{Set up a role for GameLift access}.}

\item{OperatingSystem}{The operating system that the game server binaries are built to run on.
This value determines the type of fleet resources that you can use for
this build. If your game build contains multiple executables, they all
must run on the same operating system. If an operating system is not
specified when creating a build, Amazon GameLift uses the default value
(WINDOWS\\_2012). This value cannot be changed later.}

\item{Tags}{A list of labels to assign to the new build resource. Tags are
developer-defined key-value pairs. Tagging AWS resources are useful for
resource management, access management and cost allocation. For more
information, see \href{https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html}{Tagging AWS Resources}
in the \emph{AWS General Reference}. Once the resource is created, you can
use \code{\link[=gamelift_tag_resource]{tag_resource}},
\code{\link[=gamelift_untag_resource]{untag_resource}}, and
\code{\link[=gamelift_list_tags_for_resource]{list_tags_for_resource}} to add,
remove, and view tags. The maximum tag limit may be lower than stated.
See the AWS General Reference for actual tagging limits.}
}
\description{
Creates a new Amazon GameLift build resource for your game server binary
files. Game server binaries must be combined into a zip file for use
with Amazon GameLift.

When setting up a new game build for GameLift, we recommend using the
AWS CLI command
\strong{\href{https://docs.aws.amazon.com/cli/latest/reference/gamelift/upload-build.html}{upload-build}}
. This helper command combines two tasks: (1) it uploads your build
files from a file directory to a GameLift Amazon S3 location, and (2) it
creates a new build resource.

The \code{\link[=gamelift_create_build]{create_build}} operation can used in the
following scenarios:
\itemize{
\item To create a new game build with build files that are in an S3
location under an AWS account that you control. To use this option,
you must first give Amazon GameLift access to the S3 bucket. With
permissions in place, call \code{\link[=gamelift_create_build]{create_build}}
and specify a build name, operating system, and the S3 storage
location of your game build.
\item To directly upload your build files to a GameLift S3 location. To
use this option, first call \code{\link[=gamelift_create_build]{create_build}}
and specify a build name and operating system. This operation
creates a new build resource and also returns an S3 location with
temporary access credentials. Use the credentials to manually upload
your build files to the specified S3 location. For more information,
see \href{https://docs.aws.amazon.com/AmazonS3/latest/dev/UploadingObjects.html}{Uploading Objects}
in the \emph{Amazon S3 Developer Guide}. Build files can be uploaded to
the GameLift S3 location once only; that can't be updated.
}

If successful, this operation creates a new build resource with a unique
build ID and places it in \code{INITIALIZED} status. A build must be in
\code{READY} status before you can create fleets with it.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html}{Uploading Your Game}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build}{Create a Build with Files in Amazon S3}

\strong{Related operations}
\itemize{
\item \code{\link[=gamelift_create_build]{create_build}}
\item \code{\link[=gamelift_list_builds]{list_builds}}
\item \code{\link[=gamelift_describe_build]{describe_build}}
\item \code{\link[=gamelift_update_build]{update_build}}
\item \code{\link[=gamelift_delete_build]{delete_build}}
}
}
\section{Request syntax}{
\preformatted{svc$create_build(
  Name = "string",
  Version = "string",
  StorageLocation = list(
    Bucket = "string",
    Key = "string",
    RoleArn = "string",
    ObjectVersion = "string"
  ),
  OperatingSystem = "WINDOWS_2012"|"AMAZON_LINUX"|"AMAZON_LINUX_2",
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  )
)
}
}

\keyword{internal}
