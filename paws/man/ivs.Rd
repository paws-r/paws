% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ivs_service.R
\name{ivs}
\alias{ivs}
\title{Amazon Interactive Video Service}
\usage{
ivs(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
\strong{Introduction}

The Amazon Interactive Video Service (IVS) API is REST compatible, using
a standard HTTP API and an \href{https://aws.amazon.com/sns/}{AWS SNS} event
stream for responses. JSON is used for both requests and responses,
including errors.

The API is an AWS regional service, currently in these regions:
us-west-2, us-east-1, and eu-west-1.

\emph{\strong{All API request parameters and URLs are case sensitive.}}

For a summary of notable documentation changes in each release, see
\href{https://docs.aws.amazon.com/ivs/latest/userguide/doc-history.html}{Document History}.

\strong{Service Endpoints}

The following are the Amazon IVS service endpoints (all HTTPS):

Region name: US West (Oregon)
\itemize{
\item Region: \code{us-west-2}
\item Endpoint: \verb{ivs.us-west-2.amazonaws.com}
}

Region name: US East (Virginia)
\itemize{
\item Region: \code{us-east-1}
\item Endpoint: \verb{ivs.us-east-1.amazonaws.com}
}

Region name: EU West (Dublin)
\itemize{
\item Region: \code{eu-west-1}
\item Endpoint: \verb{ivs.eu-west-1.amazonaws.com}
}

\strong{Allowed Header Values}
\itemize{
\item \verb{<b>Accept:</b>} application/json
\item \verb{<b>Accept-Encoding:</b>} gzip, deflate
\item \verb{<b>Content-Type:</b>}application/json
}

\strong{Resources}

The following resources contain information about your IVS live stream
(see \href{https://docs.aws.amazon.com/ivs/latest/userguide/getting-started.html}{Getting Started with Amazon IVS}):
\itemize{
\item Channel — Stores configuration data related to your live stream. You
first create a channel and then use the channel’s stream key to
start your live stream. See the Channel endpoints for more
information.
\item Stream key — An identifier assigned by Amazon IVS when you create a
channel, which is then used to authorize streaming. See the
StreamKey endpoints for more information. \emph{\strong{Treat the stream key
like a secret, since it allows anyone to stream to the channel.}}
\item Playback key pair — Video playback may be restricted using
playback-authorization tokens, which use public-key encryption. A
playback key pair is the public-private pair of keys used to sign
and validate the playback-authorization token. See the
PlaybackKeyPair endpoints for more information.
}

\strong{Tagging}

A \emph{tag} is a metadata label that you assign to an AWS resource. A tag
comprises a \emph{key} and a \emph{value}, both set by you. For example, you might
set a tag as \code{topic:nature} to label a particular video category. See
\href{https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html}{Tagging AWS Resources}
for more information, including restrictions that apply to tags.

Tags can help you identify and organize your AWS resources. For example,
you can use the same tag for different resources to indicate that they
are related. You can also use tags to manage access (see \href{https://docs.aws.amazon.com/IAM/latest/UserGuide/access_tags.html}{Access Tags}).

The Amazon IVS API has these tag-related endpoints: TagResource,
UntagResource, and ListTagsForResource. The following resources support
tagging: Channels, Stream Keys, and Playback Key Pairs.

\strong{Channel Endpoints}
\itemize{
\item CreateChannel — Creates a new channel and an associated stream key
to start streaming.
\item GetChannel — Gets the channel configuration for the specified
channel ARN (Amazon Resource Name).
\item BatchGetChannel — Performs GetChannel on multiple ARNs
simultaneously.
\item ListChannels — Gets summary information about all channels in your
account, in the AWS region where the API request is processed. This
list can be filtered to match a specified string.
\item UpdateChannel — Updates a channel's configuration. This does not
affect an ongoing stream of this channel. You must stop and restart
the stream for the changes to take effect.
\item DeleteChannel — Deletes the specified channel.
}

\strong{StreamKey Endpoints}
\itemize{
\item CreateStreamKey — Creates a stream key, used to initiate a stream,
for the specified channel ARN.
\item GetStreamKey — Gets stream key information for the specified ARN.
\item BatchGetStreamKey — Performs GetStreamKey on multiple ARNs
simultaneously.
\item ListStreamKeys — Gets summary information about stream keys for the
specified channel.
\item DeleteStreamKey — Deletes the stream key for the specified ARN, so
it can no longer be used to stream.
}

\strong{Stream Endpoints}
\itemize{
\item GetStream — Gets information about the active (live) stream on a
specified channel.
\item ListStreams — Gets summary information about live streams in your
account, in the AWS region where the API request is processed.
\item StopStream — Disconnects the incoming RTMPS stream for the specified
channel. Can be used in conjunction with DeleteStreamKey to prevent
further streaming to a channel.
\item PutMetadata — Inserts metadata into an RTMPS stream for the
specified channel. A maximum of 5 requests per second per channel is
allowed, each with a maximum 1KB payload.
}

\strong{PlaybackKeyPair Endpoints}
\itemize{
\item ImportPlaybackKeyPair — Imports the public portion of a new key pair
and returns its \code{arn} and \code{fingerprint}. The \code{privateKey} can then
be used to generate viewer authorization tokens, to grant viewers
access to authorized channels.
\item GetPlaybackKeyPair — Gets a specified playback authorization key
pair and returns the \code{arn} and \code{fingerprint}. The \code{privateKey} held
by the caller can be used to generate viewer authorization tokens,
to grant viewers access to authorized channels.
\item ListPlaybackKeyPairs — Gets summary information about playback key
pairs.
\item DeletePlaybackKeyPair — Deletes a specified authorization key pair.
This invalidates future viewer tokens generated using the key pair’s
\code{privateKey}.
}

\strong{AWS Tags Endpoints}
\itemize{
\item TagResource — Adds or updates tags for the AWS resource with the
specified ARN.
\item UntagResource — Removes tags from the resource with the specified
ARN.
\item ListTagsForResource — Gets information about AWS tags for the
specified ARN.
}
}
\section{Service syntax}{
\preformatted{svc <- ivs(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=ivs_batch_get_channel]{batch_get_channel} \tab Performs GetChannel on multiple ARNs simultaneously\cr
\link[=ivs_batch_get_stream_key]{batch_get_stream_key} \tab Performs GetStreamKey on multiple ARNs simultaneously\cr
\link[=ivs_create_channel]{create_channel} \tab Creates a new channel and an associated stream key to start streaming\cr
\link[=ivs_create_stream_key]{create_stream_key} \tab Creates a stream key, used to initiate a stream, for the specified channel ARN\cr
\link[=ivs_delete_channel]{delete_channel} \tab Deletes the specified channel and its associated stream keys\cr
\link[=ivs_delete_playback_key_pair]{delete_playback_key_pair} \tab Deletes a specified authorization key pair\cr
\link[=ivs_delete_stream_key]{delete_stream_key} \tab Deletes the stream key for the specified ARN, so it can no longer be used to stream\cr
\link[=ivs_get_channel]{get_channel} \tab Gets the channel configuration for the specified channel ARN\cr
\link[=ivs_get_playback_key_pair]{get_playback_key_pair} \tab Gets a specified playback authorization key pair and returns the arn and fingerprint\cr
\link[=ivs_get_stream]{get_stream} \tab Gets information about the active (live) stream on a specified channel\cr
\link[=ivs_get_stream_key]{get_stream_key} \tab Gets stream-key information for a specified ARN\cr
\link[=ivs_import_playback_key_pair]{import_playback_key_pair} \tab Imports the public portion of a new key pair and returns its arn and fingerprint\cr
\link[=ivs_list_channels]{list_channels} \tab Gets summary information about all channels in your account, in the AWS region where the API request is processed\cr
\link[=ivs_list_playback_key_pairs]{list_playback_key_pairs} \tab Gets summary information about playback key pairs\cr
\link[=ivs_list_stream_keys]{list_stream_keys} \tab Gets summary information about stream keys for the specified channel\cr
\link[=ivs_list_streams]{list_streams} \tab Gets summary information about live streams in your account, in the AWS region where the API request is processed\cr
\link[=ivs_list_tags_for_resource]{list_tags_for_resource} \tab Gets information about AWS tags for the specified ARN\cr
\link[=ivs_put_metadata]{put_metadata} \tab Inserts metadata into an RTMPS stream for the specified channel\cr
\link[=ivs_stop_stream]{stop_stream} \tab Disconnects the incoming RTMPS stream for the specified channel\cr
\link[=ivs_tag_resource]{tag_resource} \tab Adds or updates tags for the AWS resource with the specified ARN\cr
\link[=ivs_untag_resource]{untag_resource} \tab Removes tags from the resource with the specified ARN\cr
\link[=ivs_update_channel]{update_channel} \tab Updates a channel's configuration
}
}

\examples{
\dontrun{
svc <- ivs()
svc$batch_get_channel(
  Foo = 123
)
}

}
