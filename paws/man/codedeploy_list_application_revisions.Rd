% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codedeploy_operations.R
\name{codedeploy_list_application_revisions}
\alias{codedeploy_list_application_revisions}
\title{Lists information about revisions for an application}
\usage{
codedeploy_list_application_revisions(applicationName, sortBy,
  sortOrder, s3Bucket, s3KeyPrefix, deployed, nextToken)
}
\arguments{
\item{applicationName}{[required] The name of an AWS CodeDeploy application associated with the IAM user
or AWS account.}

\item{sortBy}{The column name to use to sort the list results:
\itemize{
\item registerTime: Sort by the time the revisions were registered with
AWS CodeDeploy.
\item firstUsedTime: Sort by the time the revisions were first used in a
deployment.
\item lastUsedTime: Sort by the time the revisions were last used in a
deployment.
}

If not specified or set to null, the results are returned in an
arbitrary order.}

\item{sortOrder}{The order in which to sort the list results:
\itemize{
\item ascending: ascending order.
\item descending: descending order.
}

If not specified, the results are sorted in ascending order.

If set to null, the results are sorted in an arbitrary order.}

\item{s3Bucket}{An Amazon S3 bucket name to limit the search for revisions.

If set to null, all of the user\'s buckets are searched.}

\item{s3KeyPrefix}{A key prefix for the set of Amazon S3 objects to limit the search for
revisions.}

\item{deployed}{Whether to list revisions based on whether the revision is the target
revision of an deployment group:
\itemize{
\item include: List revisions that are target revisions of a deployment
group.
\item exclude: Do not list revisions that are target revisions of a
deployment group.
\item ignore: List all revisions.
}}

\item{nextToken}{An identifier returned from the previous \code{ListApplicationRevisions}
call. It can be used to return the next set of applications in the list.}
}
\description{
Lists information about revisions for an application.
}
\section{Request syntax}{
\preformatted{svc$list_application_revisions(
  applicationName = "string",
  sortBy = "registerTime"|"firstUsedTime"|"lastUsedTime",
  sortOrder = "ascending"|"descending",
  s3Bucket = "string",
  s3KeyPrefix = "string",
  deployed = "include"|"exclude"|"ignore",
  nextToken = "string"
)
}
}

\keyword{internal}
