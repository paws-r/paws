% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_list_uploads}
\alias{devicefarm_list_uploads}
\title{Gets information about uploads, given an AWS Device Farm project ARN}
\usage{
devicefarm_list_uploads(arn, type, nextToken)
}
\arguments{
\item{arn}{[required] The Amazon Resource Name (ARN) of the project for which you want to list
uploads.}

\item{type}{The type of upload.

Must be one of the following values:
\itemize{
\item ANDROID\\_APP
\item IOS\\_APP
\item WEB\\_APP
\item EXTERNAL\\_DATA
\item APPIUM\\_JAVA\\_JUNIT\\_TEST\\_PACKAGE
\item APPIUM\\_JAVA\\_TESTNG\\_TEST\\_PACKAGE
\item APPIUM\\_PYTHON\\_TEST\\_PACKAGE
\item APPIUM\\_NODE\\_TEST\\_PACKAGE
\item APPIUM\\_RUBY\\_TEST\\_PACKAGE
\item APPIUM\\_WEB\\_JAVA\\_JUNIT\\_TEST\\_PACKAGE
\item APPIUM\\_WEB\\_JAVA\\_TESTNG\\_TEST\\_PACKAGE
\item APPIUM\\_WEB\\_PYTHON\\_TEST\\_PACKAGE
\item APPIUM\\_WEB\\_NODE\\_TEST\\_PACKAGE
\item APPIUM\\_WEB\\_RUBY\\_TEST\\_PACKAGE
\item CALABASH\\_TEST\\_PACKAGE
\item INSTRUMENTATION\\_TEST\\_PACKAGE
\item UIAUTOMATION\\_TEST\\_PACKAGE
\item UIAUTOMATOR\\_TEST\\_PACKAGE
\item XCTEST\\_TEST\\_PACKAGE
\item XCTEST\\_UI\\_TEST\\_PACKAGE
\item APPIUM\\_JAVA\\_JUNIT\\_TEST\\_SPEC
\item APPIUM\\_JAVA\\_TESTNG\\_TEST\\_SPEC
\item APPIUM\\_PYTHON\\_TEST\\_SPEC
\item APPIUM\\_NODE\\_TEST\\_SPEC
\item APPIUM\\_RUBY\\_TEST\\_SPEC
\item APPIUM\\_WEB\\_JAVA\\_JUNIT\\_TEST\\_SPEC
\item APPIUM\\_WEB\\_JAVA\\_TESTNG\\_TEST\\_SPEC
\item APPIUM\\_WEB\\_PYTHON\\_TEST\\_SPEC
\item APPIUM\\_WEB\\_NODE\\_TEST\\_SPEC
\item APPIUM\\_WEB\\_RUBY\\_TEST\\_SPEC
\item INSTRUMENTATION\\_TEST\\_SPEC
\item XCTEST\\_UI\\_TEST\\_SPEC
}}

\item{nextToken}{An identifier that was returned from the previous call to this
operation, which can be used to return the next set of items in the
list.}
}
\description{
Gets information about uploads, given an AWS Device Farm project ARN.
}
\section{Request syntax}{
\preformatted{svc$list_uploads(
  arn = "string",
  type = "ANDROID_APP"|"IOS_APP"|"WEB_APP"|"EXTERNAL_DATA"|"APPIUM_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_PYTHON_TEST_PACKAGE"|"APPIUM_NODE_TEST_PACKAGE"|"APPIUM_RUBY_TEST_PACKAGE"|"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_WEB_PYTHON_TEST_PACKAGE"|"APPIUM_WEB_NODE_TEST_PACKAGE"|"APPIUM_WEB_RUBY_TEST_PACKAGE"|"CALABASH_TEST_PACKAGE"|"INSTRUMENTATION_TEST_PACKAGE"|"UIAUTOMATION_TEST_PACKAGE"|"UIAUTOMATOR_TEST_PACKAGE"|"XCTEST_TEST_PACKAGE"|"XCTEST_UI_TEST_PACKAGE"|"APPIUM_JAVA_JUNIT_TEST_SPEC"|"APPIUM_JAVA_TESTNG_TEST_SPEC"|"APPIUM_PYTHON_TEST_SPEC"|"APPIUM_NODE_TEST_SPEC"|"APPIUM_RUBY_TEST_SPEC"|"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"|"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"|"APPIUM_WEB_PYTHON_TEST_SPEC"|"APPIUM_WEB_NODE_TEST_SPEC"|"APPIUM_WEB_RUBY_TEST_SPEC"|"INSTRUMENTATION_TEST_SPEC"|"XCTEST_UI_TEST_SPEC",
  nextToken = "string"
)
}
}

\section{Examples}{
\preformatted{# The following example returns information about uploads, given a
# specific Device Farm project.
svc$list_uploads(
  arn = "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
  nextToken = "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
)
}
}

\keyword{internal}
