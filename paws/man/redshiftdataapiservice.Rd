% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redshiftdataapiservice_service.R
\name{redshiftdataapiservice}
\alias{redshiftdataapiservice}
\title{Redshift Data API Service}
\usage{
redshiftdataapiservice(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
You can use the Amazon Redshift Data API to run queries on Amazon
Redshift tables. You can run individual SQL statements, which are
committed if the statement succeeds.
}
\section{Service syntax}{
\preformatted{svc <- redshiftdataapiservice(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=redshiftdataapiservice_cancel_statement]{cancel_statement} \tab Cancels a running query\cr
\link[=redshiftdataapiservice_describe_statement]{describe_statement} \tab Describes the details about a specific instance when a query was run by the Amazon Redshift Data API\cr
\link[=redshiftdataapiservice_describe_table]{describe_table} \tab Describes the detailed information about a table from metadata in the cluster\cr
\link[=redshiftdataapiservice_execute_statement]{execute_statement} \tab Runs an SQL statement, which can be data manipulation language (DML) or data definition language (DDL)\cr
\link[=redshiftdataapiservice_get_statement_result]{get_statement_result} \tab Fetches the temporarily cached result of an SQL statement\cr
\link[=redshiftdataapiservice_list_databases]{list_databases} \tab List the databases in a cluster\cr
\link[=redshiftdataapiservice_list_schemas]{list_schemas} \tab Lists the schemas in a database\cr
\link[=redshiftdataapiservice_list_statements]{list_statements} \tab List of SQL statements\cr
\link[=redshiftdataapiservice_list_tables]{list_tables} \tab List the tables in a database
}
}

\examples{
\dontrun{
svc <- redshiftdataapiservice()
svc$cancel_statement(
  Foo = 123
)
}

}
