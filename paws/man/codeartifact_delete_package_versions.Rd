% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codeartifact_operations.R
\name{codeartifact_delete_package_versions}
\alias{codeartifact_delete_package_versions}
\title{Deletes one or more versions of a package}
\usage{
codeartifact_delete_package_versions(domain, domainOwner, repository,
  format, namespace, package, versions, expectedStatus)
}
\arguments{
\item{domain}{[required] The name of the domain that contains the package to delete.}

\item{domainOwner}{The 12-digit account number of the AWS account that owns the domain. It
does not include dashes or spaces.}

\item{repository}{[required] The name of the repository that contains the package versions to delete.}

\item{format}{[required] The format of the package versions to delete. The valid values are:
\itemize{
\item \code{npm}
\item \code{pypi}
\item \code{maven}
\item \code{nuget}
}}

\item{namespace}{The namespace of the package. The package component that specifies its
namespace depends on its type. For example:
\itemize{
\item The namespace of a Maven package is its \code{groupId}.
\item The namespace of an npm package is its \code{scope}.
\item A Python package does not contain a corresponding component, so
Python packages do not have a namespace.
\item A NuGet package does not contain a corresponding component, so NuGet
packages do not have a namespace.
}}

\item{package}{[required] The name of the package with the versions to delete.}

\item{versions}{[required] An array of strings that specify the versions of the package to delete.}

\item{expectedStatus}{The expected status of the package version to delete. Valid values are:
\itemize{
\item \code{Published}
\item \code{Unfinished}
\item \code{Unlisted}
\item \code{Archived}
\item \code{Disposed}
}}
}
\description{
Deletes one or more versions of a package. A deleted package version
cannot be restored in your repository. If you want to remove a package
version from your repository and be able to restore it later, set its
status to \code{Archived}. Archived packages cannot be downloaded from a
repository and don't show up with list package APIs (for example,
\code{ListackageVersions}), but you can restore them using
\code{\link[=codeartifact_update_package_versions_status]{update_package_versions_status}}.
}
\section{Request syntax}{
\preformatted{svc$delete_package_versions(
  domain = "string",
  domainOwner = "string",
  repository = "string",
  format = "npm"|"pypi"|"maven"|"nuget",
  namespace = "string",
  package = "string",
  versions = list(
    "string"
  ),
  expectedStatus = "Published"|"Unfinished"|"Unlisted"|"Archived"|"Disposed"|"Deleted"
)
}
}

\keyword{internal}
