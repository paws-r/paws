% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/managedblockchain_operations.R
\name{managedblockchain_create_node}
\alias{managedblockchain_create_node}
\title{Creates a node on the specified blockchain network}
\usage{
managedblockchain_create_node(ClientRequestToken, NetworkId, MemberId,
  NodeConfiguration)
}
\arguments{
\item{ClientRequestToken}{[required] A unique, case-sensitive identifier that you provide to ensure the
idempotency of the operation. An idempotent operation completes no more
than one time. This identifier is required only if you make a service
request directly using an HTTP client. It is generated automatically if
you use an AWS SDK or the AWS CLI.}

\item{NetworkId}{[required] The unique identifier of the network for the node.

Ethereum public networks have the following \code{NetworkId}s:
\itemize{
\item \code{n-ethereum-mainnet}
\item \code{n-ethereum-rinkeby}
\item \code{n-ethereum-ropsten}
}}

\item{MemberId}{The unique identifier of the member that owns this node.

Applies only to Hyperledger Fabric.}

\item{NodeConfiguration}{[required] The properties of a node configuration.}
}
\description{
Creates a node on the specified blockchain network.
}
\details{
Applies to Hyperledger Fabric and Ethereum.
}
\section{Request syntax}{
\preformatted{svc$create_node(
  ClientRequestToken = "string",
  NetworkId = "string",
  MemberId = "string",
  NodeConfiguration = list(
    InstanceType = "string",
    AvailabilityZone = "string",
    LogPublishingConfiguration = list(
      Fabric = list(
        ChaincodeLogs = list(
          Cloudwatch = list(
            Enabled = TRUE|FALSE
          )
        ),
        PeerLogs = list(
          Cloudwatch = list(
            Enabled = TRUE|FALSE
          )
        )
      )
    ),
    StateDB = "LevelDB"|"CouchDB"
  )
)
}
}

\keyword{internal}
