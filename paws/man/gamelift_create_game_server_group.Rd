% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_create_game_server_group}
\alias{gamelift_create_game_server_group}
\title{THIS ACTION IS PART OF AMAZON GAMELIFT FLEETIQ WITH GAME SERVER GROUPS,
WHICH IS IN PREVIEW RELEASE AND IS SUBJECT TO CHANGE}
\usage{
gamelift_create_game_server_group(GameServerGroupName, RoleArn, MinSize,
  MaxSize, LaunchTemplate, InstanceDefinitions, AutoScalingPolicy,
  BalancingStrategy, GameServerProtectionPolicy, VpcSubnets, Tags)
}
\arguments{
\item{GameServerGroupName}{[required] An identifier for the new game server group. This value is used to
generate unique ARN identifiers for the EC2 Auto Scaling group and the
GameLift FleetIQ game server group. The name must be unique per Region
per AWS account.}

\item{RoleArn}{[required] The Amazon Resource Name
(\href{https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html}{ARN})
for an IAM role that allows Amazon GameLift to access your EC2 Auto
Scaling groups. The submitted role is validated to ensure that it
contains the necessary permissions for game server groups.}

\item{MinSize}{[required] The minimum number of instances allowed in the EC2 Auto Scaling group.
During autoscaling events, GameLift FleetIQ and EC2 do not scale down
the group below this minimum. In production, this value should be set to
at least 1.}

\item{MaxSize}{[required] The maximum number of instances allowed in the EC2 Auto Scaling group.
During autoscaling events, GameLift FleetIQ and EC2 do not scale up the
group above this maximum.}

\item{LaunchTemplate}{[required] The EC2 launch template that contains configuration settings and game
server code to be deployed to all instances in the game server group.
You can specify the template using either the template name or ID. For
help with creating a launch template, see \href{https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html}{Creating a Launch Template for an Auto Scaling Group}
in the \emph{Amazon EC2 Auto Scaling User Guide}.}

\item{InstanceDefinitions}{[required] A set of EC2 instance types to use when creating instances in the group.
The instance definitions must specify at least two different instance
types that are supported by GameLift FleetIQ. For more information on
instance types, see \href{https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html}{EC2 Instance Types}
in the \emph{Amazon EC2 User Guide}.}

\item{AutoScalingPolicy}{Configuration settings to define a scaling policy for the Auto Scaling
group that is optimized for game hosting. The scaling policy uses the
metric \"PercentUtilizedGameServers\" to maintain a buffer of idle game
servers that can immediately accommodate new games and players. Once the
game server and Auto Scaling groups are created, you can update the
scaling policy settings directly in Auto Scaling Groups.}

\item{BalancingStrategy}{The fallback balancing method to use for the game server group when Spot
instances in a Region become unavailable or are not viable for game
hosting. Once triggered, this method remains active until Spot instances
can once again be used. Method options include:
\itemize{
\item SPOT\\_ONLY \\-- If Spot instances are unavailable, the game server
group provides no hosting capacity. No new instances are started,
and the existing nonviable Spot instances are terminated (once
current gameplay ends) and not replaced.
\item SPOT\\_PREFERRED \\-- If Spot instances are unavailable, the game
server group continues to provide hosting capacity by using
On-Demand instances. Existing nonviable Spot instances are
terminated (once current gameplay ends) and replaced with new
On-Demand instances.
}}

\item{GameServerProtectionPolicy}{A flag that indicates whether instances in the game server group are
protected from early termination. Unprotected instances that have active
game servers running may by terminated during a scale-down event,
causing players to be dropped from the game. Protected instances cannot
be terminated while there are active game servers running. An exception
to this is Spot Instances, which may be terminated by AWS regardless of
protection status. This property is set to NO\\_PROTECTION by default.}

\item{VpcSubnets}{A list of virtual private cloud (VPC) subnets to use with instances in
the game server group. By default, all GameLift FleetIQ-supported
availability zones are used; this parameter allows you to specify VPCs
that you\'ve set up.}

\item{Tags}{A list of labels to assign to the new game server group resource. Tags
are developer-defined key-value pairs. Tagging AWS resources are useful
for resource management, access management, and cost allocation. For
more information, see \href{https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html}{Tagging AWS Resources}
in the \emph{AWS General Reference}. Once the resource is created, you can
use TagResource, UntagResource, and ListTagsForResource to add, remove,
and view tags. The maximum tag limit may be lower than stated. See the
AWS General Reference for actual tagging limits.}
}
\description{
\strong{This action is part of Amazon GameLift FleetIQ with game server
groups, which is in preview release and is subject to change.}
}
\details{
Creates a GameLift FleetIQ game server group to manage a collection of
EC2 instances for game hosting. In addition to creating the game server
group, this action also creates an Auto Scaling group in your AWS
account and establishes a link between the two groups. You have full
control over configuration of the Auto Scaling group, but GameLift
FleetIQ routinely certain Auto Scaling group properties in order to
optimize the group\'s instances for low-cost game hosting. You can view
the status of your game server groups in the GameLift Console. Game
server group metrics and events are emitted to Amazon CloudWatch.

Prior creating a new game server group, you must set up the following:
\itemize{
\item An EC2 launch template. The template provides configuration settings
for a set of EC2 instances and includes the game server build that
you want to deploy and run on each instance. For more information on
creating a launch template, see \href{https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html}{Launching an Instance from a Launch Template}
in the \emph{Amazon EC2 User Guide}.
\item An IAM role. The role sets up limited access to your AWS account,
allowing GameLift FleetIQ to create and manage the EC2 Auto Scaling
group, get instance data, and emit metrics and events to CloudWatch.
For more information on setting up an IAM permissions policy with
principal access for GameLift, see \href{https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-bucket-user-policy-specifying-principal-intro.html}{Specifying a Principal in a Policy}
in the \emph{Amazon S3 Developer Guide}.
}

To create a new game server group, provide a name and specify the IAM
role and EC2 launch template. You also need to provide a list of
instance types to be used in the group and set initial maximum and
minimum limits on the group\'s instance count. You can optionally set an
autoscaling policy with target tracking based on a GameLift FleetIQ
metric.

Once the game server group and corresponding Auto Scaling group are
created, you have full access to change the Auto Scaling group\'s
configuration as needed. Keep in mind, however, that some properties are
periodically updated by GameLift FleetIQ as it balances the group\'s
instances based on availability and cost.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-intro.html}{GameLift FleetIQ Guide}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/gsg-asgroups.html}{Updating a GameLift FleetIQ-Linked Auto Scaling Group}

\strong{Related operations}
\itemize{
\item CreateGameServerGroup
\item ListGameServerGroups
\item DescribeGameServerGroup
\item UpdateGameServerGroup
\item DeleteGameServerGroup
\item ResumeGameServerGroup
\item SuspendGameServerGroup
}
}
\section{Request syntax}{
\preformatted{svc$create_game_server_group(
  GameServerGroupName = "string",
  RoleArn = "string",
  MinSize = 123,
  MaxSize = 123,
  LaunchTemplate = list(
    LaunchTemplateId = "string",
    LaunchTemplateName = "string",
    Version = "string"
  ),
  InstanceDefinitions = list(
    list(
      InstanceType = "c4.large"|"c4.xlarge"|"c4.2xlarge"|"c4.4xlarge"|"c4.8xlarge"|"c5.large"|"c5.xlarge"|"c5.2xlarge"|"c5.4xlarge"|"c5.9xlarge"|"c5.12xlarge"|"c5.18xlarge"|"c5.24xlarge"|"r4.large"|"r4.xlarge"|"r4.2xlarge"|"r4.4xlarge"|"r4.8xlarge"|"r4.16xlarge"|"r5.large"|"r5.xlarge"|"r5.2xlarge"|"r5.4xlarge"|"r5.8xlarge"|"r5.12xlarge"|"r5.16xlarge"|"r5.24xlarge"|"m4.large"|"m4.xlarge"|"m4.2xlarge"|"m4.4xlarge"|"m4.10xlarge"|"m5.large"|"m5.xlarge"|"m5.2xlarge"|"m5.4xlarge"|"m5.8xlarge"|"m5.12xlarge"|"m5.16xlarge"|"m5.24xlarge",
      WeightedCapacity = "string"
    )
  ),
  AutoScalingPolicy = list(
    EstimatedInstanceWarmup = 123,
    TargetTrackingConfiguration = list(
      TargetValue = 123.0
    )
  ),
  BalancingStrategy = "SPOT_ONLY"|"SPOT_PREFERRED",
  GameServerProtectionPolicy = "NO_PROTECTION"|"FULL_PROTECTION",
  VpcSubnets = list(
    "string"
  ),
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  )
)
}
}

\keyword{internal}
