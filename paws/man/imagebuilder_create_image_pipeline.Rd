% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/imagebuilder_operations.R
\name{imagebuilder_create_image_pipeline}
\alias{imagebuilder_create_image_pipeline}
\title{Creates a new image pipeline}
\usage{
imagebuilder_create_image_pipeline(name, description, imageRecipeArn,
  containerRecipeArn, infrastructureConfigurationArn,
  distributionConfigurationArn, imageTestsConfiguration,
  enhancedImageMetadataEnabled, schedule, status, tags, clientToken)
}
\arguments{
\item{name}{[required] The name of the image pipeline.}

\item{description}{The description of the image pipeline.}

\item{imageRecipeArn}{The Amazon Resource Name (ARN) of the image recipe that will be used to
configure images created by this image pipeline.}

\item{containerRecipeArn}{The Amazon Resource Name (ARN) of the container recipe that is used to
configure images created by this container pipeline.}

\item{infrastructureConfigurationArn}{[required] The Amazon Resource Name (ARN) of the infrastructure configuration that
will be used to build images created by this image pipeline.}

\item{distributionConfigurationArn}{The Amazon Resource Name (ARN) of the distribution configuration that
will be used to configure and distribute images created by this image
pipeline.}

\item{imageTestsConfiguration}{The image test configuration of the image pipeline.}

\item{enhancedImageMetadataEnabled}{Collects additional information about the image being created, including
the operating system (OS) version and package list. This information is
used to enhance the overall experience of using EC2 Image Builder.
Enabled by default.}

\item{schedule}{The schedule of the image pipeline.}

\item{status}{The status of the image pipeline.}

\item{tags}{The tags of the image pipeline.}

\item{clientToken}{[required] The idempotency token used to make this request idempotent.}
}
\description{
Creates a new image pipeline. Image pipelines enable you to automate the
creation and distribution of images.
}
\section{Request syntax}{
\preformatted{svc$create_image_pipeline(
  name = "string",
  description = "string",
  imageRecipeArn = "string",
  containerRecipeArn = "string",
  infrastructureConfigurationArn = "string",
  distributionConfigurationArn = "string",
  imageTestsConfiguration = list(
    imageTestsEnabled = TRUE|FALSE,
    timeoutMinutes = 123
  ),
  enhancedImageMetadataEnabled = TRUE|FALSE,
  schedule = list(
    scheduleExpression = "string",
    pipelineExecutionStartCondition = "EXPRESSION_MATCH_ONLY"|"EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE"
  ),
  status = "DISABLED"|"ENABLED",
  tags = list(
    "string"
  ),
  clientToken = "string"
)
}
}

\keyword{internal}
