% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_get_device_pool_compatibility}
\alias{devicefarm_get_device_pool_compatibility}
\title{Gets information about compatibility with a device pool}
\usage{
devicefarm_get_device_pool_compatibility(devicePoolArn, appArn,
  testType, test, configuration)
}
\arguments{
\item{devicePoolArn}{[required] The device pool\'s ARN.}

\item{appArn}{The ARN of the app that is associated with the specified device pool.}

\item{testType}{The test type for the specified device pool.

Allowed values include the following:
\itemize{
\item BUILTIN\\_FUZZ.
\item BUILTIN\\_EXPLORER. For Android, an app explorer that traverses an
Android app, interacting with it and capturing screenshots at the
same time.
\item APPIUM\\_JAVA\\_JUNIT.
\item APPIUM\\_JAVA\\_TESTNG.
\item APPIUM\\_PYTHON.
\item APPIUM\\_NODE.
\item APPIUM\\_RUBY.
\item APPIUM\\_WEB\\_JAVA\\_JUNIT.
\item APPIUM\\_WEB\\_JAVA\\_TESTNG.
\item APPIUM\\_WEB\\_PYTHON.
\item APPIUM\\_WEB\\_NODE.
\item APPIUM\\_WEB\\_RUBY.
\item CALABASH.
\item INSTRUMENTATION.
\item UIAUTOMATION.
\item UIAUTOMATOR.
\item XCTEST.
\item XCTEST\\_UI.
}}

\item{test}{Information about the uploaded test to be run against the device pool.}

\item{configuration}{An object that contains information about the settings for a run.}
}
\description{
Gets information about compatibility with a device pool.
}
\section{Request syntax}{
\preformatted{svc$get_device_pool_compatibility(
  devicePoolArn = "string",
  appArn = "string",
  testType = "BUILTIN_FUZZ"|"BUILTIN_EXPLORER"|"WEB_PERFORMANCE_PROFILE"|"APPIUM_JAVA_JUNIT"|"APPIUM_JAVA_TESTNG"|"APPIUM_PYTHON"|"APPIUM_NODE"|"APPIUM_RUBY"|"APPIUM_WEB_JAVA_JUNIT"|"APPIUM_WEB_JAVA_TESTNG"|"APPIUM_WEB_PYTHON"|"APPIUM_WEB_NODE"|"APPIUM_WEB_RUBY"|"CALABASH"|"INSTRUMENTATION"|"UIAUTOMATION"|"UIAUTOMATOR"|"XCTEST"|"XCTEST_UI"|"REMOTE_ACCESS_RECORD"|"REMOTE_ACCESS_REPLAY",
  test = list(
    type = "BUILTIN_FUZZ"|"BUILTIN_EXPLORER"|"WEB_PERFORMANCE_PROFILE"|"APPIUM_JAVA_JUNIT"|"APPIUM_JAVA_TESTNG"|"APPIUM_PYTHON"|"APPIUM_NODE"|"APPIUM_RUBY"|"APPIUM_WEB_JAVA_JUNIT"|"APPIUM_WEB_JAVA_TESTNG"|"APPIUM_WEB_PYTHON"|"APPIUM_WEB_NODE"|"APPIUM_WEB_RUBY"|"CALABASH"|"INSTRUMENTATION"|"UIAUTOMATION"|"UIAUTOMATOR"|"XCTEST"|"XCTEST_UI"|"REMOTE_ACCESS_RECORD"|"REMOTE_ACCESS_REPLAY",
    testPackageArn = "string",
    testSpecArn = "string",
    filter = "string",
    parameters = list(
      "string"
    )
  ),
  configuration = list(
    extraDataPackageArn = "string",
    networkProfileArn = "string",
    locale = "string",
    location = list(
      latitude = 123.0,
      longitude = 123.0
    ),
    vpceConfigurationArns = list(
      "string"
    ),
    customerArtifactPaths = list(
      iosPaths = list(
        "string"
      ),
      androidPaths = list(
        "string"
      ),
      deviceHostPaths = list(
        "string"
      )
    ),
    radios = list(
      wifi = TRUE|FALSE,
      bluetooth = TRUE|FALSE,
      nfc = TRUE|FALSE,
      gps = TRUE|FALSE
    ),
    auxiliaryApps = list(
      "string"
    ),
    billingMethod = "METERED"|"UNMETERED"
  )
)
}
}

\section{Examples}{
\preformatted{# The following example returns information about the compatibility of a
# specific device pool, given its ARN.
svc$get_device_pool_compatibility(
  appArn = "arn:aws:devicefarm:us-west-2::app:123-456-EXAMPLE-GUID",
  devicePoolArn = "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID",
  testType = "APPIUM_PYTHON"
)
}
}

\keyword{internal}
