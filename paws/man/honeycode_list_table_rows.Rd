% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/honeycode_operations.R
\name{honeycode_list_table_rows}
\alias{honeycode_list_table_rows}
\title{The ListTableRows API allows you to retrieve a list of all the rows in a
table in a workbook}
\usage{
honeycode_list_table_rows(workbookId, tableId, rowIds, maxResults,
  nextToken)
}
\arguments{
\item{workbookId}{[required] The ID of the workbook that contains the table whose rows are being
retrieved.

If a workbook with the specified id could not be found, this API throws
ResourceNotFoundException.}

\item{tableId}{[required] The ID of the table whose rows are being retrieved.

If a table with the specified id could not be found, this API throws
ResourceNotFoundException.}

\item{rowIds}{This parameter is optional. If one or more row ids are specified in this
list, then only the specified row ids are returned in the result. If no
row ids are specified here, then all the rows in the table are returned.}

\item{maxResults}{The maximum number of rows to return in each page of the results.}

\item{nextToken}{This parameter is optional. If a nextToken is not specified, the API
returns the first page of data.

Pagination tokens expire after 1 hour. If you use a token that was
returned more than an hour back, the API will throw ValidationException.}
}
\description{
The ListTableRows API allows you to retrieve a list of all the rows in a
table in a workbook.
}
\section{Request syntax}{
\preformatted{svc$list_table_rows(
  workbookId = "string",
  tableId = "string",
  rowIds = list(
    "string"
  ),
  maxResults = 123,
  nextToken = "string"
)
}
}

\keyword{internal}
