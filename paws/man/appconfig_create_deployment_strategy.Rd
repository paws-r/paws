% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/appconfig_operations.R
\name{appconfig_create_deployment_strategy}
\alias{appconfig_create_deployment_strategy}
\title{A deployment strategy defines important criteria for rolling out your
configuration to the designated targets}
\usage{
appconfig_create_deployment_strategy(Name, Description,
  DeploymentDurationInMinutes, FinalBakeTimeInMinutes, GrowthFactor,
  GrowthType, ReplicateTo, Tags)
}
\arguments{
\item{Name}{[required] A name for the deployment strategy.}

\item{Description}{A description of the deployment strategy.}

\item{DeploymentDurationInMinutes}{[required] Total amount of time for a deployment to last.}

\item{FinalBakeTimeInMinutes}{The amount of time AppConfig monitors for alarms before considering the
deployment to be complete and no longer eligible for automatic roll
back.}

\item{GrowthFactor}{[required] The percentage of targets to receive a deployed configuration during
each interval.}

\item{GrowthType}{The algorithm used to define how percentage grows over time. AWS
AppConfig supports the following growth types:

\strong{Linear}: For this type, AppConfig processes the deployment by
dividing the total number of targets by the value specified for
\verb{Step percentage}. For example, a linear deployment that uses a
\verb{Step percentage} of 10 deploys the configuration to 10 percent of the
hosts. After those deployments are complete, the system deploys the
configuration to the next 10 percent. This continues until 100\% of the
targets have successfully received the configuration.

\strong{Exponential}: For this type, AppConfig processes the deployment
exponentially using the following formula: \code{G*(2^N)}. In this formula,
\code{G} is the growth factor specified by the user and \code{N} is the number of
steps until the configuration is deployed to all targets. For example,
if you specify a growth factor of 2, then the system rolls out the
configuration as follows:

\code{2*(2^0)}

\code{2*(2^1)}

\code{2*(2^2)}

Expressed numerically, the deployment rolls out as follows: 2\% of the
targets, 4\% of the targets, 8\% of the targets, and continues until the
configuration has been deployed to all targets.}

\item{ReplicateTo}{[required] Save the deployment strategy to a Systems Manager (SSM) document.}

\item{Tags}{Metadata to assign to the deployment strategy. Tags help organize and
categorize your AppConfig resources. Each tag consists of a key and an
optional value, both of which you define.}
}
\description{
A deployment strategy defines important criteria for rolling out your
configuration to the designated targets. A deployment strategy includes:
the overall duration required, a percentage of targets to receive the
deployment during each interval, an algorithm that defines how
percentage grows, and bake time.
}
\section{Request syntax}{
\preformatted{svc$create_deployment_strategy(
  Name = "string",
  Description = "string",
  DeploymentDurationInMinutes = 123,
  FinalBakeTimeInMinutes = 123,
  GrowthFactor = 123.0,
  GrowthType = "LINEAR"|"EXPONENTIAL",
  ReplicateTo = "NONE"|"SSM_DOCUMENT",
  Tags = list(
    "string"
  )
)
}
}

\keyword{internal}
