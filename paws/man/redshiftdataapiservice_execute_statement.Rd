% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redshiftdataapiservice_operations.R
\name{redshiftdataapiservice_execute_statement}
\alias{redshiftdataapiservice_execute_statement}
\title{Runs an SQL statement, which can be data manipulation language (DML) or
data definition language (DDL)}
\usage{
redshiftdataapiservice_execute_statement(ClusterIdentifier, Database,
  DbUser, SecretArn, Sql, StatementName, WithEvent)
}
\arguments{
\item{ClusterIdentifier}{[required] The cluster identifier. This parameter is required when authenticating
using either AWS Secrets Manager or temporary credentials.}

\item{Database}{The name of the database. This parameter is required when authenticating
using temporary credentials.}

\item{DbUser}{The database user name. This parameter is required when authenticating
using temporary credentials.}

\item{SecretArn}{The name or ARN of the secret that enables access to the database. This
parameter is required when authenticating using AWS Secrets Manager.}

\item{Sql}{[required] The SQL statement text to run.}

\item{StatementName}{The name of the SQL statement. You can name the SQL statement when you
create it to identify the query.}

\item{WithEvent}{A value that indicates whether to send an event to the Amazon
EventBridge event bus after the SQL statement runs.}
}
\description{
Runs an SQL statement, which can be data manipulation language (DML) or
data definition language (DDL). This statement must be a single SQL
statement. Depending on the authorization method, use one of the
following combinations of request parameters:
}
\details{
\itemize{
\item AWS Secrets Manager - specify the Amazon Resource Name (ARN) of the
secret and the cluster identifier that matches the cluster in the
secret.
\item Temporary credentials - specify the cluster identifier, the database
name, and the database user name. Permission to call the
\code{redshift:GetClusterCredentials} operation is required to use this
method.
}
}
\section{Request syntax}{
\preformatted{svc$execute_statement(
  ClusterIdentifier = "string",
  Database = "string",
  DbUser = "string",
  SecretArn = "string",
  Sql = "string",
  StatementName = "string",
  WithEvent = TRUE|FALSE
)
}
}

\keyword{internal}
