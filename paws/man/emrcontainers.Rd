% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emrcontainers_service.R
\name{emrcontainers}
\alias{emrcontainers}
\title{Amazon EMR Containers}
\usage{
emrcontainers(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
Amazon EMR on EKS provides a deployment option for Amazon EMR that
allows you to run open-source big data frameworks on Amazon Elastic
Kubernetes Service (Amazon EKS). With this deployment option, you can
focus on running analytics workloads while Amazon EMR on EKS builds,
configures, and manages containers for open-source applications. For
more information about Amazon EMR on EKS concepts and tasks, see \href{https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/emr-eks.html}{What is Amazon EMR on EKS}.

\emph{Amazon EMR containers} is the API name for Amazon EMR on EKS. The
\code{emr-containers} prefix is used in the following scenarios:
\itemize{
\item It is the prefix in the CLI commands for Amazon EMR on EKS. For
example, \verb{aws emr-containers start-job-run}.
\item It is the prefix before IAM policy actions for Amazon EMR on EKS.
For example, \verb{"Action": \\\[ "emr-containers:StartJobRun"\\\]}. For
more information, see \href{https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions}{Policy actions for Amazon EMR on EKS}.
\item It is the prefix used in Amazon EMR on EKS service endpoints. For
example, \verb{emr-containers.us-east-2.amazonaws.com}. For more
information, see \href{https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/service-quotas.html#service-endpoints}{Amazon EMR on EKS Service Endpoints}.
}
}
\section{Service syntax}{
\preformatted{svc <- emrcontainers(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=emrcontainers_cancel_job_run]{cancel_job_run} \tab Cancels a job run\cr
\link[=emrcontainers_create_managed_endpoint]{create_managed_endpoint} \tab Creates a managed endpoint\cr
\link[=emrcontainers_create_virtual_cluster]{create_virtual_cluster} \tab Creates a virtual cluster\cr
\link[=emrcontainers_delete_managed_endpoint]{delete_managed_endpoint} \tab Deletes a managed endpoint\cr
\link[=emrcontainers_delete_virtual_cluster]{delete_virtual_cluster} \tab Deletes a virtual cluster\cr
\link[=emrcontainers_describe_job_run]{describe_job_run} \tab Displays detailed information about a job run\cr
\link[=emrcontainers_describe_managed_endpoint]{describe_managed_endpoint} \tab Displays detailed information about a managed endpoint\cr
\link[=emrcontainers_describe_virtual_cluster]{describe_virtual_cluster} \tab Displays detailed information about a specified virtual cluster\cr
\link[=emrcontainers_list_job_runs]{list_job_runs} \tab Lists job runs based on a set of parameters\cr
\link[=emrcontainers_list_managed_endpoints]{list_managed_endpoints} \tab Lists managed endpoints based on a set of parameters\cr
\link[=emrcontainers_list_tags_for_resource]{list_tags_for_resource} \tab Lists the tags assigned to the resources\cr
\link[=emrcontainers_list_virtual_clusters]{list_virtual_clusters} \tab Lists information about the specified virtual cluster\cr
\link[=emrcontainers_start_job_run]{start_job_run} \tab Starts a job run\cr
\link[=emrcontainers_tag_resource]{tag_resource} \tab Assigns tags to resources\cr
\link[=emrcontainers_untag_resource]{untag_resource} \tab Removes tags from resources
}
}

\examples{
\dontrun{
svc <- emrcontainers()
svc$cancel_job_run(
  Foo = 123
)
}

}
