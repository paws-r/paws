% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/accessanalyzer_service.R
\name{accessanalyzer}
\alias{accessanalyzer}
\title{Access Analyzer}
\usage{
accessanalyzer(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
AWS IAM Access Analyzer helps identify potential resource-access risks
by enabling you to identify any policies that grant access to an
external principal. It does this by using logic-based reasoning to
analyze resource-based policies in your AWS environment. An external
principal can be another AWS account, a root user, an IAM user or role,
a federated user, an AWS service, or an anonymous user. This guide
describes the AWS IAM Access Analyzer operations that you can call
programmatically. For general information about Access Analyzer, see the
\href{https://docs.aws.amazon.com/IAM/latest/UserGuide/what-is-access-analyzer.html}{AWS IAM Access Analyzer section of the IAM User Guide}.

To start using Access Analyzer, you first need to create an analyzer.
}
\section{Service syntax}{
\preformatted{svc <- accessanalyzer(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=accessanalyzer_create_analyzer]{create_analyzer} \tab Creates an analyzer for your account \cr
\link[=accessanalyzer_create_archive_rule]{create_archive_rule} \tab Creates an archive rule for the specified analyzer \cr
\link[=accessanalyzer_delete_analyzer]{delete_analyzer} \tab Deletes the specified analyzer \cr
\link[=accessanalyzer_delete_archive_rule]{delete_archive_rule} \tab Deletes the specified archive rule \cr
\link[=accessanalyzer_get_analyzed_resource]{get_analyzed_resource} \tab Retrieves information about a resource that was analyzed \cr
\link[=accessanalyzer_get_analyzer]{get_analyzer} \tab Retrieves information about the specified analyzer \cr
\link[=accessanalyzer_get_archive_rule]{get_archive_rule} \tab Retrieves information about an archive rule \cr
\link[=accessanalyzer_get_finding]{get_finding} \tab Retrieves information about the specified finding \cr
\link[=accessanalyzer_list_analyzed_resources]{list_analyzed_resources} \tab Retrieves a list of resources of the specified type that have been analyzed by the specified analyzer\cr
\link[=accessanalyzer_list_analyzers]{list_analyzers} \tab Retrieves a list of analyzers \cr
\link[=accessanalyzer_list_archive_rules]{list_archive_rules} \tab Retrieves a list of archive rules created for the specified analyzer \cr
\link[=accessanalyzer_list_findings]{list_findings} \tab Retrieves a list of findings generated by the specified analyzer \cr
\link[=accessanalyzer_list_tags_for_resource]{list_tags_for_resource} \tab Retrieves a list of tags applied to the specified resource \cr
\link[=accessanalyzer_start_resource_scan]{start_resource_scan} \tab Immediately starts a scan of the policies applied to the specified resource \cr
\link[=accessanalyzer_tag_resource]{tag_resource} \tab Adds a tag to the specified resource \cr
\link[=accessanalyzer_untag_resource]{untag_resource} \tab Removes a tag from the specified resource \cr
\link[=accessanalyzer_update_archive_rule]{update_archive_rule} \tab Updates the criteria and values for the specified archive rule \cr
\link[=accessanalyzer_update_findings]{update_findings} \tab Updates the status for the specified findings
}
}

\examples{
\dontrun{
svc <- accessanalyzer()
svc$create_analyzer(
  Foo = 123
)
}

}
