% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iot_operations.R
\name{iot_update_certificate}
\alias{iot_update_certificate}
\title{Updates the status of the specified certificate}
\usage{
iot_update_certificate(certificateId, newStatus)
}
\arguments{
\item{certificateId}{[required] The ID of the certificate. (The last part of the certificate ARN
contains the certificate ID.)}

\item{newStatus}{[required] The new status.

\strong{Note:} Setting the status to PENDING\\_TRANSFER or PENDING\\_ACTIVATION
will result in an exception being thrown. PENDING\\_TRANSFER and
PENDING\\_ACTIVATION are statuses used internally by AWS IoT. They are
not intended for developer use.

\strong{Note:} The status value REGISTER\\_INACTIVE is deprecated and should
not be used.}
}
\description{
Updates the status of the specified certificate. This operation is
idempotent.
}
\details{
Certificates must be in the ACTIVE state to authenticate devices that
use a certificate to connect to AWS IoT.

Within a few minutes of updating a certificate from the ACTIVE state to
any other state, AWS IoT disconnects all devices that used that
certificate to connect. Devices cannot use a certificate that is not in
the ACTIVE state to reconnect.
}
\section{Request syntax}{
\preformatted{svc$update_certificate(
  certificateId = "string",
  newStatus = "ACTIVE"|"INACTIVE"|"REVOKED"|"PENDING_TRANSFER"|"REGISTER_INACTIVE"|"PENDING_ACTIVATION"
)
}
}

\keyword{internal}
