% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wafv2_operations.R
\name{wafv2_put_logging_configuration}
\alias{wafv2_put_logging_configuration}
\title{This is the latest version of AWS WAF, named AWS WAFV2, released in
November, 2019}
\usage{
wafv2_put_logging_configuration(LoggingConfiguration)
}
\arguments{
\item{LoggingConfiguration}{[required]}
}
\description{
This is the latest version of \strong{AWS WAF}, named AWS WAFV2, released in
November, 2019. For information, including how to migrate your AWS WAF
resources from the prior release, see the \href{https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html}{AWS WAF Developer Guide}.

Enables the specified LoggingConfiguration, to start logging from a web
ACL, according to the configuration provided.

You can access information about all traffic that AWS WAF inspects using
the following steps:
\enumerate{
\item Create an Amazon Kinesis Data Firehose.

Create the data firehose with a PUT source and in the Region that
you are operating. If you are capturing logs for Amazon CloudFront,
always create the firehose in US East (N. Virginia).

Give the data firehose a name that starts with the prefix
\verb{aws-waf-logs-}. For example, \code{aws-waf-logs-us-east-2-analytics}.

Do not create the data firehose using a \verb{Kinesis stream} as your
source.
\item Associate that firehose to your web ACL using a
\code{\link[=wafv2_put_logging_configuration]{put_logging_configuration}}
request.
}

When you successfully enable logging using a
\code{\link[=wafv2_put_logging_configuration]{put_logging_configuration}} request,
AWS WAF will create a service linked role with the necessary permissions
to write logs to the Amazon Kinesis Data Firehose. For more information,
see \href{https://docs.aws.amazon.com/waf/latest/developerguide/logging.html}{Logging Web ACL Traffic Information}
in the \emph{AWS WAF Developer Guide}.
}
\section{Request syntax}{
\preformatted{svc$put_logging_configuration(
  LoggingConfiguration = list(
    ResourceArn = "string",
    LogDestinationConfigs = list(
      "string"
    ),
    RedactedFields = list(
      list(
        SingleHeader = list(
          Name = "string"
        ),
        SingleQueryArgument = list(
          Name = "string"
        ),
        AllQueryArguments = list(),
        UriPath = list(),
        QueryString = list(),
        Body = list(),
        Method = list()
      )
    ),
    ManagedByFirewallManager = TRUE|FALSE
  )
)
}
}

\keyword{internal}
