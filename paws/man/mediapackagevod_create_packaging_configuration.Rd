% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediapackagevod_operations.R
\name{mediapackagevod_create_packaging_configuration}
\alias{mediapackagevod_create_packaging_configuration}
\title{Creates a new MediaPackage VOD PackagingConfiguration resource}
\usage{
mediapackagevod_create_packaging_configuration(CmafPackage, DashPackage,
  HlsPackage, Id, MssPackage, PackagingGroupId, Tags)
}
\arguments{
\item{CmafPackage}{}

\item{DashPackage}{}

\item{HlsPackage}{}

\item{Id}{[required] The ID of the PackagingConfiguration.}

\item{MssPackage}{}

\item{PackagingGroupId}{[required] The ID of a PackagingGroup.}

\item{Tags}{}
}
\description{
Creates a new MediaPackage VOD PackagingConfiguration resource.
}
\section{Request syntax}{
\preformatted{svc$create_packaging_configuration(
  CmafPackage = list(
    Encryption = list(
      SpekeKeyProvider = list(
        RoleArn = "string",
        SystemIds = list(
          "string"
        ),
        Url = "string"
      )
    ),
    HlsManifests = list(
      list(
        AdMarkers = "NONE"|"SCTE35_ENHANCED"|"PASSTHROUGH",
        IncludeIframeOnlyStream = TRUE|FALSE,
        ManifestName = "string",
        ProgramDateTimeIntervalSeconds = 123,
        RepeatExtXKey = TRUE|FALSE,
        StreamSelection = list(
          MaxVideoBitsPerSecond = 123,
          MinVideoBitsPerSecond = 123,
          StreamOrder = "ORIGINAL"|"VIDEO_BITRATE_ASCENDING"|"VIDEO_BITRATE_DESCENDING"
        )
      )
    ),
    SegmentDurationSeconds = 123
  ),
  DashPackage = list(
    DashManifests = list(
      list(
        ManifestLayout = "FULL"|"COMPACT",
        ManifestName = "string",
        MinBufferTimeSeconds = 123,
        Profile = "NONE"|"HBBTV_1_5",
        StreamSelection = list(
          MaxVideoBitsPerSecond = 123,
          MinVideoBitsPerSecond = 123,
          StreamOrder = "ORIGINAL"|"VIDEO_BITRATE_ASCENDING"|"VIDEO_BITRATE_DESCENDING"
        )
      )
    ),
    Encryption = list(
      SpekeKeyProvider = list(
        RoleArn = "string",
        SystemIds = list(
          "string"
        ),
        Url = "string"
      )
    ),
    PeriodTriggers = list(
      "ADS"
    ),
    SegmentDurationSeconds = 123,
    SegmentTemplateFormat = "NUMBER_WITH_TIMELINE"|"TIME_WITH_TIMELINE"|"NUMBER_WITH_DURATION"
  ),
  HlsPackage = list(
    Encryption = list(
      ConstantInitializationVector = "string",
      EncryptionMethod = "AES_128"|"SAMPLE_AES",
      SpekeKeyProvider = list(
        RoleArn = "string",
        SystemIds = list(
          "string"
        ),
        Url = "string"
      )
    ),
    HlsManifests = list(
      list(
        AdMarkers = "NONE"|"SCTE35_ENHANCED"|"PASSTHROUGH",
        IncludeIframeOnlyStream = TRUE|FALSE,
        ManifestName = "string",
        ProgramDateTimeIntervalSeconds = 123,
        RepeatExtXKey = TRUE|FALSE,
        StreamSelection = list(
          MaxVideoBitsPerSecond = 123,
          MinVideoBitsPerSecond = 123,
          StreamOrder = "ORIGINAL"|"VIDEO_BITRATE_ASCENDING"|"VIDEO_BITRATE_DESCENDING"
        )
      )
    ),
    SegmentDurationSeconds = 123,
    UseAudioRenditionGroup = TRUE|FALSE
  ),
  Id = "string",
  MssPackage = list(
    Encryption = list(
      SpekeKeyProvider = list(
        RoleArn = "string",
        SystemIds = list(
          "string"
        ),
        Url = "string"
      )
    ),
    MssManifests = list(
      list(
        ManifestName = "string",
        StreamSelection = list(
          MaxVideoBitsPerSecond = 123,
          MinVideoBitsPerSecond = 123,
          StreamOrder = "ORIGINAL"|"VIDEO_BITRATE_ASCENDING"|"VIDEO_BITRATE_DESCENDING"
        )
      )
    ),
    SegmentDurationSeconds = 123
  ),
  PackagingGroupId = "string",
  Tags = list(
    "string"
  )
)
}
}

\keyword{internal}
