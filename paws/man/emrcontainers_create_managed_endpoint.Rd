% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emrcontainers_operations.R
\name{emrcontainers_create_managed_endpoint}
\alias{emrcontainers_create_managed_endpoint}
\title{Creates a managed endpoint}
\usage{
emrcontainers_create_managed_endpoint(name, virtualClusterId, type,
  releaseLabel, executionRoleArn, certificateArn, configurationOverrides,
  clientToken, tags)
}
\arguments{
\item{name}{[required] The name of the managed endpoint.}

\item{virtualClusterId}{[required] The ID of the virtual cluster for which a managed endpoint is created.}

\item{type}{[required] The type of the managed endpoint.}

\item{releaseLabel}{[required] The Amazon EMR release version.}

\item{executionRoleArn}{[required] The ARN of the execution role.}

\item{certificateArn}{[required] The certificate ARN of the managed endpoint.}

\item{configurationOverrides}{The configuration settings that will be used to override existing
configurations.}

\item{clientToken}{[required] The client idempotency token for this create call.}

\item{tags}{The tags of the managed endpoint.}
}
\description{
Creates a managed endpoint. A managed endpoint is a gateway that
connects EMR Studio to Amazon EMR on EKS so that EMR Studio can
communicate with your virtual cluster.
}
\section{Request syntax}{
\preformatted{svc$create_managed_endpoint(
  name = "string",
  virtualClusterId = "string",
  type = "string",
  releaseLabel = "string",
  executionRoleArn = "string",
  certificateArn = "string",
  configurationOverrides = list(
    applicationConfiguration = list(
      list(
        classification = "string",
        properties = list(
          "string"
        ),
        configurations = list()
      )
    ),
    monitoringConfiguration = list(
      persistentAppUI = "ENABLED"|"DISABLED",
      cloudWatchMonitoringConfiguration = list(
        logGroupName = "string",
        logStreamNamePrefix = "string"
      ),
      s3MonitoringConfiguration = list(
        logUri = "string"
      )
    )
  ),
  clientToken = "string",
  tags = list(
    "string"
  )
)
}
}

\keyword{internal}
