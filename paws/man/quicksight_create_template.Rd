% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quicksight_operations.R
\name{quicksight_create_template}
\alias{quicksight_create_template}
\title{Creates a template from an existing QuickSight analysis or template}
\usage{
quicksight_create_template(AwsAccountId, TemplateId, Name, Permissions,
  SourceEntity, Tags, VersionDescription)
}
\arguments{
\item{AwsAccountId}{[required] The ID for the AWS account that the group is in. Currently, you use the
ID for the AWS account that contains your Amazon QuickSight account.}

\item{TemplateId}{[required] An ID for the template you want to create. This is unique per AWS region
per AWS account.}

\item{Name}{A display name for the template.}

\item{Permissions}{A list of resource permissions to be set on the template.}

\item{SourceEntity}{[required] The Amazon Resource Name (ARN) of the source entity from which this
template is being created. Templates can be currently created from an
analysis or another template. If the ARN is for an analysis, you must
include its dataset references.}

\item{Tags}{Contains a map of the key-value pairs for the resource tag or tags
assigned to the resource.}

\item{VersionDescription}{A description of the current template version being created. This API
created the first version of the template. Every time UpdateTemplate is
called a new version is created. Each version of the template maintains
a description of the version in the VersionDescription field.}
}
\description{
Creates a template from an existing QuickSight analysis or template. The
resulting template can be used to create a dashboard.
}
\details{
A template is an entity in QuickSight which encapsulates the metadata
required to create an analysis that can be used to create dashboard. It
adds a layer of abstraction by use placeholders to replace the dataset
associated with the analysis. You can use templates to create dashboards
by replacing dataset placeholders with datasets which follow the same
schema that was used to create the source analysis and template.
}
\section{Request syntax}{
\preformatted{svc$create_template(
  AwsAccountId = "string",
  TemplateId = "string",
  Name = "string",
  Permissions = list(
    list(
      Principal = "string",
      Actions = list(
        "string"
      )
    )
  ),
  SourceEntity = list(
    SourceAnalysis = list(
      Arn = "string",
      DataSetReferences = list(
        list(
          DataSetPlaceholder = "string",
          DataSetArn = "string"
        )
      )
    ),
    SourceTemplate = list(
      Arn = "string"
    )
  ),
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  ),
  VersionDescription = "string"
)
}
}

\keyword{internal}
