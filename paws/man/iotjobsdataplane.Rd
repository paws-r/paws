% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iotjobsdataplane_service.R
\name{iotjobsdataplane}
\alias{iotjobsdataplane}
\title{AWS IoT Jobs Data Plane}
\usage{
iotjobsdataplane(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
AWS IoT Jobs is a service that allows you to define a set of jobs ---
remote operations that are sent to and executed on one or more devices
connected to AWS IoT. For example, you can define a job that instructs a
set of devices to download and install application or firmware updates,
reboot, rotate certificates, or perform remote troubleshooting
operations.

To create a job, you make a job document which is a description of the
remote operations to be performed, and you specify a list of targets
that should perform the operations. The targets can be individual
things, thing groups or both.

AWS IoT Jobs sends a message to inform the targets that a job is
available. The target starts the execution of the job by downloading the
job document, performing the operations it specifies, and reporting its
progress to AWS IoT. The Jobs service provides commands to track the
progress of a job on a specific target and for all the targets of the
job
}
\section{Service syntax}{
\preformatted{svc <- iotjobsdataplane(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Examples}{
\preformatted{svc$describe_job_execution(
  Foo = 123
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=iotjobsdataplane_describe_job_execution]{describe_job_execution} \tab Gets details of a job execution \cr
\link[=iotjobsdataplane_get_pending_job_executions]{get_pending_job_executions} \tab Gets the list of all jobs for a thing that are not in a terminal status \cr
\link[=iotjobsdataplane_start_next_pending_job_execution]{start_next_pending_job_execution} \tab Gets and starts the next pending (status IN_PROGRESS or QUEUED) job execution for a thing\cr
\link[=iotjobsdataplane_update_job_execution]{update_job_execution} \tab Updates the status of a job execution
}
}

