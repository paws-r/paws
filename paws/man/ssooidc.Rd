% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssooidc_service.R
\name{ssooidc}
\alias{ssooidc}
\title{AWS SSO OIDC}
\usage{
ssooidc(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
AWS Single Sign-On (SSO) OpenID Connect (OIDC) is a web service that
enables a client (such as AWS CLI or a native application) to register
with AWS SSO. The service also enables the client to fetch the user's
access token upon successful authentication and authorization with AWS
SSO. This service conforms with the OAuth 2.0 based implementation of
the device authorization grant standard
(\url{https://tools.ietf.org/html/rfc8628}).

For general information about AWS SSO, see \href{https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html}{What is AWS Single Sign-On?}
in the \emph{AWS SSO User Guide}.

This API reference guide describes the AWS SSO OIDC operations that you
can call programatically and includes detailed information on data types
and errors.

AWS provides SDKs that consist of libraries and sample code for various
programming languages and platforms such as Java, Ruby, .Net, iOS, and
Android. The SDKs provide a convenient way to create programmatic access
to AWS SSO and other AWS services. For more information about the AWS
SDKs, including how to download and install them, see \href{http://aws.amazon.com/tools/}{Tools for Amazon Web Services}.
}
\section{Service syntax}{
\preformatted{svc <- ssooidc(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=ssooidc_create_token]{create_token} \tab Creates and returns an access token for the authorized client \cr
\link[=ssooidc_register_client]{register_client} \tab Registers a client with AWS SSO \cr
\link[=ssooidc_start_device_authorization]{start_device_authorization} \tab Initiates device authorization by requesting a pair of verification codes from the authorization service
}
}

\examples{
\dontrun{
svc <- ssooidc()
svc$create_token(
  Foo = 123
)
}

}
