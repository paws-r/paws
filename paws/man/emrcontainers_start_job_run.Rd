% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emrcontainers_operations.R
\name{emrcontainers_start_job_run}
\alias{emrcontainers_start_job_run}
\title{Starts a job run}
\usage{
emrcontainers_start_job_run(name, virtualClusterId, clientToken,
  executionRoleArn, releaseLabel, jobDriver, configurationOverrides, tags)
}
\arguments{
\item{name}{The name of the job run.}

\item{virtualClusterId}{[required] The virtual cluster ID for which the job run request is submitted.}

\item{clientToken}{[required] The client idempotency token of the job run request.}

\item{executionRoleArn}{[required] The execution role ARN for the job run.}

\item{releaseLabel}{[required] The Amazon EMR release version to use for the job run.}

\item{jobDriver}{[required] The job driver for the job run.}

\item{configurationOverrides}{The configuration overrides for the job run.}

\item{tags}{The tags assigned to job runs.}
}
\description{
Starts a job run. A job run is a unit of work, such as a Spark jar,
PySpark script, or SparkSQL query, that you submit to Amazon EMR on EKS.
}
\section{Request syntax}{
\preformatted{svc$start_job_run(
  name = "string",
  virtualClusterId = "string",
  clientToken = "string",
  executionRoleArn = "string",
  releaseLabel = "string",
  jobDriver = list(
    sparkSubmitJobDriver = list(
      entryPoint = "string",
      entryPointArguments = list(
        "string"
      ),
      sparkSubmitParameters = "string"
    )
  ),
  configurationOverrides = list(
    applicationConfiguration = list(
      list(
        classification = "string",
        properties = list(
          "string"
        ),
        configurations = list()
      )
    ),
    monitoringConfiguration = list(
      persistentAppUI = "ENABLED"|"DISABLED",
      cloudWatchMonitoringConfiguration = list(
        logGroupName = "string",
        logStreamNamePrefix = "string"
      ),
      s3MonitoringConfiguration = list(
        logUri = "string"
      )
    )
  ),
  tags = list(
    "string"
  )
)
}
}

\keyword{internal}
