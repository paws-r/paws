% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_describe_game_server_instances}
\alias{gamelift_describe_game_server_instances}
\title{This operation is used with the Amazon GameLift FleetIQ solution and
game server groups}
\usage{
gamelift_describe_game_server_instances(GameServerGroupName,
  InstanceIds, Limit, NextToken)
}
\arguments{
\item{GameServerGroupName}{[required] A unique identifier for the game server group. Use either the
GameServerGroup name or ARN value.}

\item{InstanceIds}{The EC2 instance IDs that you want to retrieve status on. EC2 instance
IDs use a 17-character format, for example: \verb{i-1234567890abcdef0}. To
retrieve all instances in the game server group, leave this parameter
empty.}

\item{Limit}{The maximum number of results to return. Use this parameter with
\code{NextToken} to get results as a set of sequential segments.}

\item{NextToken}{A token that indicates the start of the next sequential segment of
results. Use the token returned with the previous call to this
operation. To start at the beginning of the result set, do not specify a
value.}
}
\description{
\strong{This operation is used with the Amazon GameLift FleetIQ solution and
game server groups.}

Retrieves status information about the Amazon EC2 instances associated
with a GameLift FleetIQ game server group. Use this operation to detect
when instances are active or not available to host new game servers. If
you are looking for instance configuration information, call
DescribeGameServerGroup or access the corresponding Auto Scaling group
properties.

To request status for all instances in the game server group, provide a
game server group ID only. To request status for specific instances,
provide the game server group ID and one or more instance IDs. Use the
pagination parameters to retrieve results in sequential segments. If
successful, a collection of \code{GameServerInstance} objects is returned.

This operation is not designed to be called with every game server claim
request; this practice can cause you to exceed your API limit, which
results in errors. Instead, as a best practice, cache the results and
refresh your cache no more than once every 10 seconds.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/gsg-intro.html}{GameLift FleetIQ Guide}

\strong{Related operations}
\itemize{
\item CreateGameServerGroup
\item ListGameServerGroups
\item DescribeGameServerGroup
\item UpdateGameServerGroup
\item DeleteGameServerGroup
\item ResumeGameServerGroup
\item SuspendGameServerGroup
\item DescribeGameServerInstances
}
}
\section{Request syntax}{
\preformatted{svc$describe_game_server_instances(
  GameServerGroupName = "string",
  InstanceIds = list(
    "string"
  ),
  Limit = 123,
  NextToken = "string"
)
}
}

\keyword{internal}
