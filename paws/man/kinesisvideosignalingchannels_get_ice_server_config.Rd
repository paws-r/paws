% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kinesisvideosignalingchannels_operations.R
\name{kinesisvideosignalingchannels_get_ice_server_config}
\alias{kinesisvideosignalingchannels_get_ice_server_config}
\title{Gets the Interactive Connectivity Establishment (ICE) server
configuration information, including URIs, username, and password which
can be used to configure the WebRTC connection}
\usage{
kinesisvideosignalingchannels_get_ice_server_config(ChannelARN,
  ClientId, Service, Username)
}
\arguments{
\item{ChannelARN}{[required] The ARN of the signaling channel to be used for the peer-to-peer
connection between configured peers.}

\item{ClientId}{Unique identifier for the viewer. Must be unique within the signaling
channel.}

\item{Service}{Specifies the desired service. Currently, \code{TURN} is the only valid
value.}

\item{Username}{An optional user ID to be associated with the credentials.}
}
\description{
Gets the Interactive Connectivity Establishment (ICE) server
configuration information, including URIs, username, and password which
can be used to configure the WebRTC connection. The ICE component uses
this configuration information to setup the WebRTC connection, including
authenticating with the Traversal Using Relays around NAT (TURN) relay
server.
}
\details{
TURN is a protocol that is used to improve the connectivity of
peer-to-peer applications. By providing a cloud-based relay service,
TURN ensures that a connection can be established even when one or more
peers are incapable of a direct peer-to-peer connection. For more
information, see \href{https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00}{A REST API For Access To TURN Services}.

You can invoke this API to establish a fallback mechanism in case either
of the peers is unable to establish a direct peer-to-peer connection
over a signaling channel. You must specify either a signaling channel
ARN or the client ID in order to invoke this API.
}
\section{Request syntax}{
\preformatted{svc$get_ice_server_config(
  ChannelARN = "string",
  ClientId = "string",
  Service = "TURN",
  Username = "string"
)
}
}

\keyword{internal}
