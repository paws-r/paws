% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/greengrassv2_operations.R
\name{greengrassv2_create_component_version}
\alias{greengrassv2_create_component_version}
\title{Creates a component}
\usage{
greengrassv2_create_component_version(inlineRecipe, lambdaFunction,
  tags)
}
\arguments{
\item{inlineRecipe}{The recipe to use to create the component. The recipe defines the
component's metadata, parameters, dependencies, lifecycle, artifacts,
and platform compatibility.

You must specify either \code{inlineRecipe} or \code{lambdaFunction}.}

\item{lambdaFunction}{The parameters to create a component from a Lambda function.

You must specify either \code{inlineRecipe} or \code{lambdaFunction}.}

\item{tags}{A list of key-value pairs that contain metadata for the resource. For
more information, see Tag your resources in the \emph{AWS IoT Greengrass V2
Developer Guide}.}
}
\description{
Creates a component. Components are software that run on AWS IoT
Greengrass core devices. After you develop and test a component on your
core device, you can use this operation to upload your component to AWS
IoT Greengrass. Then, you can deploy the component to other core
devices.

You can use this operation to do the following:
\itemize{
\item \strong{Create components from recipes}

Create a component from a recipe, which is a file that defines the
component's metadata, parameters, dependencies, lifecycle,
artifacts, and platform capability. For more information, see \href{https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html}{AWS IoT Greengrass component recipe reference}
in the \emph{AWS IoT Greengrass V2 Developer Guide}.

To create a component from a recipe, specify \code{inlineRecipe} when you
call this operation.
\item \strong{Create components from Lambda functions}

Create a component from an AWS Lambda function that runs on AWS IoT
Greengrass. This creates a recipe and artifacts from the Lambda
function's deployment package. You can use this operation to migrate
Lambda functions from AWS IoT Greengrass V1 to AWS IoT Greengrass
V2.

This function only accepts Lambda functions that use the following
runtimes:
\itemize{
\item Python 2.7 – \code{python2.7}
\item Python 3.7 – \code{python3.7}
\item Python 3.8 – \code{python3.8}
\item Java 8 – \code{java8}
\item Node.js 10 – \code{nodejs10.x}
\item Node.js 12 – \code{nodejs12.x}
}

To create a component from a Lambda function, specify
\code{lambdaFunction} when you call this operation.
}
}
\section{Request syntax}{
\preformatted{svc$create_component_version(
  inlineRecipe = raw,
  lambdaFunction = list(
    lambdaArn = "string",
    componentName = "string",
    componentVersion = "string",
    componentPlatforms = list(
      list(
        name = "string",
        attributes = list(
          "string"
        )
      )
    ),
    componentDependencies = list(
      list(
        versionRequirement = "string",
        dependencyType = "HARD"|"SOFT"
      )
    ),
    componentLambdaParameters = list(
      eventSources = list(
        list(
          topic = "string",
          type = "PUB_SUB"|"IOT_CORE"
        )
      ),
      maxQueueSize = 123,
      maxInstancesCount = 123,
      maxIdleTimeInSeconds = 123,
      timeoutInSeconds = 123,
      statusTimeoutInSeconds = 123,
      pinned = TRUE|FALSE,
      inputPayloadEncodingType = "json"|"binary",
      execArgs = list(
        "string"
      ),
      environmentVariables = list(
        "string"
      ),
      linuxProcessParams = list(
        isolationMode = "GreengrassContainer"|"NoContainer",
        containerParams = list(
          memorySizeInKB = 123,
          mountROSysfs = TRUE|FALSE,
          volumes = list(
            list(
              sourcePath = "string",
              destinationPath = "string",
              permission = "ro"|"rw",
              addGroupOwner = TRUE|FALSE
            )
          ),
          devices = list(
            list(
              path = "string",
              permission = "ro"|"rw",
              addGroupOwner = TRUE|FALSE
            )
          )
        )
      )
    )
  ),
  tags = list(
    "string"
  )
)
}
}

\keyword{internal}
