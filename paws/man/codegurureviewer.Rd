% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codegurureviewer_service.R
\name{codegurureviewer}
\alias{codegurureviewer}
\title{Amazon CodeGuru Reviewer}
\usage{
codegurureviewer(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\description{
This section provides documentation for the Amazon CodeGuru Reviewer API
operations. CodeGuru Reviewer is a service that uses program analysis
and machine learning to detect potential defects that are difficult for
developers to find and recommends fixes in your Java code.

By proactively detecting and providing recommendations for addressing
code defects and implementing best practices, CodeGuru Reviewer improves
the overall quality and maintainability of your code base during the
code review stage. For more information about CodeGuru Reviewer, see the
\emph{\href{https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/welcome.html}{Amazon CodeGuru Reviewer User Guide}.}
}
\section{Service syntax}{
\preformatted{svc <- codegurureviewer(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=codegurureviewer_associate_repository]{associate_repository} \tab Use to associate an AWS CodeCommit repository or a repostory managed by AWS CodeStar Connections with Amazon CodeGuru Reviewer \cr
\link[=codegurureviewer_describe_code_review]{describe_code_review} \tab Returns the metadata associated with the code review along with its status \cr
\link[=codegurureviewer_describe_recommendation_feedback]{describe_recommendation_feedback} \tab Describes the customer feedback for a CodeGuru Reviewer recommendation \cr
\link[=codegurureviewer_describe_repository_association]{describe_repository_association} \tab Returns a RepositoryAssociation object that contains information about the requested repository association \cr
\link[=codegurureviewer_disassociate_repository]{disassociate_repository} \tab Removes the association between Amazon CodeGuru Reviewer and a repository \cr
\link[=codegurureviewer_list_code_reviews]{list_code_reviews} \tab Lists all the code reviews that the customer has created in the past 90 days \cr
\link[=codegurureviewer_list_recommendation_feedback]{list_recommendation_feedback} \tab Returns a list of RecommendationFeedbackSummary objects that contain customer recommendation feedback for all CodeGuru Reviewer users\cr
\link[=codegurureviewer_list_recommendations]{list_recommendations} \tab Returns the list of all recommendations for a completed code review \cr
\link[=codegurureviewer_list_repository_associations]{list_repository_associations} \tab Returns a list of RepositoryAssociationSummary objects that contain summary information about a repository association \cr
\link[=codegurureviewer_put_recommendation_feedback]{put_recommendation_feedback} \tab Stores customer feedback for a CodeGuru Reviewer recommendation
}
}

\examples{
\dontrun{
svc <- codegurureviewer()
svc$associate_repository(
  Foo = 123
)
}

}
