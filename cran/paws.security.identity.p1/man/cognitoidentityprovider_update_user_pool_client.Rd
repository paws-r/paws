% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cognitoidentityprovider_operations.R
\name{cognitoidentityprovider_update_user_pool_client}
\alias{cognitoidentityprovider_update_user_pool_client}
\title{Updates the specified user pool app client with the specified attributes}
\usage{
cognitoidentityprovider_update_user_pool_client(
  UserPoolId,
  ClientId,
  ClientName = NULL,
  RefreshTokenValidity = NULL,
  AccessTokenValidity = NULL,
  IdTokenValidity = NULL,
  TokenValidityUnits = NULL,
  ReadAttributes = NULL,
  WriteAttributes = NULL,
  ExplicitAuthFlows = NULL,
  SupportedIdentityProviders = NULL,
  CallbackURLs = NULL,
  LogoutURLs = NULL,
  DefaultRedirectURI = NULL,
  AllowedOAuthFlows = NULL,
  AllowedOAuthScopes = NULL,
  AllowedOAuthFlowsUserPoolClient = NULL,
  AnalyticsConfiguration = NULL,
  PreventUserExistenceErrors = NULL,
  EnableTokenRevocation = NULL,
  EnablePropagateAdditionalUserContextData = NULL
)
}
\arguments{
\item{UserPoolId}{[required] The user pool ID for the user pool where you want to update the user
pool client.}

\item{ClientId}{[required] The ID of the client associated with the user pool.}

\item{ClientName}{The client name from the update user pool client request.}

\item{RefreshTokenValidity}{The refresh token time limit. After this limit expires, your user can't
use their refresh token. To specify the time unit for
\code{RefreshTokenValidity} as \code{seconds}, \code{minutes}, \code{hours}, or \code{days}, set
a \code{TokenValidityUnits} value in your API request.

For example, when you set \code{RefreshTokenValidity} as \code{10} and
\code{TokenValidityUnits} as \code{days}, your user can refresh their session and
retrieve new access and ID tokens for 10 days.

The default time unit for \code{RefreshTokenValidity} in an API request is
days. You can't set \code{RefreshTokenValidity} to 0. If you do, Amazon
Cognito overrides the value with the default value of 30 days. \emph{Valid
range} is displayed below in seconds.}

\item{AccessTokenValidity}{The access token time limit. After this limit expires, your user can't
use their access token. To specify the time unit for
\code{AccessTokenValidity} as \code{seconds}, \code{minutes}, \code{hours}, or \code{days}, set a
\code{TokenValidityUnits} value in your API request.

For example, when you set \code{AccessTokenValidity} to \code{10} and
\code{TokenValidityUnits} to \code{hours}, your user can authorize access with
their access token for 10 hours.

The default time unit for \code{AccessTokenValidity} in an API request is
hours. \emph{Valid range} is displayed below in seconds.}

\item{IdTokenValidity}{The ID token time limit. After this limit expires, your user can't use
their ID token. To specify the time unit for \code{IdTokenValidity} as
\code{seconds}, \code{minutes}, \code{hours}, or \code{days}, set a \code{TokenValidityUnits}
value in your API request.

For example, when you set \code{IdTokenValidity} as \code{10} and
\code{TokenValidityUnits} as \code{hours}, your user can authenticate their
session with their ID token for 10 hours.

The default time unit for \code{AccessTokenValidity} in an API request is
hours. \emph{Valid range} is displayed below in seconds.}

\item{TokenValidityUnits}{The units in which the validity times are represented. The default unit
for RefreshToken is days, and the default for ID and access tokens is
hours.}

\item{ReadAttributes}{The read-only attributes of the user pool.}

\item{WriteAttributes}{The writeable attributes of the user pool.}

\item{ExplicitAuthFlows}{The authentication flows that are supported by the user pool clients.
Flow names without the \code{ALLOW_} prefix are no longer supported in favor
of new names with the \code{ALLOW_} prefix. Note that values with \code{ALLOW_}
prefix must be used only along with values with the \code{ALLOW_} prefix.

Valid values include:
\itemize{
\item \code{ALLOW_ADMIN_USER_PASSWORD_AUTH}: Enable admin based user password
authentication flow \code{ADMIN_USER_PASSWORD_AUTH}. This setting
replaces the \code{ADMIN_NO_SRP_AUTH} setting. With this authentication
flow, Amazon Cognito receives the password in the request instead of
using the Secure Remote Password (SRP) protocol to verify passwords.
\item \code{ALLOW_CUSTOM_AUTH}: Enable Lambda trigger based authentication.
\item \code{ALLOW_USER_PASSWORD_AUTH}: Enable user password-based
authentication. In this flow, Amazon Cognito receives the password
in the request instead of using the SRP protocol to verify
passwords.
\item \code{ALLOW_USER_SRP_AUTH}: Enable SRP-based authentication.
\item \code{ALLOW_REFRESH_TOKEN_AUTH}: Enable authflow to refresh tokens.
}}

\item{SupportedIdentityProviders}{A list of provider names for the IdPs that this client supports. The
following are supported: \code{COGNITO}, \code{Facebook}, \code{Google},
\code{SignInWithApple}, \code{LoginWithAmazon}, and the names of your own SAML and
OIDC providers.}

\item{CallbackURLs}{A list of allowed redirect (callback) URLs for the IdPs.

A redirect URI must:
\itemize{
\item Be an absolute URI.
\item Be registered with the authorization server.
\item Not include a fragment component.
}

See \href{https://www.rfc-editor.org/rfc/rfc6749#section-3.1.2}{OAuth 2.0 - Redirection Endpoint}.

Amazon Cognito requires HTTPS over HTTP except for http://localhost for
testing purposes only.

App callback URLs such as \verb{myapp://example} are also supported.}

\item{LogoutURLs}{A list of allowed logout URLs for the IdPs.}

\item{DefaultRedirectURI}{The default redirect URI. Must be in the \code{CallbackURLs} list.

A redirect URI must:
\itemize{
\item Be an absolute URI.
\item Be registered with the authorization server.
\item Not include a fragment component.
}

See \href{https://www.rfc-editor.org/rfc/rfc6749#section-3.1.2}{OAuth 2.0 - Redirection Endpoint}.

Amazon Cognito requires HTTPS over HTTP except for \verb{http://localhost}
for testing purposes only.

App callback URLs such as \verb{myapp://example} are also supported.}

\item{AllowedOAuthFlows}{The allowed OAuth flows.

\strong{code}

Use a code grant flow, which provides an authorization code as the
response. This code can be exchanged for access tokens with the
\verb{/oauth2/token} endpoint.

\strong{implicit}

Issue the access token (and, optionally, ID token, based on scopes)
directly to your user.

\strong{client_credentials}

Issue the access token from the \verb{/oauth2/token} endpoint directly to a
non-person user using a combination of the client ID and client secret.}

\item{AllowedOAuthScopes}{The allowed OAuth scopes. Possible values provided by OAuth are \code{phone},
\code{email}, \code{openid}, and \code{profile}. Possible values provided by Amazon Web
Services are \code{aws.cognito.signin.user.admin}. Custom scopes created in
Resource Servers are also supported.}

\item{AllowedOAuthFlowsUserPoolClient}{Set to true if the client is allowed to follow the OAuth protocol when
interacting with Amazon Cognito user pools.}

\item{AnalyticsConfiguration}{The Amazon Pinpoint analytics configuration necessary to collect metrics
for this user pool.

In Amazon Web Services Regions where Amazon Pinpoint isn't available,
user pools only support sending events to Amazon Pinpoint projects in
us-east-1. In Regions where Amazon Pinpoint is available, user pools
support sending events to Amazon Pinpoint projects within that same
Region.}

\item{PreventUserExistenceErrors}{Errors and responses that you want Amazon Cognito APIs to return during
authentication, account confirmation, and password recovery when the
user doesn't exist in the user pool. When set to \code{ENABLED} and the user
doesn't exist, authentication returns an error indicating either the
username or password was incorrect. Account confirmation and password
recovery return a response indicating a code was sent to a simulated
destination. When set to \code{LEGACY}, those APIs return a
\code{UserNotFoundException} exception if the user doesn't exist in the user
pool.

Valid values include:
\itemize{
\item \code{ENABLED} - This prevents user existence-related errors.
\item \code{LEGACY} - This represents the early behavior of Amazon Cognito
where user existence related errors aren't prevented.
}}

\item{EnableTokenRevocation}{Activates or deactivates token revocation. For more information about
revoking tokens, see
\code{\link[=cognitoidentityprovider_revoke_token]{revoke_token}}.}

\item{EnablePropagateAdditionalUserContextData}{Activates the propagation of additional user context data. For more
information about propagation of user context data, see \href{https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pool-settings-advanced-security.html}{Adding advanced security to a user pool}.
If you donâ€™t include this parameter, you can't send device fingerprint
information, including source IP address, to Amazon Cognito advanced
security. You can only activate
\code{EnablePropagateAdditionalUserContextData} in an app client that has a
client secret.}
}
\description{
Updates the specified user pool app client with the specified attributes. You can get a list of the current user pool app client settings using \code{\link[=cognitoidentityprovider_describe_user_pool_client]{describe_user_pool_client}}.

See \url{https://paws-r.github.io/docs/cognitoidentityprovider/update_user_pool_client.html} for full documentation.
}
\keyword{internal}
