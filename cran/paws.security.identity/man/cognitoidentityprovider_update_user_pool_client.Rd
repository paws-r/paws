% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cognitoidentityprovider_operations.R
\name{cognitoidentityprovider_update_user_pool_client}
\alias{cognitoidentityprovider_update_user_pool_client}
\title{Updates the specified user pool app client with the specified attributes}
\usage{
cognitoidentityprovider_update_user_pool_client(UserPoolId, ClientId,
  ClientName, RefreshTokenValidity, AccessTokenValidity, IdTokenValidity,
  TokenValidityUnits, ReadAttributes, WriteAttributes, ExplicitAuthFlows,
  SupportedIdentityProviders, CallbackURLs, LogoutURLs,
  DefaultRedirectURI, AllowedOAuthFlows, AllowedOAuthScopes,
  AllowedOAuthFlowsUserPoolClient, AnalyticsConfiguration,
  PreventUserExistenceErrors)
}
\arguments{
\item{UserPoolId}{[required] The user pool ID for the user pool where you want to update the user
pool client.}

\item{ClientId}{[required] The ID of the client associated with the user pool.}

\item{ClientName}{The client name from the update user pool client request.}

\item{RefreshTokenValidity}{The time limit, in days, after which the refresh token is no longer
valid and cannot be used.}

\item{AccessTokenValidity}{The time limit, after which the access token is no longer valid and
cannot be used.}

\item{IdTokenValidity}{The time limit, after which the ID token is no longer valid and cannot
be used.}

\item{TokenValidityUnits}{The units in which the validity times are represented in. Default for
RefreshToken is days, and default for ID and access tokens are hours.}

\item{ReadAttributes}{The read-only attributes of the user pool.}

\item{WriteAttributes}{The writeable attributes of the user pool.}

\item{ExplicitAuthFlows}{The authentication flows that are supported by the user pool clients.
Flow names without the \code{ALLOW_} prefix are deprecated in favor of new
names with the \code{ALLOW_} prefix. Note that values with \code{ALLOW_} prefix
cannot be used along with values without \code{ALLOW_} prefix.

Valid values include:
\itemize{
\item \code{ALLOW_ADMIN_USER_PASSWORD_AUTH}: Enable admin based user password
authentication flow \code{ADMIN_USER_PASSWORD_AUTH}. This setting
replaces the \code{ADMIN_NO_SRP_AUTH} setting. With this authentication
flow, Cognito receives the password in the request instead of using
the SRP (Secure Remote Password protocol) protocol to verify
passwords.
\item \code{ALLOW_CUSTOM_AUTH}: Enable Lambda trigger based authentication.
\item \code{ALLOW_USER_PASSWORD_AUTH}: Enable user password-based
authentication. In this flow, Cognito receives the password in the
request instead of using the SRP protocol to verify passwords.
\item \code{ALLOW_USER_SRP_AUTH}: Enable SRP based authentication.
\item \code{ALLOW_REFRESH_TOKEN_AUTH}: Enable authflow to refresh tokens.
}}

\item{SupportedIdentityProviders}{A list of provider names for the identity providers that are supported
on this client.}

\item{CallbackURLs}{A list of allowed redirect (callback) URLs for the identity providers.

A redirect URI must:
\itemize{
\item Be an absolute URI.
\item Be registered with the authorization server.
\item Not include a fragment component.
}

See \href{https://datatracker.ietf.org/doc/html/rfc6749#section-3.1.2}{OAuth 2.0 - Redirection Endpoint}.

Amazon Cognito requires HTTPS over HTTP except for http://localhost for
testing purposes only.

App callback URLs such as myapp://example are also supported.}

\item{LogoutURLs}{A list of allowed logout URLs for the identity providers.}

\item{DefaultRedirectURI}{The default redirect URI. Must be in the \code{CallbackURLs} list.

A redirect URI must:
\itemize{
\item Be an absolute URI.
\item Be registered with the authorization server.
\item Not include a fragment component.
}

See \href{https://datatracker.ietf.org/doc/html/rfc6749#section-3.1.2}{OAuth 2.0 - Redirection Endpoint}.

Amazon Cognito requires HTTPS over HTTP except for http://localhost for
testing purposes only.

App callback URLs such as myapp://example are also supported.}

\item{AllowedOAuthFlows}{The allowed OAuth flows.

Set to \code{code} to initiate a code grant flow, which provides an
authorization code as the response. This code can be exchanged for
access tokens with the token endpoint.

Set to \code{implicit} to specify that the client should get the access token
(and, optionally, ID token, based on scopes) directly.

Set to \code{client_credentials} to specify that the client should get the
access token (and, optionally, ID token, based on scopes) from the token
endpoint using a combination of client and client_secret.}

\item{AllowedOAuthScopes}{The allowed OAuth scopes. Possible values provided by OAuth are:
\code{phone}, \code{email}, \code{openid}, and \code{profile}. Possible values provided by
AWS are: \code{aws.cognito.signin.user.admin}. Custom scopes created in
Resource Servers are also supported.}

\item{AllowedOAuthFlowsUserPoolClient}{Set to true if the client is allowed to follow the OAuth protocol when
interacting with Cognito user pools.}

\item{AnalyticsConfiguration}{The Amazon Pinpoint analytics configuration for collecting metrics for
this user pool.

In regions where Pinpoint is not available, Cognito User Pools only
supports sending events to Amazon Pinpoint projects in us-east-1. In
regions where Pinpoint is available, Cognito User Pools will support
sending events to Amazon Pinpoint projects within that same region.}

\item{PreventUserExistenceErrors}{Use this setting to choose which errors and responses are returned by
Cognito APIs during authentication, account confirmation, and password
recovery when the user does not exist in the user pool. When set to
\code{ENABLED} and the user does not exist, authentication returns an error
indicating either the username or password was incorrect, and account
confirmation and password recovery return a response indicating a code
was sent to a simulated destination. When set to \code{LEGACY}, those APIs
will return a \code{UserNotFoundException} exception if the user does not
exist in the user pool.

Valid values include:
\itemize{
\item \code{ENABLED} - This prevents user existence-related errors.
\item \code{LEGACY} - This represents the old behavior of Cognito where user
existence related errors are not prevented.
}

After February 15th 2020, the value of \code{PreventUserExistenceErrors} will
default to \code{ENABLED} for newly created user pool clients if no value is
provided.}
}
\value{
A list with the following syntax:\preformatted{list(
  UserPoolClient = list(
    UserPoolId = "string",
    ClientName = "string",
    ClientId = "string",
    ClientSecret = "string",
    LastModifiedDate = as.POSIXct(
      "2015-01-01"
    ),
    CreationDate = as.POSIXct(
      "2015-01-01"
    ),
    RefreshTokenValidity = 123,
    AccessTokenValidity = 123,
    IdTokenValidity = 123,
    TokenValidityUnits = list(
      AccessToken = "seconds"|"minutes"|"hours"|"days",
      IdToken = "seconds"|"minutes"|"hours"|"days",
      RefreshToken = "seconds"|"minutes"|"hours"|"days"
    ),
    ReadAttributes = list(
      "string"
    ),
    WriteAttributes = list(
      "string"
    ),
    ExplicitAuthFlows = list(
      "ADMIN_NO_SRP_AUTH"|"CUSTOM_AUTH_FLOW_ONLY"|"USER_PASSWORD_AUTH"|"ALLOW_ADMIN_USER_PASSWORD_AUTH"|"ALLOW_CUSTOM_AUTH"|"ALLOW_USER_PASSWORD_AUTH"|"ALLOW_USER_SRP_AUTH"|"ALLOW_REFRESH_TOKEN_AUTH"
    ),
    SupportedIdentityProviders = list(
      "string"
    ),
    CallbackURLs = list(
      "string"
    ),
    LogoutURLs = list(
      "string"
    ),
    DefaultRedirectURI = "string",
    AllowedOAuthFlows = list(
      "code"|"implicit"|"client_credentials"
    ),
    AllowedOAuthScopes = list(
      "string"
    ),
    AllowedOAuthFlowsUserPoolClient = TRUE|FALSE,
    AnalyticsConfiguration = list(
      ApplicationId = "string",
      ApplicationArn = "string",
      RoleArn = "string",
      ExternalId = "string",
      UserDataShared = TRUE|FALSE
    ),
    PreventUserExistenceErrors = "LEGACY"|"ENABLED"
  )
)
}
}
\description{
Updates the specified user pool app client with the specified
attributes. You can get a list of the current user pool app client
settings using
\code{\link[=cognitoidentityprovider_describe_user_pool_client]{describe_user_pool_client}}.

If you don't provide a value for an attribute, it will be set to the
default value.
}
\section{Request syntax}{
\preformatted{svc$update_user_pool_client(
  UserPoolId = "string",
  ClientId = "string",
  ClientName = "string",
  RefreshTokenValidity = 123,
  AccessTokenValidity = 123,
  IdTokenValidity = 123,
  TokenValidityUnits = list(
    AccessToken = "seconds"|"minutes"|"hours"|"days",
    IdToken = "seconds"|"minutes"|"hours"|"days",
    RefreshToken = "seconds"|"minutes"|"hours"|"days"
  ),
  ReadAttributes = list(
    "string"
  ),
  WriteAttributes = list(
    "string"
  ),
  ExplicitAuthFlows = list(
    "ADMIN_NO_SRP_AUTH"|"CUSTOM_AUTH_FLOW_ONLY"|"USER_PASSWORD_AUTH"|"ALLOW_ADMIN_USER_PASSWORD_AUTH"|"ALLOW_CUSTOM_AUTH"|"ALLOW_USER_PASSWORD_AUTH"|"ALLOW_USER_SRP_AUTH"|"ALLOW_REFRESH_TOKEN_AUTH"
  ),
  SupportedIdentityProviders = list(
    "string"
  ),
  CallbackURLs = list(
    "string"
  ),
  LogoutURLs = list(
    "string"
  ),
  DefaultRedirectURI = "string",
  AllowedOAuthFlows = list(
    "code"|"implicit"|"client_credentials"
  ),
  AllowedOAuthScopes = list(
    "string"
  ),
  AllowedOAuthFlowsUserPoolClient = TRUE|FALSE,
  AnalyticsConfiguration = list(
    ApplicationId = "string",
    ApplicationArn = "string",
    RoleArn = "string",
    ExternalId = "string",
    UserDataShared = TRUE|FALSE
  ),
  PreventUserExistenceErrors = "LEGACY"|"ENABLED"
)
}
}

\keyword{internal}
