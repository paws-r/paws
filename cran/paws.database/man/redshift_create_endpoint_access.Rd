% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/redshift_operations.R
\name{redshift_create_endpoint_access}
\alias{redshift_create_endpoint_access}
\title{Creates a Redshift-managed VPC endpoint}
\usage{
redshift_create_endpoint_access(ClusterIdentifier, ResourceOwner,
  EndpointName, SubnetGroupName, VpcSecurityGroupIds)
}
\arguments{
\item{ClusterIdentifier}{The cluster identifier of the cluster to access.}

\item{ResourceOwner}{The AWS account ID of the owner of the cluster. This is only required if
the cluster is in another AWS account.}

\item{EndpointName}{[required] The Redshift-managed VPC endpoint name.

An endpoint name must contain 1-30 characters. Valid characters are A-Z,
a-z, 0-9, and hyphen(-). The first character must be a letter. The name
can't contain two consecutive hyphens or end with a hyphen.}

\item{SubnetGroupName}{[required] The subnet group from which Amazon Redshift chooses the subnet to deploy
the endpoint.}

\item{VpcSecurityGroupIds}{The security group that defines the ports, protocols, and sources for
inbound traffic that you are authorizing into your endpoint.}
}
\value{
A list with the following syntax:\preformatted{list(
  ClusterIdentifier = "string",
  ResourceOwner = "string",
  SubnetGroupName = "string",
  EndpointStatus = "string",
  EndpointName = "string",
  EndpointCreateTime = as.POSIXct(
    "2015-01-01"
  ),
  Port = 123,
  Address = "string",
  VpcSecurityGroups = list(
    list(
      VpcSecurityGroupId = "string",
      Status = "string"
    )
  ),
  VpcEndpoint = list(
    VpcEndpointId = "string",
    VpcId = "string",
    NetworkInterfaces = list(
      list(
        NetworkInterfaceId = "string",
        SubnetId = "string",
        PrivateIpAddress = "string",
        AvailabilityZone = "string"
      )
    )
  )
)
}
}
\description{
Creates a Redshift-managed VPC endpoint.
}
\section{Request syntax}{
\preformatted{svc$create_endpoint_access(
  ClusterIdentifier = "string",
  ResourceOwner = "string",
  EndpointName = "string",
  SubnetGroupName = "string",
  VpcSecurityGroupIds = list(
    "string"
  )
)
}
}

\keyword{internal}
