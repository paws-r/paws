% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rds_operations.R
\name{rds_failover_global_cluster}
\alias{rds_failover_global_cluster}
\title{Initiates the failover process for an Aurora global database
(GlobalCluster)}
\usage{
rds_failover_global_cluster(GlobalClusterIdentifier,
  TargetDbClusterIdentifier)
}
\arguments{
\item{GlobalClusterIdentifier}{[required] Identifier of the Aurora global database (GlobalCluster) that should be
failed over. The identifier is the unique key assigned by the user when
the Aurora global database was created. In other words, it's the name of
the Aurora global database that you want to fail over.

Constraints:
\itemize{
\item Must match the identifier of an existing GlobalCluster (Aurora
global database).
}}

\item{TargetDbClusterIdentifier}{[required] Identifier of the secondary Aurora DB cluster that you want to promote
to primary for the Aurora global database (GlobalCluster.) Use the
Amazon Resource Name (ARN) for the identifier so that Aurora can locate
the cluster in its AWS Region.}
}
\value{
A list with the following syntax:\preformatted{list(
  GlobalCluster = list(
    GlobalClusterIdentifier = "string",
    GlobalClusterResourceId = "string",
    GlobalClusterArn = "string",
    Status = "string",
    Engine = "string",
    EngineVersion = "string",
    DatabaseName = "string",
    StorageEncrypted = TRUE|FALSE,
    DeletionProtection = TRUE|FALSE,
    GlobalClusterMembers = list(
      list(
        DBClusterArn = "string",
        Readers = list(
          "string"
        ),
        IsWriter = TRUE|FALSE,
        GlobalWriteForwardingStatus = "enabled"|"disabled"|"enabling"|"disabling"|"unknown"
      )
    ),
    FailoverState = list(
      Status = "pending"|"failing-over"|"cancelling",
      FromDbClusterArn = "string",
      ToDbClusterArn = "string"
    )
  )
)
}
}
\description{
Initiates the failover process for an Aurora global database
(GlobalCluster).

A failover for an Aurora global database promotes one of secondary
read-only DB clusters to be the primary DB cluster and demotes the
primary DB cluster to being a secondary (read-only) DB cluster. In other
words, the role of the current primary DB cluster and the selected
(target) DB cluster are switched. The selected secondary DB cluster
assumes full read/write capabilities for the Aurora global database.

For more information about failing over an Amazon Aurora global
database, see \href{https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover}{Managed planned failover for Amazon Aurora global databases}
in the \emph{Amazon Aurora User Guide.}

This action applies to GlobalCluster (Aurora global databases) only. Use
this action only on healthy Aurora global databases with running Aurora
DB clusters and no Region-wide outages, to test disaster recovery
scenarios or to reconfigure your Aurora global database topology.
}
\section{Request syntax}{
\preformatted{svc$failover_global_cluster(
  GlobalClusterIdentifier = "string",
  TargetDbClusterIdentifier = "string"
)
}
}

\keyword{internal}
