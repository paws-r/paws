% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keyspaces_service.R
\name{keyspaces}
\alias{keyspaces}
\title{Amazon Keyspaces}
\usage{
keyspaces(
  config = list(),
  credentials = list(),
  endpoint = NULL,
  region = NULL
)
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.
\itemize{
\item{\strong{credentials}: \itemize{
\item{\strong{creds}: \itemize{
\item{\strong{access_key_id}: AWS access key ID}
\item{\strong{secret_access_key}: AWS secret access key}
\item{\strong{session_token}: AWS temporary session token}
}}
\item{\strong{profile}: The name of a profile to use. If not given, then the default profile is used.}
\item{\strong{anonymous}: Set anonymous credentials.}
}}
\item{\strong{endpoint}: The complete URL to use for the constructed client.}
\item{\strong{region}: The AWS Region used in instantiating the client.}
\item{\strong{close_connection}: Immediately close all HTTP connections.}
\item{\strong{timeout}: The time in seconds till a timeout exception is thrown when attempting to make a connection. The default is 60 seconds.}
\item{\strong{s3_force_path_style}: Set this to \code{true} to force the request to use path-style addressing, i.e. \verb{http://s3.amazonaws.com/BUCKET/KEY}.}
\item{\strong{sts_regional_endpoint}: Set sts regional endpoint resolver to regional or legacy \url{https://docs.aws.amazon.com/sdkref/latest/guide/feature-sts-regionalized-endpoints.html}}
}}

\item{credentials}{Optional credentials shorthand for the config parameter
\itemize{
\item{\strong{creds}: \itemize{
\item{\strong{access_key_id}: AWS access key ID}
\item{\strong{secret_access_key}: AWS secret access key}
\item{\strong{session_token}: AWS temporary session token}
}}
\item{\strong{profile}: The name of a profile to use. If not given, then the default profile is used.}
\item{\strong{anonymous}: Set anonymous credentials.}
}}

\item{endpoint}{Optional shorthand for complete URL to use for the constructed client.}

\item{region}{Optional shorthand for AWS Region used in instantiating the client.}
}
\value{
A client for the service. You can call the service's operations using
syntax like \code{svc$operation(...)}, where \code{svc} is the name you've assigned
to the client. The available operations are listed in the
Operations section.
}
\description{
Amazon Keyspaces (for Apache Cassandra) is a scalable, highly available,
and managed Apache Cassandra-compatible database service. Amazon
Keyspaces makes it easy to migrate, run, and scale Cassandra workloads
in the Amazon Web Services Cloud. With just a few clicks on the Amazon
Web Services Management Console or a few lines of code, you can create
keyspaces and tables in Amazon Keyspaces, without deploying any
infrastructure or installing software.

In addition to supporting Cassandra Query Language (CQL) requests via
open-source Cassandra drivers, Amazon Keyspaces supports data definition
language (DDL) operations to manage keyspaces and tables using the
Amazon Web Services SDK and CLI, as well as infrastructure as code (IaC)
services and tools such as CloudFormation and Terraform. This API
reference describes the supported DDL operations in detail.

For the list of all supported CQL APIs, see \href{https://docs.aws.amazon.com/keyspaces/latest/devguide/cassandra-apis.html}{Supported Cassandra APIs, operations, and data types in Amazon Keyspaces}
in the \emph{Amazon Keyspaces Developer Guide}.

To learn how Amazon Keyspaces API actions are recorded with CloudTrail,
see \href{https://docs.aws.amazon.com/keyspaces/latest/devguide/logging-using-cloudtrail.html#service-name-info-in-cloudtrail}{Amazon Keyspaces information in CloudTrail}
in the \emph{Amazon Keyspaces Developer Guide}.

For more information about Amazon Web Services APIs, for example how to
implement retry logic or how to sign Amazon Web Services API requests,
see \href{https://docs.aws.amazon.com/general/latest/gr/}{Amazon Web Services APIs} in the \emph{General
Reference}.
}
\section{Service syntax}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{svc <- keyspaces(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string",
      anonymous = "logical"
    ),
    endpoint = "string",
    region = "string",
    close_connection = "logical",
    timeout = "numeric",
    s3_force_path_style = "logical",
    sts_regional_endpoint = "string"
  ),
  credentials = list(
    creds = list(
      access_key_id = "string",
      secret_access_key = "string",
      session_token = "string"
    ),
    profile = "string",
    anonymous = "logical"
  ),
  endpoint = "string",
  region = "string"
)
}\if{html}{\out{</div>}}
}

\section{Operations}{

\tabular{ll}{
\link[=keyspaces_create_keyspace]{create_keyspace} \tab The CreateKeyspace operation adds a new keyspace to your account\cr
\link[=keyspaces_create_table]{create_table} \tab The CreateTable operation adds a new table to the specified keyspace\cr
\link[=keyspaces_create_type]{create_type} \tab The CreateType operation creates a new user-defined type in the specified keyspace\cr
\link[=keyspaces_delete_keyspace]{delete_keyspace} \tab The DeleteKeyspace operation deletes a keyspace and all of its tables\cr
\link[=keyspaces_delete_table]{delete_table} \tab The DeleteTable operation deletes a table and all of its data\cr
\link[=keyspaces_delete_type]{delete_type} \tab The DeleteType operation deletes a user-defined type (UDT)\cr
\link[=keyspaces_get_keyspace]{get_keyspace} \tab Returns the name of the specified keyspace, the Amazon Resource Name (ARN), the replication strategy, the Amazon Web Services Regions of a multi-Region keyspace, and the status of newly added Regions after an UpdateKeyspace operation\cr
\link[=keyspaces_get_table]{get_table} \tab Returns information about the table, including the table's name and current status, the keyspace name, configuration settings, and metadata\cr
\link[=keyspaces_get_table_auto_scaling_settings]{get_table_auto_scaling_settings} \tab Returns auto scaling related settings of the specified table in JSON format\cr
\link[=keyspaces_get_type]{get_type} \tab The GetType operation returns information about the type, for example the field definitions, the timestamp when the type was last modified, the level of nesting, the status, and details about if the type is used in other types and tables\cr
\link[=keyspaces_list_keyspaces]{list_keyspaces} \tab The ListKeyspaces operation returns a list of keyspaces\cr
\link[=keyspaces_list_tables]{list_tables} \tab The ListTables operation returns a list of tables for a specified keyspace\cr
\link[=keyspaces_list_tags_for_resource]{list_tags_for_resource} \tab Returns a list of all tags associated with the specified Amazon Keyspaces resource\cr
\link[=keyspaces_list_types]{list_types} \tab The ListTypes operation returns a list of types for a specified keyspace\cr
\link[=keyspaces_restore_table]{restore_table} \tab Restores the table to the specified point in time within the earliest_restorable_timestamp and the current time\cr
\link[=keyspaces_tag_resource]{tag_resource} \tab Associates a set of tags with a Amazon Keyspaces resource\cr
\link[=keyspaces_untag_resource]{untag_resource} \tab Removes the association of tags from a Amazon Keyspaces resource\cr
\link[=keyspaces_update_keyspace]{update_keyspace} \tab Adds a new Amazon Web Services Region to the keyspace\cr
\link[=keyspaces_update_table]{update_table} \tab Adds new columns to the table or updates one of the table's settings, for example capacity mode, auto scaling, encryption, point-in-time recovery, or ttl settings
}
}

\examples{
\dontrun{
svc <- keyspaces()
svc$create_keyspace(
  Foo = 123
)
}

}
