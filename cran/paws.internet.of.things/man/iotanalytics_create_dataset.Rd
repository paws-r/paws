% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iotanalytics_operations.R
\name{iotanalytics_create_dataset}
\alias{iotanalytics_create_dataset}
\title{Creates a dataset}
\usage{
iotanalytics_create_dataset(datasetName, actions, triggers,
  contentDeliveryRules, retentionPeriod, versioningConfiguration, tags,
  lateDataRules)
}
\arguments{
\item{datasetName}{[required] The name of the data set.}

\item{actions}{[required] A list of actions that create the data set contents.}

\item{triggers}{A list of triggers. A trigger causes data set contents to be populated
at a specified time interval or when another data set's contents are
created. The list of triggers can be empty or contain up to five
\code{DataSetTrigger} objects.}

\item{contentDeliveryRules}{When dataset contents are created, they are delivered to destinations
specified here.}

\item{retentionPeriod}{Optional. How long, in days, versions of dataset contents are kept for
the dataset. If not specified or set to \code{null}, versions of dataset
contents are retained for at most 90 days. The number of versions of
dataset contents retained is determined by the \code{versioningConfiguration}
parameter. For more information, see \href{https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions}{Keeping Multiple Versions of AWS IoT Analytics Data Sets}
in the \emph{AWS IoT Analytics User Guide}.}

\item{versioningConfiguration}{Optional. How many versions of dataset contents are kept. If not
specified or set to null, only the latest version plus the latest
succeeded version (if they are different) are kept for the time period
specified by the \code{retentionPeriod} parameter. For more information, see
\href{https://docs.aws.amazon.com/iotanalytics/latest/userguide/getting-started.html#aws-iot-analytics-dataset-versions}{Keeping Multiple Versions of AWS IoT Analytics Data Sets}
in the \emph{AWS IoT Analytics User Guide}.}

\item{tags}{Metadata which can be used to manage the data set.}

\item{lateDataRules}{A list of data rules that send notifications to Amazon CloudWatch, when
data arrives late. To specify \code{lateDataRules}, the dataset must use a
\href{https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html}{DeltaTimer}
filter.}
}
\description{
Creates a dataset. A dataset stores data retrieved from a data store by
applying a \code{queryAction} (a SQL query) or a \code{containerAction} (executing
a containerized application). This operation creates the skeleton of a
dataset. The dataset can be populated manually by calling
\code{\link[=iotanalytics_create_dataset_content]{create_dataset_content}} or
automatically according to a trigger you specify.
}
\section{Request syntax}{
\preformatted{svc$create_dataset(
  datasetName = "string",
  actions = list(
    list(
      actionName = "string",
      queryAction = list(
        sqlQuery = "string",
        filters = list(
          list(
            deltaTime = list(
              offsetSeconds = 123,
              timeExpression = "string"
            )
          )
        )
      ),
      containerAction = list(
        image = "string",
        executionRoleArn = "string",
        resourceConfiguration = list(
          computeType = "ACU_1"|"ACU_2",
          volumeSizeInGB = 123
        ),
        variables = list(
          list(
            name = "string",
            stringValue = "string",
            doubleValue = 123.0,
            datasetContentVersionValue = list(
              datasetName = "string"
            ),
            outputFileUriValue = list(
              fileName = "string"
            )
          )
        )
      )
    )
  ),
  triggers = list(
    list(
      schedule = list(
        expression = "string"
      ),
      dataset = list(
        name = "string"
      )
    )
  ),
  contentDeliveryRules = list(
    list(
      entryName = "string",
      destination = list(
        iotEventsDestinationConfiguration = list(
          inputName = "string",
          roleArn = "string"
        ),
        s3DestinationConfiguration = list(
          bucket = "string",
          key = "string",
          glueConfiguration = list(
            tableName = "string",
            databaseName = "string"
          ),
          roleArn = "string"
        )
      )
    )
  ),
  retentionPeriod = list(
    unlimited = TRUE|FALSE,
    numberOfDays = 123
  ),
  versioningConfiguration = list(
    unlimited = TRUE|FALSE,
    maxVersions = 123
  ),
  tags = list(
    list(
      key = "string",
      value = "string"
    )
  ),
  lateDataRules = list(
    list(
      ruleName = "string",
      ruleConfiguration = list(
        deltaTimeSessionWindowConfiguration = list(
          timeoutInMinutes = 123
        )
      )
    )
  )
)
}
}

\keyword{internal}
