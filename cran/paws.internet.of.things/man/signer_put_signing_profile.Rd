% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/signer_operations.R
\name{signer_put_signing_profile}
\alias{signer_put_signing_profile}
\title{Creates a signing profile}
\usage{
signer_put_signing_profile(profileName, signingMaterial,
  signatureValidityPeriod, platformId, overrides, signingParameters, tags)
}
\arguments{
\item{profileName}{[required] The name of the signing profile to be created.}

\item{signingMaterial}{The AWS Certificate Manager certificate that will be used to sign code
with the new signing profile.}

\item{signatureValidityPeriod}{The default validity period override for any signature generated using
this signing profile. If unspecified, the default is 135 months.}

\item{platformId}{[required] The ID of the signing platform to be created.}

\item{overrides}{A subfield of \code{platform}. This specifies any different configuration
options that you want to apply to the chosen platform (such as a
different \code{hash-algorithm} or \code{signing-algorithm}).}

\item{signingParameters}{Map of key-value pairs for signing. These can include any information
that you want to use during signing.}

\item{tags}{Tags to be associated with the signing profile that is being created.}
}
\value{
A list with the following syntax:\preformatted{list(
  arn = "string",
  profileVersion = "string",
  profileVersionArn = "string"
)
}
}
\description{
Creates a signing profile. A signing profile is a code signing template
that can be used to carry out a pre-defined signing job. For more
information, see
\href{https://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html}{http://docs.aws.amazon.com/signer/latest/developerguide/gs-profile.html}
}
\section{Request syntax}{
\preformatted{svc$put_signing_profile(
  profileName = "string",
  signingMaterial = list(
    certificateArn = "string"
  ),
  signatureValidityPeriod = list(
    value = 123,
    type = "DAYS"|"MONTHS"|"YEARS"
  ),
  platformId = "string",
  overrides = list(
    signingConfiguration = list(
      encryptionAlgorithm = "RSA"|"ECDSA",
      hashAlgorithm = "SHA1"|"SHA256"
    ),
    signingImageFormat = "JSON"|"JSONEmbedded"|"JSONDetached"
  ),
  signingParameters = list(
    "string"
  ),
  tags = list(
    "string"
  )
)
}
}

\keyword{internal}
