% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iot_operations.R
\name{iot_create_authorizer}
\alias{iot_create_authorizer}
\title{Creates an authorizer}
\usage{
iot_create_authorizer(authorizerName, authorizerFunctionArn,
  tokenKeyName, tokenSigningPublicKeys, status, tags, signingDisabled)
}
\arguments{
\item{authorizerName}{[required] The authorizer name.}

\item{authorizerFunctionArn}{[required] The ARN of the authorizer's Lambda function.}

\item{tokenKeyName}{The name of the token key used to extract the token from the HTTP
headers.}

\item{tokenSigningPublicKeys}{The public keys used to verify the digital signature returned by your
custom authentication service.}

\item{status}{The status of the create authorizer request.}

\item{tags}{Metadata which can be used to manage the custom authorizer.

For URI Request parameters use format: ...key1=value1&key2=value2...

For the CLI command-line parameter use format: &&tags
"key1=value1&key2=value2..."

For the cli-input-json file use format: "tags":
"key1=value1&key2=value2..."}

\item{signingDisabled}{Specifies whether AWS IoT validates the token signature in an
authorization request.}
}
\value{
A list with the following syntax:\preformatted{list(
  authorizerName = "string",
  authorizerArn = "string"
)
}
}
\description{
Creates an authorizer.
}
\section{Request syntax}{
\preformatted{svc$create_authorizer(
  authorizerName = "string",
  authorizerFunctionArn = "string",
  tokenKeyName = "string",
  tokenSigningPublicKeys = list(
    "string"
  ),
  status = "ACTIVE"|"INACTIVE",
  tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  ),
  signingDisabled = TRUE|FALSE
)
}
}

\keyword{internal}
