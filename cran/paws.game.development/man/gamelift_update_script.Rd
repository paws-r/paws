% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_update_script}
\alias{gamelift_update_script}
\title{Updates Realtime script metadata and content}
\usage{
gamelift_update_script(ScriptId, Name, Version, StorageLocation,
  ZipFile)
}
\arguments{
\item{ScriptId}{[required] A unique identifier for a Realtime script to update. You can use either
the script ID or ARN value.}

\item{Name}{A descriptive label that is associated with a script. Script names do
not need to be unique.}

\item{Version}{The version that is associated with a build or script. Version strings
do not need to be unique.}

\item{StorageLocation}{The Amazon S3 location of your Realtime scripts. The storage location
must specify the S3 bucket name, the zip file name (the "key"), and an
IAM role ARN that allows Amazon GameLift to access the S3 storage
location. The S3 bucket must be in the same Region as the script you're
updating. By default, Amazon GameLift uploads the latest version of the
zip file; if you have S3 object versioning turned on, you can use the
\code{ObjectVersion} parameter to specify an earlier version. To call this
operation with a storage location, you must have IAM PassRole
permission. For more details on IAM roles and PassRole permissions, see
\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/setting-up-role.html}{Set up a role for GameLift access}.}

\item{ZipFile}{A data object containing your Realtime scripts and dependencies as a zip
file. The zip file can have one or multiple files. Maximum size of a zip
file is 5 MB.

When using the AWS CLI tool to create a script, this parameter is set to
the zip file name. It must be prepended with the string "fileb://" to
indicate that the file data is a binary object. For example:
\verb{--zip-file fileb://myRealtimeScript.zip}.}
}
\value{
A list with the following syntax:\preformatted{list(
  Script = list(
    ScriptId = "string",
    ScriptArn = "string",
    Name = "string",
    Version = "string",
    SizeOnDisk = 123,
    CreationTime = as.POSIXct(
      "2015-01-01"
    ),
    StorageLocation = list(
      Bucket = "string",
      Key = "string",
      RoleArn = "string",
      ObjectVersion = "string"
    )
  )
)
}
}
\description{
Updates Realtime script metadata and content.

To update script metadata, specify the script ID and provide updated
name and/or version values.

To update script content, provide an updated zip file by pointing to
either a local file or an Amazon S3 bucket location. You can use either
method regardless of how the original script was uploaded. Use the
\emph{Version} parameter to track updates to the script.

If the call is successful, the updated metadata is stored in the script
record and a revised script is uploaded to the Amazon GameLift service.
Once the script is updated and acquired by a fleet instance, the new
version is used for all new game sessions.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/realtime-intro.html}{Amazon GameLift Realtime Servers}

\strong{Related operations}
\itemize{
\item \code{\link[=gamelift_create_script]{create_script}}
\item \code{\link[=gamelift_list_scripts]{list_scripts}}
\item \code{\link[=gamelift_describe_script]{describe_script}}
\item \code{\link[=gamelift_update_script]{update_script}}
\item \code{\link[=gamelift_delete_script]{delete_script}}
}
}
\section{Request syntax}{
\preformatted{svc$update_script(
  ScriptId = "string",
  Name = "string",
  Version = "string",
  StorageLocation = list(
    Bucket = "string",
    Key = "string",
    RoleArn = "string",
    ObjectVersion = "string"
  ),
  ZipFile = raw
)
}
}

\keyword{internal}
