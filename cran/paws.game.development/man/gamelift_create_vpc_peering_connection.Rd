% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_create_vpc_peering_connection}
\alias{gamelift_create_vpc_peering_connection}
\title{Establishes a VPC peering connection between a virtual private cloud
(VPC) in an AWS account with the VPC for your Amazon GameLift fleet}
\usage{
gamelift_create_vpc_peering_connection(FleetId, PeerVpcAwsAccountId,
  PeerVpcId)
}
\arguments{
\item{FleetId}{[required] A unique identifier for a fleet. You can use either the fleet ID or ARN
value. This tells Amazon GameLift which GameLift VPC to peer with.}

\item{PeerVpcAwsAccountId}{[required] A unique identifier for the AWS account with the VPC that you want to
peer your Amazon GameLift fleet with. You can find your Account ID in
the AWS Management Console under account settings.}

\item{PeerVpcId}{[required] A unique identifier for a VPC with resources to be accessed by your
Amazon GameLift fleet. The VPC must be in the same Region where your
fleet is deployed. Look up a VPC ID using the VPC Dashboard in the AWS
Management Console. Learn more about VPC peering in \href{https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html}{VPC Peering with Amazon GameLift Fleets}.}
}
\value{
An empty list.
}
\description{
Establishes a VPC peering connection between a virtual private cloud
(VPC) in an AWS account with the VPC for your Amazon GameLift fleet. VPC
peering enables the game servers on your fleet to communicate directly
with other AWS resources. You can peer with VPCs in any AWS account that
you have access to, including the account that you use to manage your
Amazon GameLift fleets. You cannot peer with VPCs that are in different
Regions. For more information, see \href{https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html}{VPC Peering with Amazon GameLift Fleets}.

Before calling this operation to establish the peering connection, you
first need to call
\code{\link[=gamelift_create_vpc_peering_authorization]{create_vpc_peering_authorization}}
and identify the VPC you want to peer with. Once the authorization for
the specified VPC is issued, you have 24 hours to establish the
connection. These two operations handle all tasks necessary to peer the
two VPCs, including acceptance, updating routing tables, etc.

To establish the connection, call this operation from the AWS account
that is used to manage the Amazon GameLift fleets. Identify the
following values: (1) The ID of the fleet you want to be enable a VPC
peering connection for; (2) The AWS account with the VPC that you want
to peer with; and (3) The ID of the VPC you want to peer with. This
operation is asynchronous. If successful, a VpcPeeringConnection request
is created. You can use continuous polling to track the request's status
using
\code{\link[=gamelift_describe_vpc_peering_connections]{describe_vpc_peering_connections}},
or by monitoring fleet events for success or failure using
\code{\link[=gamelift_describe_fleet_events]{describe_fleet_events}}.
\itemize{
\item \code{\link[=gamelift_create_vpc_peering_authorization]{create_vpc_peering_authorization}}
\item \code{\link[=gamelift_describe_vpc_peering_authorizations]{describe_vpc_peering_authorizations}}
\item \code{\link[=gamelift_delete_vpc_peering_authorization]{delete_vpc_peering_authorization}}
\item \code{\link[=gamelift_create_vpc_peering_connection]{create_vpc_peering_connection}}
\item \code{\link[=gamelift_describe_vpc_peering_connections]{describe_vpc_peering_connections}}
\item \code{\link[=gamelift_delete_vpc_peering_connection]{delete_vpc_peering_connection}}
}
}
\section{Request syntax}{
\preformatted{svc$create_vpc_peering_connection(
  FleetId = "string",
  PeerVpcAwsAccountId = "string",
  PeerVpcId = "string"
)
}
}

\keyword{internal}
