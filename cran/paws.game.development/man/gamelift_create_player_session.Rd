% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_create_player_session}
\alias{gamelift_create_player_session}
\title{Reserves an open player slot in an active game session}
\usage{
gamelift_create_player_session(GameSessionId, PlayerId, PlayerData)
}
\arguments{
\item{GameSessionId}{[required] A unique identifier for the game session to add a player to.}

\item{PlayerId}{[required] A unique identifier for a player. Player IDs are developer-defined.}

\item{PlayerData}{Developer-defined information related to a player. Amazon GameLift does
not use this data, so it can be formatted as needed for use in the game.}
}
\description{
Reserves an open player slot in an active game session. Before a player
can be added, a game session must have an \code{ACTIVE} status, have a
creation policy of \code{ALLOW_ALL}, and have an open player slot. To add a
group of players to a game session, use CreatePlayerSessions. When the
player connects to the game server and references a player session ID,
the game server contacts the Amazon GameLift service to validate the
player reservation and accept the player.
}
\details{
To create a player session, specify a game session ID, player ID, and
optionally a string of player data. If successful, a slot is reserved in
the game session for the player and a new PlayerSession object is
returned. Player sessions cannot be updated.

\emph{Available in Amazon GameLift Local.}
\itemize{
\item CreatePlayerSession
\item CreatePlayerSessions
\item DescribePlayerSessions
\item Game session placements
\itemize{
\item StartGameSessionPlacement
\item DescribeGameSessionPlacement
\item StopGameSessionPlacement
}
}
}
\section{Request syntax}{
\preformatted{svc$create_player_session(
  GameSessionId = "string",
  PlayerId = "string",
  PlayerData = "string"
)
}
}

\keyword{internal}
