% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_update_game_server}
\alias{gamelift_update_game_server}
\title{This operation is used with the Amazon GameLift FleetIQ solution and
game server groups}
\usage{
gamelift_update_game_server(GameServerGroupName, GameServerId,
  GameServerData, UtilizationStatus, HealthCheck)
}
\arguments{
\item{GameServerGroupName}{[required] A unique identifier for the game server group where the game server is
running. Use either the GameServerGroup name or ARN value.}

\item{GameServerId}{[required] A custom string that uniquely identifies the game server to update.}

\item{GameServerData}{A set of custom game server properties, formatted as a single string
value. This data is passed to a game client or service when it requests
information on game servers using ListGameServers or ClaimGameServer.}

\item{UtilizationStatus}{Indicates whether the game server is available or is currently hosting
gameplay.}

\item{HealthCheck}{Indicates health status of the game server. A request that includes this
parameter updates the game server's \emph{LastHealthCheckTime} timestamp.}
}
\description{
\strong{This operation is used with the Amazon GameLift FleetIQ solution and
game server groups.}
}
\details{
Updates information about a registered game server to help GameLift
FleetIQ to track game server availability. This operation is called by a
game server process that is running on an instance in a game server
group.

Use this operation to update the following types of game server
information. You can make all three types of updates in the same
request:
\itemize{
\item To update the game server's utilization status, identify the game
server and game server group and specify the current utilization
status. Use this status to identify when game servers are currently
hosting games and when they are available to be claimed.
\item To report health status, identify the game server and game server
group and set health check to \code{HEALTHY}. If a game server does not
report health status for a certain length of time, the game server
is no longer considered healthy. As a result, it will be eventually
deregistered from the game server group to avoid affecting
utilization metrics. The best practice is to report health every 60
seconds.
\item To change game server metadata, provide updated game server data.
}

Once a game server is successfully updated, the relevant statuses and
timestamps are updated.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/gsg-intro.html}{GameLift FleetIQ Guide}

\strong{Related operations}
\itemize{
\item RegisterGameServer
\item ListGameServers
\item ClaimGameServer
\item DescribeGameServer
\item UpdateGameServer
\item DeregisterGameServer
}
}
\section{Request syntax}{
\preformatted{svc$update_game_server(
  GameServerGroupName = "string",
  GameServerId = "string",
  GameServerData = "string",
  UtilizationStatus = "AVAILABLE"|"UTILIZED",
  HealthCheck = "HEALTHY"
)
}
}

\keyword{internal}
