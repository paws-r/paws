% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_create_game_server_group}
\alias{gamelift_create_game_server_group}
\title{This operation is used with the Amazon GameLift FleetIQ solution and
game server groups}
\usage{
gamelift_create_game_server_group(GameServerGroupName, RoleArn, MinSize,
  MaxSize, LaunchTemplate, InstanceDefinitions, AutoScalingPolicy,
  BalancingStrategy, GameServerProtectionPolicy, VpcSubnets, Tags)
}
\arguments{
\item{GameServerGroupName}{[required] An identifier for the new game server group. This value is used to
generate unique ARN identifiers for the EC2 Auto Scaling group and the
GameLift FleetIQ game server group. The name must be unique per Region
per AWS account.}

\item{RoleArn}{[required] The Amazon Resource Name
(\href{https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html}{ARN})
for an IAM role that allows Amazon GameLift to access your EC2 Auto
Scaling groups.}

\item{MinSize}{[required] The minimum number of instances allowed in the EC2 Auto Scaling group.
During automatic scaling events, GameLift FleetIQ and EC2 do not scale
down the group below this minimum. In production, this value should be
set to at least 1. After the Auto Scaling group is created, update this
value directly in the Auto Scaling group using the AWS console or APIs.}

\item{MaxSize}{[required] The maximum number of instances allowed in the EC2 Auto Scaling group.
During automatic scaling events, GameLift FleetIQ and EC2 do not scale
up the group above this maximum. After the Auto Scaling group is
created, update this value directly in the Auto Scaling group using the
AWS console or APIs.}

\item{LaunchTemplate}{[required] The EC2 launch template that contains configuration settings and game
server code to be deployed to all instances in the game server group.
You can specify the template using either the template name or ID. For
help with creating a launch template, see \href{https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html}{Creating a Launch Template for an Auto Scaling Group}
in the \emph{Amazon EC2 Auto Scaling User Guide}. After the Auto Scaling
group is created, update this value directly in the Auto Scaling group
using the AWS console or APIs.}

\item{InstanceDefinitions}{[required] The EC2 instance types and sizes to use in the Auto Scaling group. The
instance definitions must specify at least two different instance types
that are supported by GameLift FleetIQ. For more information on instance
types, see \href{https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html}{EC2 Instance Types}
in the \emph{Amazon EC2 User Guide}. You can optionally specify capacity
weighting for each instance type. If no weight value is specified for an
instance type, it is set to the default value "1". For more information
about capacity weighting, see \href{https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-instance-weighting.html}{Instance Weighting for Amazon EC2 Auto Scaling}
in the Amazon EC2 Auto Scaling User Guide.}

\item{AutoScalingPolicy}{Configuration settings to define a scaling policy for the Auto Scaling
group that is optimized for game hosting. The scaling policy uses the
metric \code{"PercentUtilizedGameServers"} to maintain a buffer of idle game
servers that can immediately accommodate new games and players. After
the Auto Scaling group is created, update this value directly in the
Auto Scaling group using the AWS console or APIs.}

\item{BalancingStrategy}{Indicates how GameLift FleetIQ balances the use of Spot Instances and
On-Demand Instances in the game server group. Method options include the
following:
\itemize{
\item \code{SPOT_ONLY} - Only Spot Instances are used in the game server group.
If Spot Instances are unavailable or not viable for game hosting,
the game server group provides no hosting capacity until Spot
Instances can again be used. Until then, no new instances are
started, and the existing nonviable Spot Instances are terminated
(after current gameplay ends) and are not replaced.
\item \code{SPOT_PREFERRED} - (default value) Spot Instances are used whenever
available in the game server group. If Spot Instances are
unavailable, the game server group continues to provide hosting
capacity by falling back to On-Demand Instances. Existing nonviable
Spot Instances are terminated (after current gameplay ends) and are
replaced with new On-Demand Instances.
\item \code{ON_DEMAND_ONLY} - Only On-Demand Instances are used in the game
server group. No Spot Instances are used, even when available, while
this balancing strategy is in force.
}}

\item{GameServerProtectionPolicy}{A flag that indicates whether instances in the game server group are
protected from early termination. Unprotected instances that have active
game servers running might be terminated during a scale-down event,
causing players to be dropped from the game. Protected instances cannot
be terminated while there are active game servers running except in the
event of a forced game server group deletion (see ). An exception to
this is with Spot Instances, which can be terminated by AWS regardless
of protection status. This property is set to \code{NO_PROTECTION} by
default.}

\item{VpcSubnets}{A list of virtual private cloud (VPC) subnets to use with instances in
the game server group. By default, all GameLift FleetIQ-supported
Availability Zones are used. You can use this parameter to specify VPCs
that you've set up. This property cannot be updated after the game
server group is created, and the corresponding Auto Scaling group will
always use the property value that is set with this request, even if the
Auto Scaling group is updated directly.}

\item{Tags}{A list of labels to assign to the new game server group resource. Tags
are developer-defined key-value pairs. Tagging AWS resources is useful
for resource management, access management, and cost allocation. For
more information, see \href{https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html}{Tagging AWS Resources}
in the \emph{AWS General Reference}. Once the resource is created, you can
use \code{\link[=gamelift_tag_resource]{tag_resource}},
\code{\link[=gamelift_untag_resource]{untag_resource}}, and
\code{\link[=gamelift_list_tags_for_resource]{list_tags_for_resource}} to add,
remove, and view tags, respectively. The maximum tag limit may be lower
than stated. See the AWS General Reference for actual tagging limits.}
}
\description{
\strong{This operation is used with the Amazon GameLift FleetIQ solution and
game server groups.}

Creates a GameLift FleetIQ game server group for managing game hosting
on a collection of Amazon EC2 instances for game hosting. This operation
creates the game server group, creates an Auto Scaling group in your AWS
account, and establishes a link between the two groups. You can view the
status of your game server groups in the GameLift console. Game server
group metrics and events are emitted to Amazon CloudWatch.

Before creating a new game server group, you must have the following:
\itemize{
\item An Amazon EC2 launch template that specifies how to launch Amazon
EC2 instances with your game server build. For more information, see
\href{https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-launch-templates.html}{Launching an Instance from a Launch Template}
in the \emph{Amazon EC2 User Guide}.
\item An IAM role that extends limited access to your AWS account to allow
GameLift FleetIQ to create and interact with the Auto Scaling group.
For more information, see \href{https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/gsg-iam-permissions-roles.html}{Create IAM roles for cross-service interaction}
in the \emph{GameLift FleetIQ Developer Guide}.
}

To create a new game server group, specify a unique group name, IAM role
and Amazon EC2 launch template, and provide a list of instance types
that can be used in the group. You must also set initial maximum and
minimum limits on the group's instance count. You can optionally set an
Auto Scaling policy with target tracking based on a GameLift FleetIQ
metric.

Once the game server group and corresponding Auto Scaling group are
created, you have full access to change the Auto Scaling group's
configuration as needed. Several properties that are set when creating a
game server group, including maximum/minimum size and auto-scaling
policy settings, must be updated directly in the Auto Scaling group.
Keep in mind that some Auto Scaling group properties are periodically
updated by GameLift FleetIQ as part of its balancing activities to
optimize for availability and cost.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/gsg-intro.html}{GameLift FleetIQ Guide}

\strong{Related operations}
\itemize{
\item \code{\link[=gamelift_create_game_server_group]{create_game_server_group}}
\item \code{\link[=gamelift_list_game_server_groups]{list_game_server_groups}}
\item \code{\link[=gamelift_describe_game_server_group]{describe_game_server_group}}
\item \code{\link[=gamelift_update_game_server_group]{update_game_server_group}}
\item \code{\link[=gamelift_delete_game_server_group]{delete_game_server_group}}
\item \code{\link[=gamelift_resume_game_server_group]{resume_game_server_group}}
\item \code{\link[=gamelift_suspend_game_server_group]{suspend_game_server_group}}
\item \code{\link[=gamelift_describe_game_server_instances]{describe_game_server_instances}}
}
}
\section{Request syntax}{
\preformatted{svc$create_game_server_group(
  GameServerGroupName = "string",
  RoleArn = "string",
  MinSize = 123,
  MaxSize = 123,
  LaunchTemplate = list(
    LaunchTemplateId = "string",
    LaunchTemplateName = "string",
    Version = "string"
  ),
  InstanceDefinitions = list(
    list(
      InstanceType = "c4.large"|"c4.xlarge"|"c4.2xlarge"|"c4.4xlarge"|"c4.8xlarge"|"c5.large"|"c5.xlarge"|"c5.2xlarge"|"c5.4xlarge"|"c5.9xlarge"|"c5.12xlarge"|"c5.18xlarge"|"c5.24xlarge"|"r4.large"|"r4.xlarge"|"r4.2xlarge"|"r4.4xlarge"|"r4.8xlarge"|"r4.16xlarge"|"r5.large"|"r5.xlarge"|"r5.2xlarge"|"r5.4xlarge"|"r5.8xlarge"|"r5.12xlarge"|"r5.16xlarge"|"r5.24xlarge"|"m4.large"|"m4.xlarge"|"m4.2xlarge"|"m4.4xlarge"|"m4.10xlarge"|"m5.large"|"m5.xlarge"|"m5.2xlarge"|"m5.4xlarge"|"m5.8xlarge"|"m5.12xlarge"|"m5.16xlarge"|"m5.24xlarge",
      WeightedCapacity = "string"
    )
  ),
  AutoScalingPolicy = list(
    EstimatedInstanceWarmup = 123,
    TargetTrackingConfiguration = list(
      TargetValue = 123.0
    )
  ),
  BalancingStrategy = "SPOT_ONLY"|"SPOT_PREFERRED"|"ON_DEMAND_ONLY",
  GameServerProtectionPolicy = "NO_PROTECTION"|"FULL_PROTECTION",
  VpcSubnets = list(
    "string"
  ),
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  )
)
}
}

\keyword{internal}
