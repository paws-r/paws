% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_describe_scaling_policies}
\alias{gamelift_describe_scaling_policies}
\title{Retrieves all scaling policies applied to a fleet}
\usage{
gamelift_describe_scaling_policies(FleetId, StatusFilter, Limit,
  NextToken)
}
\arguments{
\item{FleetId}{[required] A unique identifier for a fleet to retrieve scaling policies for. You
can use either the fleet ID or ARN value.}

\item{StatusFilter}{Scaling policy status to filter results on. A scaling policy is only in
force when in an \code{ACTIVE} status.
\itemize{
\item \strong{ACTIVE} -- The scaling policy is currently in force.
\item \strong{UPDATEREQUESTED} -- A request to update the scaling policy has
been received.
\item \strong{UPDATING} -- A change is being made to the scaling policy.
\item \strong{DELETEREQUESTED} -- A request to delete the scaling policy has
been received.
\item \strong{DELETING} -- The scaling policy is being deleted.
\item \strong{DELETED} -- The scaling policy has been deleted.
\item \strong{ERROR} -- An error occurred in creating the policy. It should be
removed and recreated.
}}

\item{Limit}{The maximum number of results to return. Use this parameter with
\code{NextToken} to get results as a set of sequential pages.}

\item{NextToken}{Token that indicates the start of the next sequential page of results.
Use the token that is returned with a previous call to this operation.
To start at the beginning of the result set, do not specify a value.}
}
\value{
A list with the following syntax:\preformatted{list(
  ScalingPolicies = list(
    list(
      FleetId = "string",
      Name = "string",
      Status = "ACTIVE"|"UPDATE_REQUESTED"|"UPDATING"|"DELETE_REQUESTED"|"DELETING"|"DELETED"|"ERROR",
      ScalingAdjustment = 123,
      ScalingAdjustmentType = "ChangeInCapacity"|"ExactCapacity"|"PercentChangeInCapacity",
      ComparisonOperator = "GreaterThanOrEqualToThreshold"|"GreaterThanThreshold"|"LessThanThreshold"|"LessThanOrEqualToThreshold",
      Threshold = 123.0,
      EvaluationPeriods = 123,
      MetricName = "ActivatingGameSessions"|"ActiveGameSessions"|"ActiveInstances"|"AvailableGameSessions"|"AvailablePlayerSessions"|"CurrentPlayerSessions"|"IdleInstances"|"PercentAvailableGameSessions"|"PercentIdleInstances"|"QueueDepth"|"WaitTime",
      PolicyType = "RuleBased"|"TargetBased",
      TargetConfiguration = list(
        TargetValue = 123.0
      )
    )
  ),
  NextToken = "string"
)
}
}
\description{
Retrieves all scaling policies applied to a fleet.

To get a fleet's scaling policies, specify the fleet ID. You can filter
this request by policy status, such as to retrieve only active scaling
policies. Use the pagination parameters to retrieve results as a set of
sequential pages. If successful, set of ScalingPolicy objects is
returned for the fleet.

A fleet may have all of its scaling policies suspended
(\code{\link[=gamelift_stop_fleet_actions]{stop_fleet_actions}}). This operation
does not affect the status of the scaling policies, which remains
ACTIVE. To see whether a fleet's scaling policies are in force or
suspended, call
\code{\link[=gamelift_describe_fleet_attributes]{describe_fleet_attributes}} and
check the stopped actions.
\itemize{
\item \code{\link[=gamelift_describe_fleet_capacity]{describe_fleet_capacity}}
\item \code{\link[=gamelift_update_fleet_capacity]{update_fleet_capacity}}
\item \code{\link[=gamelift_describe_ec2_instance_limits]{describe_ec2_instance_limits}}
\item Manage scaling policies:
\itemize{
\item \code{\link[=gamelift_put_scaling_policy]{put_scaling_policy}}
(auto-scaling)
\item \code{\link[=gamelift_describe_scaling_policies]{describe_scaling_policies}}
(auto-scaling)
\item \code{\link[=gamelift_delete_scaling_policy]{delete_scaling_policy}}
(auto-scaling)
}
\item Manage fleet actions:
\itemize{
\item \code{\link[=gamelift_start_fleet_actions]{start_fleet_actions}}
\item \code{\link[=gamelift_stop_fleet_actions]{stop_fleet_actions}}
}
}
}
\section{Request syntax}{
\preformatted{svc$describe_scaling_policies(
  FleetId = "string",
  StatusFilter = "ACTIVE"|"UPDATE_REQUESTED"|"UPDATING"|"DELETE_REQUESTED"|"DELETING"|"DELETED"|"ERROR",
  Limit = 123,
  NextToken = "string"
)
}
}

\keyword{internal}
