% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_start_matchmaking}
\alias{gamelift_start_matchmaking}
\title{Uses FlexMatch to create a game match for a group of players based on
custom matchmaking rules}
\usage{
gamelift_start_matchmaking(TicketId, ConfigurationName, Players)
}
\arguments{
\item{TicketId}{A unique identifier for a matchmaking ticket. If no ticket ID is
specified here, Amazon GameLift will generate one in the form of a UUID.
Use this identifier to track the matchmaking ticket status and retrieve
match results.}

\item{ConfigurationName}{[required] Name of the matchmaking configuration to use for this request.
Matchmaking configurations must exist in the same Region as this
request. You can use either the configuration name or ARN value.}

\item{Players}{[required] Information on each player to be matched. This information must include
a player ID, and may contain player attributes and latency data to be
used in the matchmaking process. After a successful match, \code{Player}
objects contain the name of the team the player is assigned to.}
}
\value{
A list with the following syntax:\preformatted{list(
  MatchmakingTicket = list(
    TicketId = "string",
    ConfigurationName = "string",
    ConfigurationArn = "string",
    Status = "CANCELLED"|"COMPLETED"|"FAILED"|"PLACING"|"QUEUED"|"REQUIRES_ACCEPTANCE"|"SEARCHING"|"TIMED_OUT",
    StatusReason = "string",
    StatusMessage = "string",
    StartTime = as.POSIXct(
      "2015-01-01"
    ),
    EndTime = as.POSIXct(
      "2015-01-01"
    ),
    Players = list(
      list(
        PlayerId = "string",
        PlayerAttributes = list(
          list(
            S = "string",
            N = 123.0,
            SL = list(
              "string"
            ),
            SDM = list(
              123.0
            )
          )
        ),
        Team = "string",
        LatencyInMs = list(
          123
        )
      )
    ),
    GameSessionConnectionInfo = list(
      GameSessionArn = "string",
      IpAddress = "string",
      DnsName = "string",
      Port = 123,
      MatchedPlayerSessions = list(
        list(
          PlayerId = "string",
          PlayerSessionId = "string"
        )
      )
    ),
    EstimatedWaitTime = 123
  )
)
}
}
\description{
Uses FlexMatch to create a game match for a group of players based on
custom matchmaking rules. With games that use GameLift managed hosting,
this operation also triggers GameLift to find hosting resources and
start a new game session for the new match. Each matchmaking request
includes information on one or more players and specifies the FlexMatch
matchmaker to use. When a request is for multiple players, FlexMatch
attempts to build a match that includes all players in the request,
placing them in the same team and finding additional players as needed
to fill the match.

To start matchmaking, provide a unique ticket ID, specify a matchmaking
configuration, and include the players to be matched. You must also
include any player attributes that are required by the matchmaking
configuration's rule set. If successful, a matchmaking ticket is
returned with status set to \code{QUEUED}.

Track matchmaking events to respond as needed and acquire game session
connection information for successfully completed matches. Ticket status
updates are tracked using event notification through Amazon Simple
Notification Service (SNS), which is defined in the matchmaking
configuration.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-client.html}{Add FlexMatch to a game client}

\href{https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/match-notification.html}{Set Up FlexMatch event notification}

\href{https://docs.aws.amazon.com/gamelift/latest/flexmatchguide/gamelift-match.html}{How GameLift FlexMatch works}

\strong{Related actions}

\code{\link[=gamelift_start_matchmaking]{start_matchmaking}} |
\code{\link[=gamelift_describe_matchmaking]{describe_matchmaking}} |
\code{\link[=gamelift_stop_matchmaking]{stop_matchmaking}} |
\code{\link[=gamelift_accept_match]{accept_match}} |
\code{\link[=gamelift_start_match_backfill]{start_match_backfill}} | \href{https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets}{All APIs by task}
}
\section{Request syntax}{
\preformatted{svc$start_matchmaking(
  TicketId = "string",
  ConfigurationName = "string",
  Players = list(
    list(
      PlayerId = "string",
      PlayerAttributes = list(
        list(
          S = "string",
          N = 123.0,
          SL = list(
            "string"
          ),
          SDM = list(
            123.0
          )
        )
      ),
      Team = "string",
      LatencyInMs = list(
        123
      )
    )
  )
)
}
}

\keyword{internal}
