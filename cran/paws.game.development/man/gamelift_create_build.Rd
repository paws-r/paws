% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gamelift_operations.R
\name{gamelift_create_build}
\alias{gamelift_create_build}
\title{Creates a new Amazon GameLift build record for your game server binary
files and points to the location of your game server build files in an
Amazon Simple Storage Service (Amazon S3) location}
\usage{
gamelift_create_build(Name, Version, StorageLocation, OperatingSystem,
  Tags)
}
\arguments{
\item{Name}{A descriptive label that is associated with a build. Build names do not
need to be unique. You can use UpdateBuild to change this value later.}

\item{Version}{Version information that is associated with a build or script. Version
strings do not need to be unique. You can use UpdateBuild to change this
value later.}

\item{StorageLocation}{Information indicating where your game build files are stored. Use this
parameter only when creating a build with files stored in an Amazon S3
bucket that you own. The storage location must specify an Amazon S3
bucket name and key. The location must also specify a role ARN that you
set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3
bucket and your new build must be in the same Region.}

\item{OperatingSystem}{The operating system that the game server binaries are built to run on.
This value determines the type of fleet resources that you can use for
this build. If your game build contains multiple executables, they all
must run on the same operating system. If an operating system is not
specified when creating a build, Amazon GameLift uses the default value
(WINDOWS\\_2012). This value cannot be changed later.}

\item{Tags}{A list of labels to assign to the new build resource. Tags are
developer-defined key-value pairs. Tagging AWS resources are useful for
resource management, access management and cost allocation. For more
information, see \href{https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html}{Tagging AWS Resources}
in the \emph{AWS General Reference}. Once the resource is created, you can
use TagResource, UntagResource, and ListTagsForResource to add, remove,
and view tags. The maximum tag limit may be lower than stated. See the
AWS General Reference for actual tagging limits.}
}
\description{
Creates a new Amazon GameLift build record for your game server binary
files and points to the location of your game server build files in an
Amazon Simple Storage Service (Amazon S3) location.
}
\details{
Game server binaries must be combined into a zip file for use with
Amazon GameLift.

To create new builds directly from a file directory, use the AWS CLI
command
\strong{\href{https://docs.aws.amazon.com/cli/latest/reference/gamelift/upload-build.html}{upload-build}}
. This helper command uploads build files and creates a new build record
in one step, and automatically handles the necessary permissions.

The \code{CreateBuild} operation should be used only in the following
scenarios:
\itemize{
\item To create a new game build with build files that are in an Amazon S3
bucket under your own AWS account. To use this option, you must
first give Amazon GameLift access to that Amazon S3 bucket. Then
call \code{CreateBuild} and specify a build name, operating system, and
the Amazon S3 storage location of your game build.
\item To upload build files directly to Amazon GameLift\'s Amazon S3
account. To use this option, first call \code{CreateBuild} and specify a
build name and operating system. This action creates a new build
record and returns an Amazon S3 storage location (bucket and key
only) and temporary access credentials. Use the credentials to
manually upload your build file to the provided storage location
(see the Amazon S3 topic \href{https://docs.aws.amazon.com/AmazonS3/latest/dev/UploadingObjects.html}{Uploading Objects}).
You can upload build files to the GameLift Amazon S3 location only
once.
}

If successful, this operation creates a new build record with a unique
build ID and places it in \code{INITIALIZED} status. You can use
DescribeBuild to check the status of your build. A build must be in
\code{READY} status before it can be used to create fleets.

\strong{Learn more}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-intro.html}{Uploading Your Game}
\url{https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html}

\href{https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-build-cli-uploading.html#gamelift-build-cli-uploading-create-build}{Create a Build with Files in Amazon S3}

\strong{Related operations}
\itemize{
\item CreateBuild
\item ListBuilds
\item DescribeBuild
\item UpdateBuild
\item DeleteBuild
}
}
\section{Request syntax}{
\preformatted{svc$create_build(
  Name = "string",
  Version = "string",
  StorageLocation = list(
    Bucket = "string",
    Key = "string",
    RoleArn = "string",
    ObjectVersion = "string"
  ),
  OperatingSystem = "WINDOWS_2012"|"AMAZON_LINUX"|"AMAZON_LINUX_2",
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  )
)
}
}

\keyword{internal}
