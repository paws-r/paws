% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transfer_operations.R
\name{transfer_update_user}
\alias{transfer_update_user}
\title{Assigns new properties to a user}
\usage{
transfer_update_user(HomeDirectory, HomeDirectoryType,
  HomeDirectoryMappings, Policy, PosixProfile, Role, ServerId, UserName)
}
\arguments{
\item{HomeDirectory}{Specifies the landing directory (folder) for a user when they log in to
the server using their file transfer protocol client.

An example is \verb{your-Amazon-S3-bucket-name>/home/username}.}

\item{HomeDirectoryType}{The type of landing directory (folder) you want your users' home
directory to be when they log into the server. If you set it to \code{PATH},
the user will see the absolute Amazon S3 bucket paths as is in their
file transfer protocol clients. If you set it \code{LOGICAL}, you will need
to provide mappings in the \code{HomeDirectoryMappings} for how you want to
make Amazon S3 paths visible to your users.}

\item{HomeDirectoryMappings}{Logical directory mappings that specify what Amazon S3 paths and keys
should be visible to your user and how you want to make them visible.
You will need to specify the "\code{Entry}" and "\code{Target}" pair, where
\code{Entry} shows how the path is made visible and \code{Target} is the actual
Amazon S3 path. If you only specify a target, it will be displayed as
is. You will need to also make sure that your IAM role provides access
to paths in \code{Target}. The following is an example.

\code{'[ "/bucket2/documentation", { "Entry": "your-personal-report.pdf", "Target": "/bucket3/customized-reports/${transfer:UserName}.pdf" } ]'}

In most cases, you can use this value instead of the scope-down policy
to lock your user down to the designated home directory ("chroot"). To
do this, you can set \code{Entry} to '/' and set \code{Target} to the
HomeDirectory parameter value.

If the target of a logical directory entry does not exist in Amazon S3,
the entry will be ignored. As a workaround, you can use the Amazon S3
API to create 0 byte objects as place holders for your directory. If
using the CLI, use the \code{s3api} call instead of \code{s3} so you can use the
put-object operation. For example, you use the following:
\verb{aws s3api put-object --bucket bucketname --key path/to/folder/}. Make
sure that the end of the key name ends in a / for it to be considered a
folder.}

\item{Policy}{Allows you to supply a scope-down policy for your user so you can use
the same IAM role across multiple users. The policy scopes down user
access to portions of your Amazon S3 bucket. Variables you can use
inside this policy include \verb{$\{Transfer:UserName\}},
\verb{$\{Transfer:HomeDirectory\}}, and \verb{$\{Transfer:HomeBucket\}}.

For scope-down policies, AWS Transfer Family stores the policy as a JSON
blob, instead of the Amazon Resource Name (ARN) of the policy. You save
the policy as a JSON blob and pass it in the \code{Policy} argument.

For an example of a scope-down policy, see \href{https://docs.aws.amazon.com/transfer/latest/userguide/#users-policies-scope-down}{Creating a scope-down policy}.

For more information, see
\href{https://docs.aws.amazon.com/STS/latest/APIReference/API_AssumeRole.html}{AssumeRole}
in the \emph{AWS Security Token Service API Reference}.}

\item{PosixProfile}{}

\item{Role}{The IAM role that controls your users' access to your Amazon S3 bucket.
The policies attached to this role will determine the level of access
you want to provide your users when transferring files into and out of
your Amazon S3 bucket or buckets. The IAM role should also contain a
trust relationship that allows the server to access your resources when
servicing your users' transfer requests.}

\item{ServerId}{[required] A system-assigned unique identifier for a server instance that the user
account is assigned to.}

\item{UserName}{[required] A unique string that identifies a user and is associated with a server
as specified by the \code{ServerId}. This user name must be a minimum of 3
and a maximum of 100 characters long. The following are valid
characters: a-z, A-Z, 0-9, underscore '_', hyphen '-', period '.', and
at sign '@'. The user name can't start with a hyphen, period, or at
sign.}
}
\value{
A list with the following syntax:\preformatted{list(
  ServerId = "string",
  UserName = "string"
)
}
}
\description{
Assigns new properties to a user. Parameters you pass modify any or all
of the following: the home directory, role, and policy for the
\code{UserName} and \code{ServerId} you specify.

The response returns the \code{ServerId} and the \code{UserName} for the updated
user.
}
\section{Request syntax}{
\preformatted{svc$update_user(
  HomeDirectory = "string",
  HomeDirectoryType = "PATH"|"LOGICAL",
  HomeDirectoryMappings = list(
    list(
      Entry = "string",
      Target = "string"
    )
  ),
  Policy = "string",
  PosixProfile = list(
    Uid = 123,
    Gid = 123,
    SecondaryGids = list(
      123
    )
  ),
  Role = "string",
  ServerId = "string",
  UserName = "string"
)
}
}

\keyword{internal}
