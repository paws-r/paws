% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cloudfront_operations.R
\name{cloudfront_publish_function}
\alias{cloudfront_publish_function}
\title{Publishes a CloudFront function by copying the function code from the
DEVELOPMENT stage to LIVE}
\usage{
cloudfront_publish_function(Name, IfMatch)
}
\arguments{
\item{Name}{[required] The name of the function that you are publishing.}

\item{IfMatch}{[required] The current version (\code{ETag} value) of the function that you are
publishing, which you can get using
\code{\link[=cloudfront_describe_function]{describe_function}}.}
}
\value{
A list with the following syntax:\preformatted{list(
  FunctionSummary = list(
    Name = "string",
    Status = "string",
    FunctionConfig = list(
      Comment = "string",
      Runtime = "cloudfront-js-1.0"
    ),
    FunctionMetadata = list(
      FunctionARN = "string",
      Stage = "DEVELOPMENT"|"LIVE",
      CreatedTime = as.POSIXct(
        "2015-01-01"
      ),
      LastModifiedTime = as.POSIXct(
        "2015-01-01"
      )
    )
  )
)
}
}
\description{
Publishes a CloudFront function by copying the function code from the
\code{DEVELOPMENT} stage to \code{LIVE}. This automatically updates all cache
behaviors that are using this function to use the newly published copy
in the \code{LIVE} stage.

When a function is published to the \code{LIVE} stage, you can attach the
function to a distribution’s cache behavior, using the function’s Amazon
Resource Name (ARN).

To publish a function, you must provide the function’s name and version
(\code{ETag} value). To get these values, you can use
\code{\link[=cloudfront_list_functions]{list_functions}} and
\code{\link[=cloudfront_describe_function]{describe_function}}.
}
\section{Request syntax}{
\preformatted{svc$publish_function(
  Name = "string",
  IfMatch = "string"
)
}
}

\keyword{internal}
