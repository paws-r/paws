% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ecr_operations.R
\name{ecr_list_images}
\alias{ecr_list_images}
\title{Lists all the image IDs for the specified repository}
\usage{
ecr_list_images(registryId, repositoryName, nextToken, maxResults,
  filter)
}
\arguments{
\item{registryId}{The AWS account ID associated with the registry that contains the
repository in which to list images. If you do not specify a registry,
the default registry is assumed.}

\item{repositoryName}{[required] The repository with image IDs to be listed.}

\item{nextToken}{The \code{nextToken} value returned from a previous paginated
\code{\link[=ecr_list_images]{list_images}} request where \code{maxResults} was used and
the results exceeded the value of that parameter. Pagination continues
from the end of the previous results that returned the \code{nextToken}
value. This value is \code{null} when there are no more results to return.

This token should be treated as an opaque identifier that is only used
to retrieve the next items in a list and not for other programmatic
purposes.}

\item{maxResults}{The maximum number of image results returned by
\code{\link[=ecr_list_images]{list_images}} in paginated output. When this
parameter is used, \code{\link[=ecr_list_images]{list_images}} only returns
\code{maxResults} results in a single page along with a \code{nextToken} response
element. The remaining results of the initial request can be seen by
sending another \code{\link[=ecr_list_images]{list_images}} request with the
returned \code{nextToken} value. This value can be between 1 and 1000. If
this parameter is not used, then \code{\link[=ecr_list_images]{list_images}}
returns up to 100 results and a \code{nextToken} value, if applicable.}

\item{filter}{The filter key and value with which to filter your
\code{\link[=ecr_list_images]{list_images}} results.}
}
\value{
A list with the following syntax:\preformatted{list(
  imageIds = list(
    list(
      imageDigest = "string",
      imageTag = "string"
    )
  ),
  nextToken = "string"
)
}
}
\description{
Lists all the image IDs for the specified repository.

You can filter images based on whether or not they are tagged by using
the \code{tagStatus} filter and specifying either \code{TAGGED}, \code{UNTAGGED} or
\code{ANY}. For example, you can filter your results to return only
\code{UNTAGGED} images and then pipe that result to a
\code{\link[=ecr_batch_delete_image]{batch_delete_image}} operation to delete them.
Or, you can filter your results to return only \code{TAGGED} images to list
all of the tags in your repository.
}
\section{Request syntax}{
\preformatted{svc$list_images(
  registryId = "string",
  repositoryName = "string",
  nextToken = "string",
  maxResults = 123,
  filter = list(
    tagStatus = "TAGGED"|"UNTAGGED"|"ANY"
  )
)
}
}

\examples{
\dontrun{
# This example lists all of the images in the repository named ubuntu in
# the default registry in the current account.
svc$list_images(
  repositoryName = "ubuntu"
)
}

}
\keyword{internal}
