% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_create_remote_access_session}
\alias{devicefarm_create_remote_access_session}
\title{Specifies and starts a remote access session}
\usage{
devicefarm_create_remote_access_session(projectArn, deviceArn,
  instanceArn, sshPublicKey, remoteDebugEnabled, remoteRecordEnabled,
  remoteRecordAppArn, name, clientId, configuration, interactionMode,
  skipAppResign)
}
\arguments{
\item{projectArn}{[required] The Amazon Resource Name (ARN) of the project for which you want to
create a remote access session.}

\item{deviceArn}{[required] The ARN of the device for which you want to create a remote access
session.}

\item{instanceArn}{The Amazon Resource Name (ARN) of the device instance for which you want
to create a remote access session.}

\item{sshPublicKey}{Ignored. The public key of the \code{ssh} key pair you want to use for
connecting to remote devices in your remote debugging session. This key
is required only if \code{remoteDebugEnabled} is set to \code{true}.

Remote debugging is \href{https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html}{no longer supported}.}

\item{remoteDebugEnabled}{Set to \code{true} if you want to access devices remotely for debugging in
your remote access session.

Remote debugging is \href{https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html}{no longer supported}.}

\item{remoteRecordEnabled}{Set to \code{true} to enable remote recording for the remote access session.}

\item{remoteRecordAppArn}{The Amazon Resource Name (ARN) for the app to be recorded in the remote
access session.}

\item{name}{The name of the remote access session to create.}

\item{clientId}{Unique identifier for the client. If you want access to multiple devices
on the same client, you should pass the same \code{clientId} value in each
call to
\code{\link[=devicefarm_create_remote_access_session]{create_remote_access_session}}.
This identifier is required only if \code{remoteDebugEnabled} is set to
\code{true}.

Remote debugging is \href{https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html}{no longer supported}.}

\item{configuration}{The configuration information for the remote access session request.}

\item{interactionMode}{The interaction mode of the remote access session. Valid values are:
\itemize{
\item INTERACTIVE: You can interact with the iOS device by viewing,
touching, and rotating the screen. You cannot run XCUITest
framework-based tests in this mode.
\item NO_VIDEO: You are connected to the device, but cannot interact with
it or view the screen. This mode has the fastest test execution
speed. You can run XCUITest framework-based tests in this mode.
\item VIDEO_ONLY: You can view the screen, but cannot touch or rotate it.
You can run XCUITest framework-based tests and watch the screen in
this mode.
}}

\item{skipAppResign}{When set to \code{true}, for private devices, Device Farm does not sign your
app again. For public devices, Device Farm always signs your apps again.

For more information on how Device Farm modifies your uploads during
tests, see \href{https://aws.amazon.com/device-farm/faqs/}{Do you modify my app?}}
}
\value{
A list with the following syntax:\preformatted{list(
  remoteAccessSession = list(
    arn = "string",
    name = "string",
    created = as.POSIXct(
      "2015-01-01"
    ),
    status = "PENDING"|"PENDING_CONCURRENCY"|"PENDING_DEVICE"|"PROCESSING"|"SCHEDULING"|"PREPARING"|"RUNNING"|"COMPLETED"|"STOPPING",
    result = "PENDING"|"PASSED"|"WARNED"|"FAILED"|"SKIPPED"|"ERRORED"|"STOPPED",
    message = "string",
    started = as.POSIXct(
      "2015-01-01"
    ),
    stopped = as.POSIXct(
      "2015-01-01"
    ),
    device = list(
      arn = "string",
      name = "string",
      manufacturer = "string",
      model = "string",
      modelId = "string",
      formFactor = "PHONE"|"TABLET",
      platform = "ANDROID"|"IOS",
      os = "string",
      cpu = list(
        frequency = "string",
        architecture = "string",
        clock = 123.0
      ),
      resolution = list(
        width = 123,
        height = 123
      ),
      heapSize = 123,
      memory = 123,
      image = "string",
      carrier = "string",
      radio = "string",
      remoteAccessEnabled = TRUE|FALSE,
      remoteDebugEnabled = TRUE|FALSE,
      fleetType = "string",
      fleetName = "string",
      instances = list(
        list(
          arn = "string",
          deviceArn = "string",
          labels = list(
            "string"
          ),
          status = "IN_USE"|"PREPARING"|"AVAILABLE"|"NOT_AVAILABLE",
          udid = "string",
          instanceProfile = list(
            arn = "string",
            packageCleanup = TRUE|FALSE,
            excludeAppPackagesFromCleanup = list(
              "string"
            ),
            rebootAfterUse = TRUE|FALSE,
            name = "string",
            description = "string"
          )
        )
      ),
      availability = "TEMPORARY_NOT_AVAILABLE"|"BUSY"|"AVAILABLE"|"HIGHLY_AVAILABLE"
    ),
    instanceArn = "string",
    remoteDebugEnabled = TRUE|FALSE,
    remoteRecordEnabled = TRUE|FALSE,
    remoteRecordAppArn = "string",
    hostAddress = "string",
    clientId = "string",
    billingMethod = "METERED"|"UNMETERED",
    deviceMinutes = list(
      total = 123.0,
      metered = 123.0,
      unmetered = 123.0
    ),
    endpoint = "string",
    deviceUdid = "string",
    interactionMode = "INTERACTIVE"|"NO_VIDEO"|"VIDEO_ONLY",
    skipAppResign = TRUE|FALSE
  )
)
}
}
\description{
Specifies and starts a remote access session.
}
\section{Request syntax}{
\preformatted{svc$create_remote_access_session(
  projectArn = "string",
  deviceArn = "string",
  instanceArn = "string",
  sshPublicKey = "string",
  remoteDebugEnabled = TRUE|FALSE,
  remoteRecordEnabled = TRUE|FALSE,
  remoteRecordAppArn = "string",
  name = "string",
  clientId = "string",
  configuration = list(
    billingMethod = "METERED"|"UNMETERED",
    vpceConfigurationArns = list(
      "string"
    )
  ),
  interactionMode = "INTERACTIVE"|"NO_VIDEO"|"VIDEO_ONLY",
  skipAppResign = TRUE|FALSE
)
}
}

\examples{
\dontrun{
# The following example creates a remote access session named MySession.
svc$create_remote_access_session(
  name = "MySession",
  configuration = list(
    billingMethod = "METERED"
  ),
  deviceArn = "arn:aws:devicefarm:us-west-2::device:123EXAMPLE",
  projectArn = "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
)
}

}
\keyword{internal}
