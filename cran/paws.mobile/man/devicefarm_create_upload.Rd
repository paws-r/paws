% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_create_upload}
\alias{devicefarm_create_upload}
\title{Uploads an app or test scripts}
\usage{
devicefarm_create_upload(projectArn, name, type, contentType)
}
\arguments{
\item{projectArn}{[required] The ARN of the project for the upload.}

\item{name}{[required] The upload's file name. The name should not contain any forward slashes
(\code{/}). If you are uploading an iOS app, the file name must end with the
\code{.ipa} extension. If you are uploading an Android app, the file name
must end with the \code{.apk} extension. For all others, the file name must
end with the \code{.zip} file extension.}

\item{type}{[required] The upload's upload type.

Must be one of the following values:
\itemize{
\item ANDROID_APP
\item IOS_APP
\item WEB_APP
\item EXTERNAL_DATA
\item APPIUM_JAVA_JUNIT_TEST_PACKAGE
\item APPIUM_JAVA_TESTNG_TEST_PACKAGE
\item APPIUM_PYTHON_TEST_PACKAGE
\item APPIUM_NODE_TEST_PACKAGE
\item APPIUM_RUBY_TEST_PACKAGE
\item APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE
\item APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE
\item APPIUM_WEB_PYTHON_TEST_PACKAGE
\item APPIUM_WEB_NODE_TEST_PACKAGE
\item APPIUM_WEB_RUBY_TEST_PACKAGE
\item CALABASH_TEST_PACKAGE
\item INSTRUMENTATION_TEST_PACKAGE
\item UIAUTOMATION_TEST_PACKAGE
\item UIAUTOMATOR_TEST_PACKAGE
\item XCTEST_TEST_PACKAGE
\item XCTEST_UI_TEST_PACKAGE
\item APPIUM_JAVA_JUNIT_TEST_SPEC
\item APPIUM_JAVA_TESTNG_TEST_SPEC
\item APPIUM_PYTHON_TEST_SPEC
\item APPIUM_NODE_TEST_SPEC
\item APPIUM_RUBY_TEST_SPEC
\item APPIUM_WEB_JAVA_JUNIT_TEST_SPEC
\item APPIUM_WEB_JAVA_TESTNG_TEST_SPEC
\item APPIUM_WEB_PYTHON_TEST_SPEC
\item APPIUM_WEB_NODE_TEST_SPEC
\item APPIUM_WEB_RUBY_TEST_SPEC
\item INSTRUMENTATION_TEST_SPEC
\item XCTEST_UI_TEST_SPEC
}

If you call \code{\link[=devicefarm_create_upload]{create_upload}} with \code{WEB_APP}
specified, AWS Device Farm throws an \code{ArgumentException} error.}

\item{contentType}{The upload's content type (for example, \code{application/octet-stream}).}
}
\value{
A list with the following syntax:\preformatted{list(
  upload = list(
    arn = "string",
    name = "string",
    created = as.POSIXct(
      "2015-01-01"
    ),
    type = "ANDROID_APP"|"IOS_APP"|"WEB_APP"|"EXTERNAL_DATA"|"APPIUM_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_PYTHON_TEST_PACKAGE"|"APPIUM_NODE_TEST_PACKAGE"|"APPIUM_RUBY_TEST_PACKAGE"|"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_WEB_PYTHON_TEST_PACKAGE"|"APPIUM_WEB_NODE_TEST_PACKAGE"|"APPIUM_WEB_RUBY_TEST_PACKAGE"|"CALABASH_TEST_PACKAGE"|"INSTRUMENTATION_TEST_PACKAGE"|"UIAUTOMATION_TEST_PACKAGE"|"UIAUTOMATOR_TEST_PACKAGE"|"XCTEST_TEST_PACKAGE"|"XCTEST_UI_TEST_PACKAGE"|"APPIUM_JAVA_JUNIT_TEST_SPEC"|"APPIUM_JAVA_TESTNG_TEST_SPEC"|"APPIUM_PYTHON_TEST_SPEC"|"APPIUM_NODE_TEST_SPEC"|"APPIUM_RUBY_TEST_SPEC"|"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"|"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"|"APPIUM_WEB_PYTHON_TEST_SPEC"|"APPIUM_WEB_NODE_TEST_SPEC"|"APPIUM_WEB_RUBY_TEST_SPEC"|"INSTRUMENTATION_TEST_SPEC"|"XCTEST_UI_TEST_SPEC",
    status = "INITIALIZED"|"PROCESSING"|"SUCCEEDED"|"FAILED",
    url = "string",
    metadata = "string",
    contentType = "string",
    message = "string",
    category = "CURATED"|"PRIVATE"
  )
)
}
}
\description{
Uploads an app or test scripts.
}
\section{Request syntax}{
\preformatted{svc$create_upload(
  projectArn = "string",
  name = "string",
  type = "ANDROID_APP"|"IOS_APP"|"WEB_APP"|"EXTERNAL_DATA"|"APPIUM_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_PYTHON_TEST_PACKAGE"|"APPIUM_NODE_TEST_PACKAGE"|"APPIUM_RUBY_TEST_PACKAGE"|"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_WEB_PYTHON_TEST_PACKAGE"|"APPIUM_WEB_NODE_TEST_PACKAGE"|"APPIUM_WEB_RUBY_TEST_PACKAGE"|"CALABASH_TEST_PACKAGE"|"INSTRUMENTATION_TEST_PACKAGE"|"UIAUTOMATION_TEST_PACKAGE"|"UIAUTOMATOR_TEST_PACKAGE"|"XCTEST_TEST_PACKAGE"|"XCTEST_UI_TEST_PACKAGE"|"APPIUM_JAVA_JUNIT_TEST_SPEC"|"APPIUM_JAVA_TESTNG_TEST_SPEC"|"APPIUM_PYTHON_TEST_SPEC"|"APPIUM_NODE_TEST_SPEC"|"APPIUM_RUBY_TEST_SPEC"|"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"|"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"|"APPIUM_WEB_PYTHON_TEST_SPEC"|"APPIUM_WEB_NODE_TEST_SPEC"|"APPIUM_WEB_RUBY_TEST_SPEC"|"INSTRUMENTATION_TEST_SPEC"|"XCTEST_UI_TEST_SPEC",
  contentType = "string"
)
}
}

\examples{
\dontrun{
# The following example creates a new Appium Python test package upload
# inside an existing project.
svc$create_upload(
  name = "MyAppiumPythonUpload",
  type = "APPIUM_PYTHON_TEST_PACKAGE",
  projectArn = "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
)
}

}
\keyword{internal}
