% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_list_uploads}
\alias{devicefarm_list_uploads}
\title{Gets information about uploads, given an AWS Device Farm project ARN}
\usage{
devicefarm_list_uploads(arn, type, nextToken)
}
\arguments{
\item{arn}{[required] The Amazon Resource Name (ARN) of the project for which you want to list
uploads.}

\item{type}{The type of upload.

Must be one of the following values:
\itemize{
\item ANDROID_APP
\item IOS_APP
\item WEB_APP
\item EXTERNAL_DATA
\item APPIUM_JAVA_JUNIT_TEST_PACKAGE
\item APPIUM_JAVA_TESTNG_TEST_PACKAGE
\item APPIUM_PYTHON_TEST_PACKAGE
\item APPIUM_NODE_TEST_PACKAGE
\item APPIUM_RUBY_TEST_PACKAGE
\item APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE
\item APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE
\item APPIUM_WEB_PYTHON_TEST_PACKAGE
\item APPIUM_WEB_NODE_TEST_PACKAGE
\item APPIUM_WEB_RUBY_TEST_PACKAGE
\item CALABASH_TEST_PACKAGE
\item INSTRUMENTATION_TEST_PACKAGE
\item UIAUTOMATION_TEST_PACKAGE
\item UIAUTOMATOR_TEST_PACKAGE
\item XCTEST_TEST_PACKAGE
\item XCTEST_UI_TEST_PACKAGE
\item APPIUM_JAVA_JUNIT_TEST_SPEC
\item APPIUM_JAVA_TESTNG_TEST_SPEC
\item APPIUM_PYTHON_TEST_SPEC
\item APPIUM_NODE_TEST_SPEC
\item APPIUM_RUBY_TEST_SPEC
\item APPIUM_WEB_JAVA_JUNIT_TEST_SPEC
\item APPIUM_WEB_JAVA_TESTNG_TEST_SPEC
\item APPIUM_WEB_PYTHON_TEST_SPEC
\item APPIUM_WEB_NODE_TEST_SPEC
\item APPIUM_WEB_RUBY_TEST_SPEC
\item INSTRUMENTATION_TEST_SPEC
\item XCTEST_UI_TEST_SPEC
}}

\item{nextToken}{An identifier that was returned from the previous call to this
operation, which can be used to return the next set of items in the
list.}
}
\value{
A list with the following syntax:\preformatted{list(
  uploads = list(
    list(
      arn = "string",
      name = "string",
      created = as.POSIXct(
        "2015-01-01"
      ),
      type = "ANDROID_APP"|"IOS_APP"|"WEB_APP"|"EXTERNAL_DATA"|"APPIUM_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_PYTHON_TEST_PACKAGE"|"APPIUM_NODE_TEST_PACKAGE"|"APPIUM_RUBY_TEST_PACKAGE"|"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_WEB_PYTHON_TEST_PACKAGE"|"APPIUM_WEB_NODE_TEST_PACKAGE"|"APPIUM_WEB_RUBY_TEST_PACKAGE"|"CALABASH_TEST_PACKAGE"|"INSTRUMENTATION_TEST_PACKAGE"|"UIAUTOMATION_TEST_PACKAGE"|"UIAUTOMATOR_TEST_PACKAGE"|"XCTEST_TEST_PACKAGE"|"XCTEST_UI_TEST_PACKAGE"|"APPIUM_JAVA_JUNIT_TEST_SPEC"|"APPIUM_JAVA_TESTNG_TEST_SPEC"|"APPIUM_PYTHON_TEST_SPEC"|"APPIUM_NODE_TEST_SPEC"|"APPIUM_RUBY_TEST_SPEC"|"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"|"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"|"APPIUM_WEB_PYTHON_TEST_SPEC"|"APPIUM_WEB_NODE_TEST_SPEC"|"APPIUM_WEB_RUBY_TEST_SPEC"|"INSTRUMENTATION_TEST_SPEC"|"XCTEST_UI_TEST_SPEC",
      status = "INITIALIZED"|"PROCESSING"|"SUCCEEDED"|"FAILED",
      url = "string",
      metadata = "string",
      contentType = "string",
      message = "string",
      category = "CURATED"|"PRIVATE"
    )
  ),
  nextToken = "string"
)
}
}
\description{
Gets information about uploads, given an AWS Device Farm project ARN.
}
\section{Request syntax}{
\preformatted{svc$list_uploads(
  arn = "string",
  type = "ANDROID_APP"|"IOS_APP"|"WEB_APP"|"EXTERNAL_DATA"|"APPIUM_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_PYTHON_TEST_PACKAGE"|"APPIUM_NODE_TEST_PACKAGE"|"APPIUM_RUBY_TEST_PACKAGE"|"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_WEB_PYTHON_TEST_PACKAGE"|"APPIUM_WEB_NODE_TEST_PACKAGE"|"APPIUM_WEB_RUBY_TEST_PACKAGE"|"CALABASH_TEST_PACKAGE"|"INSTRUMENTATION_TEST_PACKAGE"|"UIAUTOMATION_TEST_PACKAGE"|"UIAUTOMATOR_TEST_PACKAGE"|"XCTEST_TEST_PACKAGE"|"XCTEST_UI_TEST_PACKAGE"|"APPIUM_JAVA_JUNIT_TEST_SPEC"|"APPIUM_JAVA_TESTNG_TEST_SPEC"|"APPIUM_PYTHON_TEST_SPEC"|"APPIUM_NODE_TEST_SPEC"|"APPIUM_RUBY_TEST_SPEC"|"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"|"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"|"APPIUM_WEB_PYTHON_TEST_SPEC"|"APPIUM_WEB_NODE_TEST_SPEC"|"APPIUM_WEB_RUBY_TEST_SPEC"|"INSTRUMENTATION_TEST_SPEC"|"XCTEST_UI_TEST_SPEC",
  nextToken = "string"
)
}
}

\examples{
\dontrun{
# The following example returns information about uploads, given a
# specific Device Farm project.
svc$list_uploads(
  arn = "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
  nextToken = "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
)
}

}
\keyword{internal}
