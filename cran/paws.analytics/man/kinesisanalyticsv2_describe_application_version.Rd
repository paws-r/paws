% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kinesisanalyticsv2_operations.R
\name{kinesisanalyticsv2_describe_application_version}
\alias{kinesisanalyticsv2_describe_application_version}
\title{Provides a detailed description of a specified version of the
application}
\usage{
kinesisanalyticsv2_describe_application_version(ApplicationName,
  ApplicationVersionId)
}
\arguments{
\item{ApplicationName}{[required] The name of the application for which you want to get the version
description.}

\item{ApplicationVersionId}{[required] The ID of the application version for which you want to get the
description.}
}
\value{
A list with the following syntax:\preformatted{list(
  ApplicationVersionDetail = list(
    ApplicationARN = "string",
    ApplicationDescription = "string",
    ApplicationName = "string",
    RuntimeEnvironment = "SQL-1_0"|"FLINK-1_6"|"FLINK-1_8"|"FLINK-1_11",
    ServiceExecutionRole = "string",
    ApplicationStatus = "DELETING"|"STARTING"|"STOPPING"|"READY"|"RUNNING"|"UPDATING"|"AUTOSCALING"|"FORCE_STOPPING"|"MAINTENANCE"|"ROLLING_BACK"|"ROLLED_BACK",
    ApplicationVersionId = 123,
    CreateTimestamp = as.POSIXct(
      "2015-01-01"
    ),
    LastUpdateTimestamp = as.POSIXct(
      "2015-01-01"
    ),
    ApplicationConfigurationDescription = list(
      SqlApplicationConfigurationDescription = list(
        InputDescriptions = list(
          list(
            InputId = "string",
            NamePrefix = "string",
            InAppStreamNames = list(
              "string"
            ),
            InputProcessingConfigurationDescription = list(
              InputLambdaProcessorDescription = list(
                ResourceARN = "string",
                RoleARN = "string"
              )
            ),
            KinesisStreamsInputDescription = list(
              ResourceARN = "string",
              RoleARN = "string"
            ),
            KinesisFirehoseInputDescription = list(
              ResourceARN = "string",
              RoleARN = "string"
            ),
            InputSchema = list(
              RecordFormat = list(
                RecordFormatType = "JSON"|"CSV",
                MappingParameters = list(
                  JSONMappingParameters = list(
                    RecordRowPath = "string"
                  ),
                  CSVMappingParameters = list(
                    RecordRowDelimiter = "string",
                    RecordColumnDelimiter = "string"
                  )
                )
              ),
              RecordEncoding = "string",
              RecordColumns = list(
                list(
                  Name = "string",
                  Mapping = "string",
                  SqlType = "string"
                )
              )
            ),
            InputParallelism = list(
              Count = 123
            ),
            InputStartingPositionConfiguration = list(
              InputStartingPosition = "NOW"|"TRIM_HORIZON"|"LAST_STOPPED_POINT"
            )
          )
        ),
        OutputDescriptions = list(
          list(
            OutputId = "string",
            Name = "string",
            KinesisStreamsOutputDescription = list(
              ResourceARN = "string",
              RoleARN = "string"
            ),
            KinesisFirehoseOutputDescription = list(
              ResourceARN = "string",
              RoleARN = "string"
            ),
            LambdaOutputDescription = list(
              ResourceARN = "string",
              RoleARN = "string"
            ),
            DestinationSchema = list(
              RecordFormatType = "JSON"|"CSV"
            )
          )
        ),
        ReferenceDataSourceDescriptions = list(
          list(
            ReferenceId = "string",
            TableName = "string",
            S3ReferenceDataSourceDescription = list(
              BucketARN = "string",
              FileKey = "string",
              ReferenceRoleARN = "string"
            ),
            ReferenceSchema = list(
              RecordFormat = list(
                RecordFormatType = "JSON"|"CSV",
                MappingParameters = list(
                  JSONMappingParameters = list(
                    RecordRowPath = "string"
                  ),
                  CSVMappingParameters = list(
                    RecordRowDelimiter = "string",
                    RecordColumnDelimiter = "string"
                  )
                )
              ),
              RecordEncoding = "string",
              RecordColumns = list(
                list(
                  Name = "string",
                  Mapping = "string",
                  SqlType = "string"
                )
              )
            )
          )
        )
      ),
      ApplicationCodeConfigurationDescription = list(
        CodeContentType = "PLAINTEXT"|"ZIPFILE",
        CodeContentDescription = list(
          TextContent = "string",
          CodeMD5 = "string",
          CodeSize = 123,
          S3ApplicationCodeLocationDescription = list(
            BucketARN = "string",
            FileKey = "string",
            ObjectVersion = "string"
          )
        )
      ),
      RunConfigurationDescription = list(
        ApplicationRestoreConfigurationDescription = list(
          ApplicationRestoreType = "SKIP_RESTORE_FROM_SNAPSHOT"|"RESTORE_FROM_LATEST_SNAPSHOT"|"RESTORE_FROM_CUSTOM_SNAPSHOT",
          SnapshotName = "string"
        ),
        FlinkRunConfigurationDescription = list(
          AllowNonRestoredState = TRUE|FALSE
        )
      ),
      FlinkApplicationConfigurationDescription = list(
        CheckpointConfigurationDescription = list(
          ConfigurationType = "DEFAULT"|"CUSTOM",
          CheckpointingEnabled = TRUE|FALSE,
          CheckpointInterval = 123,
          MinPauseBetweenCheckpoints = 123
        ),
        MonitoringConfigurationDescription = list(
          ConfigurationType = "DEFAULT"|"CUSTOM",
          MetricsLevel = "APPLICATION"|"TASK"|"OPERATOR"|"PARALLELISM",
          LogLevel = "INFO"|"WARN"|"ERROR"|"DEBUG"
        ),
        ParallelismConfigurationDescription = list(
          ConfigurationType = "DEFAULT"|"CUSTOM",
          Parallelism = 123,
          ParallelismPerKPU = 123,
          CurrentParallelism = 123,
          AutoScalingEnabled = TRUE|FALSE
        ),
        JobPlanDescription = "string"
      ),
      EnvironmentPropertyDescriptions = list(
        PropertyGroupDescriptions = list(
          list(
            PropertyGroupId = "string",
            PropertyMap = list(
              "string"
            )
          )
        )
      ),
      ApplicationSnapshotConfigurationDescription = list(
        SnapshotsEnabled = TRUE|FALSE
      ),
      VpcConfigurationDescriptions = list(
        list(
          VpcConfigurationId = "string",
          VpcId = "string",
          SubnetIds = list(
            "string"
          ),
          SecurityGroupIds = list(
            "string"
          )
        )
      )
    ),
    CloudWatchLoggingOptionDescriptions = list(
      list(
        CloudWatchLoggingOptionId = "string",
        LogStreamARN = "string",
        RoleARN = "string"
      )
    ),
    ApplicationMaintenanceConfigurationDescription = list(
      ApplicationMaintenanceWindowStartTime = "string",
      ApplicationMaintenanceWindowEndTime = "string"
    ),
    ApplicationVersionUpdatedFrom = 123,
    ApplicationVersionRolledBackFrom = 123,
    ConditionalToken = "string",
    ApplicationVersionRolledBackTo = 123
  )
)
}
}
\description{
Provides a detailed description of a specified version of the
application. To see a list of all the versions of an application, invoke
the
\code{\link[=kinesisanalyticsv2_list_application_versions]{list_application_versions}}
operation.

This operation is supported only for Amazon Kinesis Data Analytics for
Apache Flink.
}
\section{Request syntax}{
\preformatted{svc$describe_application_version(
  ApplicationName = "string",
  ApplicationVersionId = 123
)
}
}

\keyword{internal}
