% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/storagegateway_operations.R
\name{storagegateway_evict_files_failing_upload}
\alias{storagegateway_evict_files_failing_upload}
\title{Starts a process that cleans the specified file share's cache of file
entries that are failing upload to Amazon S3}
\usage{
storagegateway_evict_files_failing_upload(FileShareARN, ForceRemove = NULL)
}
\arguments{
\item{FileShareARN}{[required] The Amazon Resource Name (ARN) of the file share for which you want to
start the cache clean operation.}

\item{ForceRemove}{Specifies whether cache entries with full or partial file data currently
stored on the gateway will be forcibly removed by the cache clean
operation.

Valid arguments:
\itemize{
\item \code{False} - The cache clean operation skips cache entries failing
upload if they are associated with data currently stored on the
gateway. This preserves the cached data.
\item \code{True} - The cache clean operation removes cache entries failing
upload even if they are associated with data currently stored on the
gateway. This deletes the cached data.

If \code{ForceRemove} is set to \code{True}, the cache clean operation will
delete file data from the gateway which might otherwise be
recoverable.
}}
}
\description{
Starts a process that cleans the specified file share's cache of file entries that are failing upload to Amazon S3. This API operation reports success if the request is received with valid arguments, and there are no other cache clean operations currently in-progress for the specified file share. After a successful request, the cache clean operation occurs asynchronously and reports progress using CloudWatch logs and notifications.

See \url{https://www.paws-r-sdk.com/docs/storagegateway_evict_files_failing_upload/} for full documentation.
}
\keyword{internal}
