% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s3_operations.R
\name{s3_write_get_object_response}
\alias{s3_write_get_object_response}
\title{Passes transformed objects to a GetObject operation when using Object
Lambda Access Points}
\usage{
s3_write_get_object_response(RequestRoute, RequestToken, Body,
  StatusCode, ErrorCode, ErrorMessage, AcceptRanges, CacheControl,
  ContentDisposition, ContentEncoding, ContentLanguage, ContentLength,
  ContentRange, ContentType, DeleteMarker, ETag, Expires, Expiration,
  LastModified, MissingMeta, Metadata, ObjectLockMode,
  ObjectLockLegalHoldStatus, ObjectLockRetainUntilDate, PartsCount,
  ReplicationStatus, RequestCharged, Restore, ServerSideEncryption,
  SSECustomerAlgorithm, SSEKMSKeyId, SSECustomerKeyMD5, StorageClass,
  TagCount, VersionId, BucketKeyEnabled)
}
\arguments{
\item{RequestRoute}{[required] Route prefix to the HTTP URL generated.}

\item{RequestToken}{[required] A single use encrypted token that maps
\code{\link[=s3_write_get_object_response]{write_get_object_response}} to the end
user \code{\link[=s3_get_object]{get_object}} request.}

\item{Body}{The object data.}

\item{StatusCode}{The integer status code for an HTTP response of a corresponding
\code{\link[=s3_get_object]{get_object}} request.

\strong{Status Codes}
\itemize{
\item \emph{200 - OK}
\item \emph{206 - Partial Content}
\item \emph{304 - Not Modified}
\item \emph{400 - Bad Request}
\item \emph{401 - Unauthorized}
\item \emph{403 - Forbidden}
\item \emph{404 - Not Found}
\item \emph{405 - Method Not Allowed}
\item \emph{409 - Conflict}
\item \emph{411 - Length Required}
\item \emph{412 - Precondition Failed}
\item \emph{416 - Range Not Satisfiable}
\item \emph{500 - Internal Server Error}
\item \emph{503 - Service Unavailable}
}}

\item{ErrorCode}{A string that uniquely identifies an error condition. Returned in the
<Code> tag of the error XML response for a corresponding
\code{\link[=s3_get_object]{get_object}} call. Cannot be used with a successful
\code{StatusCode} header or when the transformed object is provided in the
body. All error codes from S3 are sentence-cased. Regex value is
"^[A-Z][a-zA-Z]+$".}

\item{ErrorMessage}{Contains a generic description of the error condition. Returned in the
<Message> tag of the error XML response for a corresponding
\code{\link[=s3_get_object]{get_object}} call. Cannot be used with a successful
\code{StatusCode} header or when the transformed object is provided in body.}

\item{AcceptRanges}{Indicates that a range of bytes was specified.}

\item{CacheControl}{Specifies caching behavior along the request/reply chain.}

\item{ContentDisposition}{Specifies presentational information for the object.}

\item{ContentEncoding}{Specifies what content encodings have been applied to the object and
thus what decoding mechanisms must be applied to obtain the media-type
referenced by the Content-Type header field.}

\item{ContentLanguage}{The language the content is in.}

\item{ContentLength}{The size of the content body in bytes.}

\item{ContentRange}{The portion of the object returned in the response.}

\item{ContentType}{A standard MIME type describing the format of the object data.}

\item{DeleteMarker}{Specifies whether an object stored in Amazon S3 is (\code{true}) or is not
(\code{false}) a delete marker.}

\item{ETag}{An opaque identifier assigned by a web server to a specific version of a
resource found at a URL.}

\item{Expires}{The date and time at which the object is no longer cacheable.}

\item{Expiration}{If object stored in Amazon S3 expiration is configured (see PUT Bucket
lifecycle) it includes expiry-date and rule-id key-value pairs providing
object expiration information. The value of the rule-id is URL encoded.}

\item{LastModified}{The date and time that the object was last modified.}

\item{MissingMeta}{Set to the number of metadata entries not returned in \code{x-amz-meta}
headers. This can happen if you create metadata using an API like SOAP
that supports more flexible metadata than the REST API. For example,
using SOAP, you can create metadata whose values are not legal HTTP
headers.}

\item{Metadata}{A map of metadata to store with the object in S3.}

\item{ObjectLockMode}{Indicates whether an object stored in Amazon S3 has Object Lock enabled.
For more information about S3 Object Lock, see \href{https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock.html}{Object Lock}.}

\item{ObjectLockLegalHoldStatus}{Indicates whether an object stored in Amazon S3 has an active legal
hold.}

\item{ObjectLockRetainUntilDate}{The date and time when Object Lock is configured to expire.}

\item{PartsCount}{The count of parts this object has.}

\item{ReplicationStatus}{Indicates if request involves bucket that is either a source or
destination in a Replication rule. For more information about S3
Replication, see
\href{https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication.html}{Replication}.}

\item{RequestCharged}{}

\item{Restore}{Provides information about object restoration operation and expiration
time of the restored object copy.}

\item{ServerSideEncryption}{The server-side encryption algorithm used when storing requested object
in Amazon S3 (for example, AES256, aws:kms).}

\item{SSECustomerAlgorithm}{Encryption algorithm used if server-side encryption with a
customer-provided encryption key was specified for object stored in
Amazon S3.}

\item{SSEKMSKeyId}{If present, specifies the ID of the AWS Key Management Service (AWS KMS)
symmetric customer managed customer master key (CMK) that was used for
stored in Amazon S3 object.}

\item{SSECustomerKeyMD5}{128-bit MD5 digest of customer-provided encryption key used in Amazon S3
to encrypt data stored in S3. For more information, see \href{https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html}{Protecting data using server-side encryption with customer-provided encryption keys (SSE-C)}.}

\item{StorageClass}{The class of storage used to store object in Amazon S3.}

\item{TagCount}{The number of tags, if any, on the object.}

\item{VersionId}{An ID used to reference a specific version of the object.}

\item{BucketKeyEnabled}{Indicates whether the object stored in Amazon S3 uses an S3 bucket key
for server-side encryption with AWS KMS (SSE-KMS).}
}
\value{
An empty list.
}
\description{
Passes transformed objects to a \code{\link[=s3_get_object]{get_object}} operation
when using Object Lambda Access Points. For information about Object
Lambda Access Points, see \href{https://docs.aws.amazon.com/AmazonS3/latest/userguide/transforming-objects.html}{Transforming objects with Object Lambda Access Points}
in the \emph{Amazon S3 User Guide}.

This operation supports metadata that can be returned by
\code{\link[=s3_get_object]{get_object}}, in addition to \code{RequestRoute},
\code{RequestToken}, \code{StatusCode}, \code{ErrorCode}, and \code{ErrorMessage}. The
\code{\link[=s3_get_object]{get_object}} response metadata is supported so that the
\code{\link[=s3_write_get_object_response]{write_get_object_response}} caller,
typically an AWS Lambda function, can provide the same metadata when it
internally invokes \code{\link[=s3_get_object]{get_object}}. When
\code{\link[=s3_write_get_object_response]{write_get_object_response}} is called by
a customer-owned Lambda function, the metadata returned to the end user
\code{\link[=s3_get_object]{get_object}} call might differ from what Amazon S3
would normally return.

AWS provides some prebuilt Lambda functions that you can use with S3
Object Lambda to detect and redact personally identifiable information
(PII) and decompress S3 objects. These Lambda functions are available in
the AWS Serverless Application Repository, and can be selected through
the AWS Management Console when you create your Object Lambda Access
Point.

Example 1: PII Access Control - This Lambda function uses Amazon
Comprehend, a natural language processing (NLP) service using machine
learning to find insights and relationships in text. It automatically
detects personally identifiable information (PII) such as names,
addresses, dates, credit card numbers, and social security numbers from
documents in your Amazon S3 bucket.

Example 2: PII Redaction - This Lambda function uses Amazon Comprehend,
a natural language processing (NLP) service using machine learning to
find insights and relationships in text. It automatically redacts
personally identifiable information (PII) such as names, addresses,
dates, credit card numbers, and social security numbers from documents
in your Amazon S3 bucket.

Example 3: Decompression - The Lambda function
S3ObjectLambdaDecompression, is equipped to decompress objects stored in
S3 in one of six compressed file formats including bzip2, gzip, snappy,
zlib, zstandard and ZIP.

For information on how to view and use these functions, see \href{https://docs.aws.amazon.com/AmazonS3/latest/userguide/olap-examples.html}{Using AWS built Lambda functions}
in the \emph{Amazon S3 User Guide}.
}
\section{Request syntax}{
\preformatted{svc$write_get_object_response(
  RequestRoute = "string",
  RequestToken = "string",
  Body = raw,
  StatusCode = 123,
  ErrorCode = "string",
  ErrorMessage = "string",
  AcceptRanges = "string",
  CacheControl = "string",
  ContentDisposition = "string",
  ContentEncoding = "string",
  ContentLanguage = "string",
  ContentLength = 123,
  ContentRange = "string",
  ContentType = "string",
  DeleteMarker = TRUE|FALSE,
  ETag = "string",
  Expires = as.POSIXct(
    "2015-01-01"
  ),
  Expiration = "string",
  LastModified = as.POSIXct(
    "2015-01-01"
  ),
  MissingMeta = 123,
  Metadata = list(
    "string"
  ),
  ObjectLockMode = "GOVERNANCE"|"COMPLIANCE",
  ObjectLockLegalHoldStatus = "ON"|"OFF",
  ObjectLockRetainUntilDate = as.POSIXct(
    "2015-01-01"
  ),
  PartsCount = 123,
  ReplicationStatus = "COMPLETE"|"PENDING"|"FAILED"|"REPLICA",
  RequestCharged = "requester",
  Restore = "string",
  ServerSideEncryption = "AES256"|"aws:kms",
  SSECustomerAlgorithm = "string",
  SSEKMSKeyId = "string",
  SSECustomerKeyMD5 = "string",
  StorageClass = "STANDARD"|"REDUCED_REDUNDANCY"|"STANDARD_IA"|"ONEZONE_IA"|"INTELLIGENT_TIERING"|"GLACIER"|"DEEP_ARCHIVE"|"OUTPOSTS",
  TagCount = 123,
  VersionId = "string",
  BucketKeyEnabled = TRUE|FALSE
)
}
}

\keyword{internal}
