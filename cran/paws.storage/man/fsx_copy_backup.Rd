% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fsx_operations.R
\name{fsx_copy_backup}
\alias{fsx_copy_backup}
\title{Copies an existing backup within the same AWS account to another Region
(cross-Region copy) or within the same Region (in-Region copy)}
\usage{
fsx_copy_backup(ClientRequestToken, SourceBackupId, SourceRegion,
  KmsKeyId, CopyTags, Tags)
}
\arguments{
\item{ClientRequestToken}{}

\item{SourceBackupId}{[required] The ID of the source backup. Specifies the ID of the backup that is
being copied.}

\item{SourceRegion}{The source AWS Region of the backup. Specifies the AWS Region from which
the backup is being copied. The source and destination Regions must be
in the same AWS partition. If you don't specify a Region, it defaults to
the Region where the request is sent from (in-Region copy).}

\item{KmsKeyId}{}

\item{CopyTags}{A boolean flag indicating whether tags from the source backup should be
copied to the backup copy. This value defaults to false.

If you set \code{CopyTags} to true and the source backup has existing tags,
you can use the \code{Tags} parameter to create new tags, provided that the
sum of the source backup tags and the new tags doesn't exceed 50. Both
sets of tags are merged. If there are tag conflicts (for example, two
tags with the same key but different values), the tags created with the
\code{Tags} parameter take precedence.}

\item{Tags}{}
}
\value{
A list with the following syntax:\preformatted{list(
  Backup = list(
    BackupId = "string",
    Lifecycle = "AVAILABLE"|"CREATING"|"TRANSFERRING"|"DELETED"|"FAILED"|"PENDING"|"COPYING",
    FailureDetails = list(
      Message = "string"
    ),
    Type = "AUTOMATIC"|"USER_INITIATED"|"AWS_BACKUP",
    ProgressPercent = 123,
    CreationTime = as.POSIXct(
      "2015-01-01"
    ),
    KmsKeyId = "string",
    ResourceARN = "string",
    Tags = list(
      list(
        Key = "string",
        Value = "string"
      )
    ),
    FileSystem = list(
      OwnerId = "string",
      CreationTime = as.POSIXct(
        "2015-01-01"
      ),
      FileSystemId = "string",
      FileSystemType = "WINDOWS"|"LUSTRE",
      Lifecycle = "AVAILABLE"|"CREATING"|"FAILED"|"DELETING"|"MISCONFIGURED"|"UPDATING",
      FailureDetails = list(
        Message = "string"
      ),
      StorageCapacity = 123,
      StorageType = "SSD"|"HDD",
      VpcId = "string",
      SubnetIds = list(
        "string"
      ),
      NetworkInterfaceIds = list(
        "string"
      ),
      DNSName = "string",
      KmsKeyId = "string",
      ResourceARN = "string",
      Tags = list(
        list(
          Key = "string",
          Value = "string"
        )
      ),
      WindowsConfiguration = list(
        ActiveDirectoryId = "string",
        SelfManagedActiveDirectoryConfiguration = list(
          DomainName = "string",
          OrganizationalUnitDistinguishedName = "string",
          FileSystemAdministratorsGroup = "string",
          UserName = "string",
          DnsIps = list(
            "string"
          )
        ),
        DeploymentType = "MULTI_AZ_1"|"SINGLE_AZ_1"|"SINGLE_AZ_2",
        RemoteAdministrationEndpoint = "string",
        PreferredSubnetId = "string",
        PreferredFileServerIp = "string",
        ThroughputCapacity = 123,
        MaintenanceOperationsInProgress = list(
          "PATCHING"|"BACKING_UP"
        ),
        WeeklyMaintenanceStartTime = "string",
        DailyAutomaticBackupStartTime = "string",
        AutomaticBackupRetentionDays = 123,
        CopyTagsToBackups = TRUE|FALSE,
        Aliases = list(
          list(
            Name = "string",
            Lifecycle = "AVAILABLE"|"CREATING"|"DELETING"|"CREATE_FAILED"|"DELETE_FAILED"
          )
        )
      ),
      LustreConfiguration = list(
        WeeklyMaintenanceStartTime = "string",
        DataRepositoryConfiguration = list(
          Lifecycle = "CREATING"|"AVAILABLE"|"MISCONFIGURED"|"UPDATING"|"DELETING",
          ImportPath = "string",
          ExportPath = "string",
          ImportedFileChunkSize = 123,
          AutoImportPolicy = "NONE"|"NEW"|"NEW_CHANGED",
          FailureDetails = list(
            Message = "string"
          )
        ),
        DeploymentType = "SCRATCH_1"|"SCRATCH_2"|"PERSISTENT_1",
        PerUnitStorageThroughput = 123,
        MountName = "string",
        DailyAutomaticBackupStartTime = "string",
        AutomaticBackupRetentionDays = 123,
        CopyTagsToBackups = TRUE|FALSE,
        DriveCacheType = "NONE"|"READ"
      ),
      AdministrativeActions = list(
        list(
          AdministrativeActionType = "FILE_SYSTEM_UPDATE"|"STORAGE_OPTIMIZATION"|"FILE_SYSTEM_ALIAS_ASSOCIATION"|"FILE_SYSTEM_ALIAS_DISASSOCIATION",
          ProgressPercent = 123,
          RequestTime = as.POSIXct(
            "2015-01-01"
          ),
          Status = "FAILED"|"IN_PROGRESS"|"PENDING"|"COMPLETED"|"UPDATED_OPTIMIZING",
          TargetFileSystemValues = list(),
          FailureDetails = list(
            Message = "string"
          )
        )
      )
    ),
    DirectoryInformation = list(
      DomainName = "string",
      ActiveDirectoryId = "string",
      ResourceARN = "string"
    ),
    OwnerId = "string",
    SourceBackupId = "string",
    SourceBackupRegion = "string"
  )
)
}
}
\description{
Copies an existing backup within the same AWS account to another Region
(cross-Region copy) or within the same Region (in-Region copy). You can
have up to five backup copy requests in progress to a single destination
Region per account.

You can use cross-Region backup copies for cross-region disaster
recovery. You periodically take backups and copy them to another Region
so that in the event of a disaster in the primary Region, you can
restore from backup and recover availability quickly in the other
Region. You can make cross-Region copies only within your AWS partition.

You can also use backup copies to clone your file data set to another
Region or within the same Region.

You can use the \code{SourceRegion} parameter to specify the AWS Region from
which the backup will be copied. For example, if you make the call from
the \code{us-west-1} Region and want to copy a backup from the \code{us-east-2}
Region, you specify \code{us-east-2} in the \code{SourceRegion} parameter to make
a cross-Region copy. If you don't specify a Region, the backup copy is
created in the same Region where the request is sent from (in-Region
copy).

For more information on creating backup copies, see \href{https://docs.aws.amazon.com/fsx/latest/WindowsGuide/}{Copying backups} in the
\emph{Amazon FSx for Windows User Guide} and \href{https://docs.aws.amazon.com/fsx/latest/LustreGuide/}{Copying backups} in the
\emph{Amazon FSx for Lustre User Guide}.
}
\section{Request syntax}{
\preformatted{svc$copy_backup(
  ClientRequestToken = "string",
  SourceBackupId = "string",
  SourceRegion = "string",
  KmsKeyId = "string",
  CopyTags = TRUE|FALSE,
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  )
)
}
}

\examples{
\dontrun{
# This operation copies an Amazon FSx backup.
svc$copy_backup(
  SourceBackupId = "backup-03e3c82e0183b7b6b",
  SourceRegion = "us-east-2"
)
}

}
\keyword{internal}
