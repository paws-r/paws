% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codedeploy_operations.R
\name{codedeploy_put_lifecycle_event_hook_execution_status}
\alias{codedeploy_put_lifecycle_event_hook_execution_status}
\title{Sets the result of a Lambda validation function}
\usage{
codedeploy_put_lifecycle_event_hook_execution_status(deploymentId,
  lifecycleEventHookExecutionId, status)
}
\arguments{
\item{deploymentId}{The unique ID of a deployment. Pass this ID to a Lambda function that
validates a deployment lifecycle event.}

\item{lifecycleEventHookExecutionId}{The execution ID of a deployment\'s lifecycle hook. A deployment
lifecycle hook is specified in the \code{hooks} section of the AppSpec file.}

\item{status}{The result of a Lambda function that validates a deployment lifecycle
event (\code{Succeeded} or \code{Failed}).}
}
\description{
Sets the result of a Lambda validation function. The function validates
one or both lifecycle events (\code{BeforeAllowTraffic} and
\code{AfterAllowTraffic}) and returns \code{Succeeded} or \code{Failed}.
}
\section{Request syntax}{
\preformatted{svc$put_lifecycle_event_hook_execution_status(
  deploymentId = "string",
  lifecycleEventHookExecutionId = "string",
  status = "Pending"|"InProgress"|"Succeeded"|"Failed"|"Skipped"|"Unknown"
)
}
}

\keyword{internal}
