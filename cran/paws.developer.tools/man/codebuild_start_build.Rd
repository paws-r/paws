% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/codebuild_operations.R
\name{codebuild_start_build}
\alias{codebuild_start_build}
\title{Starts running a build}
\usage{
codebuild_start_build(projectName, secondarySourcesOverride,
  secondarySourcesVersionOverride, sourceVersion, artifactsOverride,
  secondaryArtifactsOverride, environmentVariablesOverride,
  sourceTypeOverride, sourceLocationOverride, sourceAuthOverride,
  gitCloneDepthOverride, gitSubmodulesConfigOverride, buildspecOverride,
  insecureSslOverride, reportBuildStatusOverride, environmentTypeOverride,
  imageOverride, computeTypeOverride, certificateOverride, cacheOverride,
  serviceRoleOverride, privilegedModeOverride, timeoutInMinutesOverride,
  queuedTimeoutInMinutesOverride, encryptionKeyOverride, idempotencyToken,
  logsConfigOverride, registryCredentialOverride,
  imagePullCredentialsTypeOverride)
}
\arguments{
\item{projectName}{[required] The name of the AWS CodeBuild build project to start running a build.}

\item{secondarySourcesOverride}{An array of \code{ProjectSource} objects.}

\item{secondarySourcesVersionOverride}{An array of \code{ProjectSourceVersion} objects that specify one or more
versions of the project\'s secondary sources to be used for this build
only.}

\item{sourceVersion}{A version of the build input to be built, for this build only. If not
specified, the latest version is used. If specified, must be one of:
\itemize{
\item For AWS CodeCommit: the commit ID, branch, or Git tag to use.
\item For GitHub: the commit ID, pull request ID, branch name, or tag name
that corresponds to the version of the source code you want to
build. If a pull request ID is specified, it must use the format
\code{pr/pull-request-ID} (for example \code{pr/25}). If a branch name is
specified, the branch\'s HEAD commit ID is used. If not specified,
the default branch\'s HEAD commit ID is used.
\item For Bitbucket: the commit ID, branch name, or tag name that
corresponds to the version of the source code you want to build. If
a branch name is specified, the branch\'s HEAD commit ID is used. If
not specified, the default branch\'s HEAD commit ID is used.
\item For Amazon Simple Storage Service (Amazon S3): the version ID of the
object that represents the build input ZIP file to use.
}

If \code{sourceVersion} is specified at the project level, then this
\code{sourceVersion} (at the build level) takes precedence.

For more information, see \href{https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html}{Source Version Sample with CodeBuild}
in the \emph{AWS CodeBuild User Guide}.}

\item{artifactsOverride}{Build output artifact settings that override, for this build only, the
latest ones already defined in the build project.}

\item{secondaryArtifactsOverride}{An array of \code{ProjectArtifacts} objects.}

\item{environmentVariablesOverride}{A set of environment variables that overrides, for this build only, the
latest ones already defined in the build project.}

\item{sourceTypeOverride}{A source input type, for this build, that overrides the source input
defined in the build project.}

\item{sourceLocationOverride}{A location that overrides, for this build, the source location for the
one defined in the build project.}

\item{sourceAuthOverride}{An authorization type for this build that overrides the one defined in
the build project. This override applies only if the build project\'s
source is BitBucket or GitHub.}

\item{gitCloneDepthOverride}{The user-defined depth of history, with a minimum value of 0, that
overrides, for this build only, any previous depth of history defined in
the build project.}

\item{gitSubmodulesConfigOverride}{Information about the Git submodules configuration for this build of an
AWS CodeBuild build project.}

\item{buildspecOverride}{A build spec declaration that overrides, for this build only, the latest
one already defined in the build project.}

\item{insecureSslOverride}{Enable this flag to override the insecure SSL setting that is specified
in the build project. The insecure SSL setting determines whether to
ignore SSL warnings while connecting to the project source code. This
override applies only if the build\'s source is GitHub Enterprise.}

\item{reportBuildStatusOverride}{Set to true to report to your source provider the status of a build\'s
start and completion. If you use this option with a source provider
other than GitHub, GitHub Enterprise, or Bitbucket, an
invalidInputException is thrown.

The status of a build triggered by a webhook is always reported to your
source provider.}

\item{environmentTypeOverride}{A container type for this build that overrides the one specified in the
build project.}

\item{imageOverride}{The name of an image for this build that overrides the one specified in
the build project.}

\item{computeTypeOverride}{The name of a compute type for this build that overrides the one
specified in the build project.}

\item{certificateOverride}{The name of a certificate for this build that overrides the one
specified in the build project.}

\item{cacheOverride}{A ProjectCache object specified for this build that overrides the one
defined in the build project.}

\item{serviceRoleOverride}{The name of a service role for this build that overrides the one
specified in the build project.}

\item{privilegedModeOverride}{Enable this flag to override privileged mode in the build project.}

\item{timeoutInMinutesOverride}{The number of build timeout minutes, from 5 to 480 (8 hours), that
overrides, for this build only, the latest setting already defined in
the build project.}

\item{queuedTimeoutInMinutesOverride}{The number of minutes a build is allowed to be queued before it times
out.}

\item{encryptionKeyOverride}{The AWS Key Management Service (AWS KMS) customer master key (CMK) that
overrides the one specified in the build project. The CMK key encrypts
the build output artifacts.

You can use a cross-account KMS key to encrypt the build output
artifacts if your service role has permission to that key.

You can specify either the Amazon Resource Name (ARN) of the CMK or, if
available, the CMK\'s alias (using the format
\verb{alias/<i>alias-name</i> }).}

\item{idempotencyToken}{A unique, case sensitive identifier you provide to ensure the
idempotency of the StartBuild request. The token is included in the
StartBuild request and is valid for 12 hours. If you repeat the
StartBuild request with the same token, but change a parameter, AWS
CodeBuild returns a parameter mismatch error.}

\item{logsConfigOverride}{Log settings for this build that override the log settings defined in
the build project.}

\item{registryCredentialOverride}{The credentials for access to a private registry.}

\item{imagePullCredentialsTypeOverride}{The type of credentials AWS CodeBuild uses to pull images in your build.
There are two valid values:
\itemize{
\item \code{CODEBUILD} specifies that AWS CodeBuild uses its own credentials.
This requires that you modify your ECR repository policy to trust
AWS CodeBuild\'s service principal.
\item \code{SERVICE_ROLE} specifies that AWS CodeBuild uses your build
project\'s service role.
}

When using a cross-account or private registry image, you must use
SERVICE\\_ROLE credentials. When using an AWS CodeBuild curated image,
you must use CODEBUILD credentials.}
}
\description{
Starts running a build.
}
\section{Request syntax}{
\preformatted{svc$start_build(
  projectName = "string",
  secondarySourcesOverride = list(
    list(
      type = "CODECOMMIT"|"CODEPIPELINE"|"GITHUB"|"S3"|"BITBUCKET"|"GITHUB_ENTERPRISE"|"NO_SOURCE",
      location = "string",
      gitCloneDepth = 123,
      gitSubmodulesConfig = list(
        fetchSubmodules = TRUE|FALSE
      ),
      buildspec = "string",
      auth = list(
        type = "OAUTH",
        resource = "string"
      ),
      reportBuildStatus = TRUE|FALSE,
      insecureSsl = TRUE|FALSE,
      sourceIdentifier = "string"
    )
  ),
  secondarySourcesVersionOverride = list(
    list(
      sourceIdentifier = "string",
      sourceVersion = "string"
    )
  ),
  sourceVersion = "string",
  artifactsOverride = list(
    type = "CODEPIPELINE"|"S3"|"NO_ARTIFACTS",
    location = "string",
    path = "string",
    namespaceType = "NONE"|"BUILD_ID",
    name = "string",
    packaging = "NONE"|"ZIP",
    overrideArtifactName = TRUE|FALSE,
    encryptionDisabled = TRUE|FALSE,
    artifactIdentifier = "string"
  ),
  secondaryArtifactsOverride = list(
    list(
      type = "CODEPIPELINE"|"S3"|"NO_ARTIFACTS",
      location = "string",
      path = "string",
      namespaceType = "NONE"|"BUILD_ID",
      name = "string",
      packaging = "NONE"|"ZIP",
      overrideArtifactName = TRUE|FALSE,
      encryptionDisabled = TRUE|FALSE,
      artifactIdentifier = "string"
    )
  ),
  environmentVariablesOverride = list(
    list(
      name = "string",
      value = "string",
      type = "PLAINTEXT"|"PARAMETER_STORE"|"SECRETS_MANAGER"
    )
  ),
  sourceTypeOverride = "CODECOMMIT"|"CODEPIPELINE"|"GITHUB"|"S3"|"BITBUCKET"|"GITHUB_ENTERPRISE"|"NO_SOURCE",
  sourceLocationOverride = "string",
  sourceAuthOverride = list(
    type = "OAUTH",
    resource = "string"
  ),
  gitCloneDepthOverride = 123,
  gitSubmodulesConfigOverride = list(
    fetchSubmodules = TRUE|FALSE
  ),
  buildspecOverride = "string",
  insecureSslOverride = TRUE|FALSE,
  reportBuildStatusOverride = TRUE|FALSE,
  environmentTypeOverride = "WINDOWS_CONTAINER"|"LINUX_CONTAINER"|"LINUX_GPU_CONTAINER"|"ARM_CONTAINER",
  imageOverride = "string",
  computeTypeOverride = "BUILD_GENERAL1_SMALL"|"BUILD_GENERAL1_MEDIUM"|"BUILD_GENERAL1_LARGE"|"BUILD_GENERAL1_2XLARGE",
  certificateOverride = "string",
  cacheOverride = list(
    type = "NO_CACHE"|"S3"|"LOCAL",
    location = "string",
    modes = list(
      "LOCAL_DOCKER_LAYER_CACHE"|"LOCAL_SOURCE_CACHE"|"LOCAL_CUSTOM_CACHE"
    )
  ),
  serviceRoleOverride = "string",
  privilegedModeOverride = TRUE|FALSE,
  timeoutInMinutesOverride = 123,
  queuedTimeoutInMinutesOverride = 123,
  encryptionKeyOverride = "string",
  idempotencyToken = "string",
  logsConfigOverride = list(
    cloudWatchLogs = list(
      status = "ENABLED"|"DISABLED",
      groupName = "string",
      streamName = "string"
    ),
    s3Logs = list(
      status = "ENABLED"|"DISABLED",
      location = "string",
      encryptionDisabled = TRUE|FALSE
    )
  ),
  registryCredentialOverride = list(
    credential = "string",
    credentialProvider = "SECRETS_MANAGER"
  ),
  imagePullCredentialsTypeOverride = "CODEBUILD"|"SERVICE_ROLE"
)
}
}

\keyword{internal}
