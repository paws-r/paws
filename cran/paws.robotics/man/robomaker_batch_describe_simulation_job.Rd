% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/robomaker_operations.R
\name{robomaker_batch_describe_simulation_job}
\alias{robomaker_batch_describe_simulation_job}
\title{Describes one or more simulation jobs}
\usage{
robomaker_batch_describe_simulation_job(jobs)
}
\arguments{
\item{jobs}{[required] A list of Amazon Resource Names (ARNs) of simulation jobs to describe.}
}
\value{
A list with the following syntax:\preformatted{list(
  jobs = list(
    list(
      arn = "string",
      name = "string",
      status = "Pending"|"Preparing"|"Running"|"Restarting"|"Completed"|"Failed"|"RunningFailed"|"Terminating"|"Terminated"|"Canceled",
      lastStartedAt = as.POSIXct(
        "2015-01-01"
      ),
      lastUpdatedAt = as.POSIXct(
        "2015-01-01"
      ),
      failureBehavior = "Fail"|"Continue",
      failureCode = "InternalServiceError"|"RobotApplicationCrash"|"SimulationApplicationCrash"|"RobotApplicationHealthCheckFailure"|"SimulationApplicationHealthCheckFailure"|"BadPermissionsRobotApplication"|"BadPermissionsSimulationApplication"|"BadPermissionsS3Object"|"BadPermissionsS3Output"|"BadPermissionsCloudwatchLogs"|"SubnetIpLimitExceeded"|"ENILimitExceeded"|"BadPermissionsUserCredentials"|"InvalidBundleRobotApplication"|"InvalidBundleSimulationApplication"|"InvalidS3Resource"|"ThrottlingError"|"LimitExceeded"|"MismatchedEtag"|"RobotApplicationVersionMismatchedEtag"|"SimulationApplicationVersionMismatchedEtag"|"ResourceNotFound"|"RequestThrottled"|"BatchTimedOut"|"BatchCanceled"|"InvalidInput"|"WrongRegionS3Bucket"|"WrongRegionS3Output"|"WrongRegionRobotApplication"|"WrongRegionSimulationApplication"|"UploadContentMismatchError",
      failureReason = "string",
      clientRequestToken = "string",
      outputLocation = list(
        s3Bucket = "string",
        s3Prefix = "string"
      ),
      loggingConfig = list(
        recordAllRosTopics = TRUE|FALSE
      ),
      maxJobDurationInSeconds = 123,
      simulationTimeMillis = 123,
      iamRole = "string",
      robotApplications = list(
        list(
          application = "string",
          applicationVersion = "string",
          launchConfig = list(
            packageName = "string",
            launchFile = "string",
            environmentVariables = list(
              "string"
            ),
            portForwardingConfig = list(
              portMappings = list(
                list(
                  jobPort = 123,
                  applicationPort = 123,
                  enableOnPublicIp = TRUE|FALSE
                )
              )
            ),
            streamUI = TRUE|FALSE
          ),
          uploadConfigurations = list(
            list(
              name = "string",
              path = "string",
              uploadBehavior = "UPLOAD_ON_TERMINATE"|"UPLOAD_ROLLING_AUTO_REMOVE"
            )
          ),
          useDefaultUploadConfigurations = TRUE|FALSE,
          tools = list(
            list(
              streamUI = TRUE|FALSE,
              name = "string",
              command = "string",
              streamOutputToCloudWatch = TRUE|FALSE,
              exitBehavior = "FAIL"|"RESTART"
            )
          ),
          useDefaultTools = TRUE|FALSE
        )
      ),
      simulationApplications = list(
        list(
          application = "string",
          applicationVersion = "string",
          launchConfig = list(
            packageName = "string",
            launchFile = "string",
            environmentVariables = list(
              "string"
            ),
            portForwardingConfig = list(
              portMappings = list(
                list(
                  jobPort = 123,
                  applicationPort = 123,
                  enableOnPublicIp = TRUE|FALSE
                )
              )
            ),
            streamUI = TRUE|FALSE
          ),
          uploadConfigurations = list(
            list(
              name = "string",
              path = "string",
              uploadBehavior = "UPLOAD_ON_TERMINATE"|"UPLOAD_ROLLING_AUTO_REMOVE"
            )
          ),
          worldConfigs = list(
            list(
              world = "string"
            )
          ),
          useDefaultUploadConfigurations = TRUE|FALSE,
          tools = list(
            list(
              streamUI = TRUE|FALSE,
              name = "string",
              command = "string",
              streamOutputToCloudWatch = TRUE|FALSE,
              exitBehavior = "FAIL"|"RESTART"
            )
          ),
          useDefaultTools = TRUE|FALSE
        )
      ),
      dataSources = list(
        list(
          name = "string",
          s3Bucket = "string",
          s3Keys = list(
            list(
              s3Key = "string",
              etag = "string"
            )
          )
        )
      ),
      tags = list(
        "string"
      ),
      vpcConfig = list(
        subnets = list(
          "string"
        ),
        securityGroups = list(
          "string"
        ),
        vpcId = "string",
        assignPublicIp = TRUE|FALSE
      ),
      networkInterface = list(
        networkInterfaceId = "string",
        privateIpAddress = "string",
        publicIpAddress = "string"
      ),
      compute = list(
        simulationUnitLimit = 123
      )
    )
  ),
  unprocessedJobs = list(
    "string"
  )
)
}
}
\description{
Describes one or more simulation jobs.
}
\section{Request syntax}{
\preformatted{svc$batch_describe_simulation_job(
  jobs = list(
    "string"
  )
)
}
}

\keyword{internal}
