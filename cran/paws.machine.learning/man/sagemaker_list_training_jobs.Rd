% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sagemaker_operations.R
\name{sagemaker_list_training_jobs}
\alias{sagemaker_list_training_jobs}
\title{Lists training jobs}
\usage{
sagemaker_list_training_jobs(NextToken, MaxResults, CreationTimeAfter,
  CreationTimeBefore, LastModifiedTimeAfter, LastModifiedTimeBefore,
  NameContains, StatusEquals, SortBy, SortOrder)
}
\arguments{
\item{NextToken}{If the result of the previous
\code{\link[=sagemaker_list_training_jobs]{list_training_jobs}} request was
truncated, the response includes a \code{NextToken}. To retrieve the next set
of training jobs, use the token in the next request.}

\item{MaxResults}{The maximum number of training jobs to return in the response.}

\item{CreationTimeAfter}{A filter that returns only training jobs created after the specified
time (timestamp).}

\item{CreationTimeBefore}{A filter that returns only training jobs created before the specified
time (timestamp).}

\item{LastModifiedTimeAfter}{A filter that returns only training jobs modified after the specified
time (timestamp).}

\item{LastModifiedTimeBefore}{A filter that returns only training jobs modified before the specified
time (timestamp).}

\item{NameContains}{A string in the training job name. This filter returns only training
jobs whose name contains the specified string.}

\item{StatusEquals}{A filter that retrieves only training jobs with a specific status.}

\item{SortBy}{The field to sort results by. The default is \code{CreationTime}.}

\item{SortOrder}{The sort order for results. The default is \code{Ascending}.}
}
\value{
A list with the following syntax:\preformatted{list(
  TrainingJobSummaries = list(
    list(
      TrainingJobName = "string",
      TrainingJobArn = "string",
      CreationTime = as.POSIXct(
        "2015-01-01"
      ),
      TrainingEndTime = as.POSIXct(
        "2015-01-01"
      ),
      LastModifiedTime = as.POSIXct(
        "2015-01-01"
      ),
      TrainingJobStatus = "InProgress"|"Completed"|"Failed"|"Stopping"|"Stopped"
    )
  ),
  NextToken = "string"
)
}
}
\description{
Lists training jobs.

When \code{StatusEquals} and \code{MaxResults} are set at the same time, the
\code{MaxResults} number of training jobs are first retrieved ignoring the
\code{StatusEquals} parameter and then they are filtered by the
\code{StatusEquals} parameter, which is returned as a response.

For example, if \code{\link[=sagemaker_list_training_jobs]{list_training_jobs}} is
invoked with the following parameters:

\verb{\{ ... MaxResults: 100, StatusEquals: InProgress ... \}}

First, 100 trainings jobs with any status, including those other than
\code{InProgress}, are selected (sorted according to the creation time, from
the most current to the oldest). Next, those with a status of
\code{InProgress} are returned.

You can quickly test the API using the following AWS CLI code.

\verb{aws sagemaker list-training-jobs --max-results 100 --status-equals InProgress}
}
\section{Request syntax}{
\preformatted{svc$list_training_jobs(
  NextToken = "string",
  MaxResults = 123,
  CreationTimeAfter = as.POSIXct(
    "2015-01-01"
  ),
  CreationTimeBefore = as.POSIXct(
    "2015-01-01"
  ),
  LastModifiedTimeAfter = as.POSIXct(
    "2015-01-01"
  ),
  LastModifiedTimeBefore = as.POSIXct(
    "2015-01-01"
  ),
  NameContains = "string",
  StatusEquals = "InProgress"|"Completed"|"Failed"|"Stopping"|"Stopped",
  SortBy = "Name"|"CreationTime"|"Status",
  SortOrder = "Ascending"|"Descending"
)
}
}

\keyword{internal}
