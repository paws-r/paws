% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.R
\name{codestarnotifications}
\alias{codestarnotifications}
\title{AWS CodeStar Notifications}
\usage{
codestarnotifications(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.
\itemize{
\item{\strong{access_key_id}:} {AWS access key ID}
\item{\strong{secret_access_key}:} {AWS secret access key}
\item{\strong{session_token}:} {AWS temporary session token}
\item{\strong{profile}:} {The name of a profile to use. If not given, then the default profile is used.}
\item{\strong{anonymous}:} {Set anonymous credentials.}
\item{\strong{endpoint}:} {The complete URL to use for the constructed client.}
\item{\strong{region}:} {The AWS Region used in instantiating the client.}
\item{\strong{close_connection}:} {Immediately close all HTTP connections.}
\item{\strong{timeout}:} {The time in seconds till a timeout exception is thrown when attempting to make a connection. The default is 60 seconds.}
\item{\strong{s3_force_path_style}:} {Set this to \code{true} to force the request to use path-style addressing, i.e., \verb{http://s3.amazonaws.com/BUCKET/KEY}.}
}}
}
\value{
A client for the service. You can call the service's operations using
syntax like \code{svc$operation(...)}, where \code{svc} is the name you've assigned
to the client. The available operations are listed in the
Operations section.
}
\description{
This AWS CodeStar Notifications API Reference provides descriptions and
usage examples of the operations and data types for the AWS CodeStar
Notifications API. You can use the AWS CodeStar Notifications API to
work with the following objects:

Notification rules, by calling the following:
\itemize{
\item \code{create_notification_rule},
which creates a notification rule for a resource in your account.
\item \code{delete_notification_rule},
which deletes a notification rule.
\item \code{describe_notification_rule},
which provides information about a notification rule.
\item \code{list_notification_rules},
which lists the notification rules associated with your account.
\item \code{update_notification_rule},
which changes the name, events, or targets associated with a
notification rule.
\item \code{subscribe}, which subscribes a
target to a notification rule.
\item \code{unsubscribe}, which removes a
target from a notification rule.
}

Targets, by calling the following:
\itemize{
\item \code{delete_target}, which
removes a notification rule target (SNS topic) from a notification
rule.
\item \code{list_targets}, which lists
the targets associated with a notification rule.
}

Events, by calling the following:
\itemize{
\item \code{list_event_types}, which
lists the event types you can include in a notification rule.
}

Tags, by calling the following:
\itemize{
\item \code{list_tags_for_resource},
which lists the tags already associated with a notification rule in
your account.
\item \code{tag_resource}, which
associates a tag you provide with a notification rule in your
account.
\item \code{untag_resource}, which
removes a tag from a notification rule in your account.
}

For information about how to use AWS CodeStar Notifications, see link in
the CodeStarNotifications User Guide.
}
\section{Service syntax}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{svc <- codestarnotifications(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string",
      anonymous = "logical"
    ),
    endpoint = "string",
    region = "string",
    close_connection = "logical",
    timeout = "numeric",
    s3_force_path_style = "logical"
  )
)
}\if{html}{\out{</div>}}
}

\section{Operations}{

\tabular{ll}{
\link[paws.developer.tools:codestarnotifications_create_notification_rule]{create_notification_rule} \tab Creates a notification rule for a resource\cr
\link[paws.developer.tools:codestarnotifications_delete_notification_rule]{delete_notification_rule} \tab Deletes a notification rule for a resource\cr
\link[paws.developer.tools:codestarnotifications_delete_target]{delete_target} \tab Deletes a specified target for notifications\cr
\link[paws.developer.tools:codestarnotifications_describe_notification_rule]{describe_notification_rule} \tab Returns information about a specified notification rule\cr
\link[paws.developer.tools:codestarnotifications_list_event_types]{list_event_types} \tab Returns information about the event types available for configuring notifications\cr
\link[paws.developer.tools:codestarnotifications_list_notification_rules]{list_notification_rules} \tab Returns a list of the notification rules for an AWS account\cr
\link[paws.developer.tools:codestarnotifications_list_tags_for_resource]{list_tags_for_resource} \tab Returns a list of the tags associated with a notification rule\cr
\link[paws.developer.tools:codestarnotifications_list_targets]{list_targets} \tab Returns a list of the notification rule targets for an AWS account\cr
\link[paws.developer.tools:codestarnotifications_subscribe]{subscribe} \tab Creates an association between a notification rule and an SNS topic so that the associated target can receive notifications when the events described in the rule are triggered\cr
\link[paws.developer.tools:codestarnotifications_tag_resource]{tag_resource} \tab Associates a set of provided tags with a notification rule\cr
\link[paws.developer.tools:codestarnotifications_unsubscribe]{unsubscribe} \tab Removes an association between a notification rule and an Amazon SNS topic so that subscribers to that topic stop receiving notifications when the events described in the rule are triggered\cr
\link[paws.developer.tools:codestarnotifications_untag_resource]{untag_resource} \tab Removes the association between one or more provided tags and a notification rule\cr
\link[paws.developer.tools:codestarnotifications_update_notification_rule]{update_notification_rule} \tab Updates a notification rule for a resource
}
}

\examples{
\dontrun{
svc <- codestarnotifications()
svc$create_notification_rule(
  Foo = 123
)
}

}
