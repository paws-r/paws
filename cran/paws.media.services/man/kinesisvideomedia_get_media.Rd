% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kinesisvideomedia_operations.R
\name{kinesisvideomedia_get_media}
\alias{kinesisvideomedia_get_media}
\title{Use this API to retrieve media content from a Kinesis video stream}
\usage{
kinesisvideomedia_get_media(StreamName, StreamARN, StartSelector)
}
\arguments{
\item{StreamName}{The Kinesis video stream name from where you want to get the media
content. If you don't specify the \code{streamName}, you must specify the
\code{streamARN}.}

\item{StreamARN}{The ARN of the stream from where you want to get the media content. If
you don't specify the \code{streamARN}, you must specify the \code{streamName}.}

\item{StartSelector}{[required] Identifies the starting chunk to get from the specified stream.}
}
\description{
Use this API to retrieve media content from a Kinesis video stream. In
the request, you identify the stream name or stream Amazon Resource Name
(ARN), and the starting chunk. Kinesis Video Streams then returns a
stream of chunks in order by fragment number.
}
\details{
You must first call the \code{GetDataEndpoint} API to get an endpoint. Then
send the \code{GetMedia} requests to this endpoint using the \href{https://docs.aws.amazon.com/cli/latest/reference/}{\--endpoint-url parameter}.

When you put media data (fragments) on a stream, Kinesis Video Streams
stores each incoming fragment and related metadata in what is called a
"chunk." For more information, see . The \code{GetMedia} API returns a
stream of these chunks starting from the chunk that you specify in the
request.

The following limits apply when using the \code{GetMedia} API:
\itemize{
\item A client can call \code{GetMedia} up to five times per second per stream.
\item Kinesis Video Streams sends media data at a rate of up to 25
megabytes per second (or 200 megabits per second) during a
\code{GetMedia} session.
}
}
\section{Request syntax}{
\preformatted{svc$get_media(
  StreamName = "string",
  StreamARN = "string",
  StartSelector = list(
    StartSelectorType = "FRAGMENT_NUMBER"|"SERVER_TIMESTAMP"|"PRODUCER_TIMESTAMP"|"NOW"|"EARLIEST"|"CONTINUATION_TOKEN",
    AfterFragmentNumber = "string",
    StartTimestamp = as.POSIXct(
      "2015-01-01"
    ),
    ContinuationToken = "string"
  )
)
}
}

\keyword{internal}
