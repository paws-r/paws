% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediastore_operations.R
\name{mediastore_put_metric_policy}
\alias{mediastore_put_metric_policy}
\title{The metric policy that you want to add to the container}
\usage{
mediastore_put_metric_policy(ContainerName, MetricPolicy)
}
\arguments{
\item{ContainerName}{[required] The name of the container that you want to add the metric policy to.}

\item{MetricPolicy}{[required] The metric policy that you want to associate with the container. In the
policy, you must indicate whether you want MediaStore to send
container-level metrics. You can also include up to five rules to define
groups of objects that you want MediaStore to send object-level metrics
for. If you include rules in the policy, construct each rule with both
of the following:
\itemize{
\item An object group that defines which objects to include in the group.
The definition can be a path or a file name, but it can't have more
than 900 characters. Valid characters are: a-z, A-Z, 0-9, _
(underscore), = (equal), : (colon), . (period), - (hyphen), ~
(tilde), / (forward slash), and * (asterisk). Wildcards (*) are
acceptable.
\item An object group name that allows you to refer to the object group.
The name can't have more than 30 characters. Valid characters are:
a-z, A-Z, 0-9, and _ (underscore).
}}
}
\value{
An empty list.
}
\description{
The metric policy that you want to add to the container. A metric policy
allows AWS Elemental MediaStore to send metrics to Amazon CloudWatch. It
takes up to 20 minutes for the new policy to take effect.
}
\section{Request syntax}{
\preformatted{svc$put_metric_policy(
  ContainerName = "string",
  MetricPolicy = list(
    ContainerLevelMetrics = "ENABLED"|"DISABLED",
    MetricPolicyRules = list(
      list(
        ObjectGroup = "string",
        ObjectGroupName = "string"
      )
    )
  )
)
}
}

\keyword{internal}
