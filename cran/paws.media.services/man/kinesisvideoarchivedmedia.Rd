% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kinesisvideoarchivedmedia_service.R
\name{kinesisvideoarchivedmedia}
\alias{kinesisvideoarchivedmedia}
\title{Amazon Kinesis Video Streams Archived Media}
\usage{
kinesisvideoarchivedmedia(config = list())
}
\arguments{
\item{config}{Optional configuration of credentials, endpoint, and/or region.}
}
\value{
A client for the service. You can call the service's operations using
syntax like \code{svc$operation(...)}, where \code{svc} is the name you've assigned
to the client. The available operations are listed in the
Operations section.
}
\description{
Amazon Kinesis Video Streams Archived Media
}
\section{Service syntax}{
\preformatted{svc <- kinesisvideoarchivedmedia(
  config = list(
    credentials = list(
      creds = list(
        access_key_id = "string",
        secret_access_key = "string",
        session_token = "string"
      ),
      profile = "string"
    ),
    endpoint = "string",
    region = "string"
  )
)
}
}

\section{Operations}{

\tabular{ll}{
\link[=kinesisvideoarchivedmedia_get_clip]{get_clip} \tab Downloads an MP4 file (clip) containing the archived, on-demand media from the specified video stream over the specified time range\cr
\link[=kinesisvideoarchivedmedia_get_dash_streaming_session_url]{get_dash_streaming_session_url} \tab Retrieves an MPEG Dynamic Adaptive Streaming over HTTP (DASH) URL for the stream\cr
\link[=kinesisvideoarchivedmedia_get_hls_streaming_session_url]{get_hls_streaming_session_url} \tab Retrieves an HTTP Live Streaming (HLS) URL for the stream\cr
\link[=kinesisvideoarchivedmedia_get_media_for_fragment_list]{get_media_for_fragment_list} \tab Gets media for a list of fragments (specified by fragment number) from the archived data in an Amazon Kinesis video stream\cr
\link[=kinesisvideoarchivedmedia_list_fragments]{list_fragments} \tab Returns a list of Fragment objects from the specified stream and timestamp range within the archived data
}
}

\examples{
\dontrun{
svc <- kinesisvideoarchivedmedia()
svc$get_clip(
  Foo = 123
)
}

}
