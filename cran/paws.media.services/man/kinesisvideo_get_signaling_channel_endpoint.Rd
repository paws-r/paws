% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kinesisvideo_operations.R
\name{kinesisvideo_get_signaling_channel_endpoint}
\alias{kinesisvideo_get_signaling_channel_endpoint}
\title{Provides an endpoint for the specified signaling channel to send and
receive messages}
\usage{
kinesisvideo_get_signaling_channel_endpoint(ChannelARN,
  SingleMasterChannelEndpointConfiguration)
}
\arguments{
\item{ChannelARN}{[required] The ARN of the signalling channel for which you want to get an endpoint.}

\item{SingleMasterChannelEndpointConfiguration}{A structure containing the endpoint configuration for the
\code{SINGLE_MASTER} channel type.}
}
\description{
Provides an endpoint for the specified signaling channel to send and
receive messages. This API uses the
\code{SingleMasterChannelEndpointConfiguration} input parameter, which
consists of the \code{Protocols} and \code{Role} properties.
}
\details{
\code{Protocols} is used to determine the communication mechanism. For
example, specifying \code{WSS} as the protocol, results in this API producing
a secure websocket endpoint, and specifying \code{HTTPS} as the protocol,
results in this API generating an HTTPS endpoint.

\code{Role} determines the messaging permissions. A \code{MASTER} role results in
this API generating an endpoint that a client can use to communicate
with any of the viewers on the channel. A \code{VIEWER} role results in this
API generating an endpoint that a client can use to communicate only
with a \code{MASTER}.
}
\section{Request syntax}{
\preformatted{svc$get_signaling_channel_endpoint(
  ChannelARN = "string",
  SingleMasterChannelEndpointConfiguration = list(
    Protocols = list(
      "WSS"|"HTTPS"
    ),
    Role = "MASTER"|"VIEWER"
  )
)
}
}

\keyword{internal}
