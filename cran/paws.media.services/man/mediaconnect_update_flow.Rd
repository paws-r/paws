% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mediaconnect_operations.R
\name{mediaconnect_update_flow}
\alias{mediaconnect_update_flow}
\title{Updates flow}
\usage{
mediaconnect_update_flow(FlowArn, SourceFailoverConfig)
}
\arguments{
\item{FlowArn}{[required] The flow that you want to update.}

\item{SourceFailoverConfig}{}
}
\value{
A list with the following syntax:\preformatted{list(
  Flow = list(
    AvailabilityZone = "string",
    Description = "string",
    EgressIp = "string",
    Entitlements = list(
      list(
        DataTransferSubscriberFeePercent = 123,
        Description = "string",
        Encryption = list(
          Algorithm = "aes128"|"aes192"|"aes256",
          ConstantInitializationVector = "string",
          DeviceId = "string",
          KeyType = "speke"|"static-key",
          Region = "string",
          ResourceId = "string",
          RoleArn = "string",
          SecretArn = "string",
          Url = "string"
        ),
        EntitlementArn = "string",
        EntitlementStatus = "ENABLED"|"DISABLED",
        Name = "string",
        Subscribers = list(
          "string"
        )
      )
    ),
    FlowArn = "string",
    Name = "string",
    Outputs = list(
      list(
        DataTransferSubscriberFeePercent = 123,
        Description = "string",
        Destination = "string",
        Encryption = list(
          Algorithm = "aes128"|"aes192"|"aes256",
          ConstantInitializationVector = "string",
          DeviceId = "string",
          KeyType = "speke"|"static-key",
          Region = "string",
          ResourceId = "string",
          RoleArn = "string",
          SecretArn = "string",
          Url = "string"
        ),
        EntitlementArn = "string",
        MediaLiveInputArn = "string",
        Name = "string",
        OutputArn = "string",
        Port = 123,
        Transport = list(
          CidrAllowList = list(
            "string"
          ),
          MaxBitrate = 123,
          MaxLatency = 123,
          Protocol = "zixi-push"|"rtp-fec"|"rtp"|"zixi-pull"|"rist",
          RemoteId = "string",
          SmoothingLatency = 123,
          StreamId = "string"
        ),
        VpcInterfaceAttachment = list(
          VpcInterfaceName = "string"
        )
      )
    ),
    Source = list(
      DataTransferSubscriberFeePercent = 123,
      Decryption = list(
        Algorithm = "aes128"|"aes192"|"aes256",
        ConstantInitializationVector = "string",
        DeviceId = "string",
        KeyType = "speke"|"static-key",
        Region = "string",
        ResourceId = "string",
        RoleArn = "string",
        SecretArn = "string",
        Url = "string"
      ),
      Description = "string",
      EntitlementArn = "string",
      IngestIp = "string",
      IngestPort = 123,
      Name = "string",
      SourceArn = "string",
      Transport = list(
        CidrAllowList = list(
          "string"
        ),
        MaxBitrate = 123,
        MaxLatency = 123,
        Protocol = "zixi-push"|"rtp-fec"|"rtp"|"zixi-pull"|"rist",
        RemoteId = "string",
        SmoothingLatency = 123,
        StreamId = "string"
      ),
      VpcInterfaceName = "string",
      WhitelistCidr = "string"
    ),
    SourceFailoverConfig = list(
      RecoveryWindow = 123,
      State = "ENABLED"|"DISABLED"
    ),
    Sources = list(
      list(
        DataTransferSubscriberFeePercent = 123,
        Decryption = list(
          Algorithm = "aes128"|"aes192"|"aes256",
          ConstantInitializationVector = "string",
          DeviceId = "string",
          KeyType = "speke"|"static-key",
          Region = "string",
          ResourceId = "string",
          RoleArn = "string",
          SecretArn = "string",
          Url = "string"
        ),
        Description = "string",
        EntitlementArn = "string",
        IngestIp = "string",
        IngestPort = 123,
        Name = "string",
        SourceArn = "string",
        Transport = list(
          CidrAllowList = list(
            "string"
          ),
          MaxBitrate = 123,
          MaxLatency = 123,
          Protocol = "zixi-push"|"rtp-fec"|"rtp"|"zixi-pull"|"rist",
          RemoteId = "string",
          SmoothingLatency = 123,
          StreamId = "string"
        ),
        VpcInterfaceName = "string",
        WhitelistCidr = "string"
      )
    ),
    Status = "STANDBY"|"ACTIVE"|"UPDATING"|"DELETING"|"STARTING"|"STOPPING"|"ERROR",
    VpcInterfaces = list(
      list(
        Name = "string",
        NetworkInterfaceIds = list(
          "string"
        ),
        RoleArn = "string",
        SecurityGroupIds = list(
          "string"
        ),
        SubnetId = "string"
      )
    )
  )
)
}
}
\description{
Updates flow
}
\section{Request syntax}{
\preformatted{svc$update_flow(
  FlowArn = "string",
  SourceFailoverConfig = list(
    RecoveryWindow = 123,
    State = "ENABLED"|"DISABLED"
  )
)
}
}

\keyword{internal}
