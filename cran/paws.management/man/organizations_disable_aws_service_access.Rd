% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/organizations_operations.R
\name{organizations_disable_aws_service_access}
\alias{organizations_disable_aws_service_access}
\title{Disables the integration of an AWS service (the service that is
specified by ServicePrincipal) with AWS Organizations}
\usage{
organizations_disable_aws_service_access(ServicePrincipal)
}
\arguments{
\item{ServicePrincipal}{[required] The service principal name of the AWS service for which you want to
disable integration with your organization. This is typically in the
form of a URL, such as \code{ service-abbreviation.amazonaws.com}.}
}
\value{
An empty list.
}
\description{
Disables the integration of an AWS service (the service that is
specified by \code{ServicePrincipal}) with AWS Organizations. When you
disable integration, the specified service no longer can create a
\href{https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html}{service-linked role}
in \emph{new} accounts in your organization. This means the service can't
perform operations on your behalf on any new accounts in your
organization. The service can still perform operations in older accounts
until the service completes its clean-up from AWS Organizations.

We \emph{\strong{strongly recommend}} that you don't use this command to disable
integration between AWS Organizations and the specified AWS service.
Instead, use the console or commands that are provided by the specified
service. This lets the trusted service perform any required
initialization when enabling trusted access, such as creating any
required resources and any required clean up of resources when disabling
trusted access.

For information about how to disable trusted service access to your
organization using the trusted service, see the \strong{Learn more} link
under the \strong{Supports Trusted Access} column at \href{https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html}{AWS services that you can use with AWS Organizations}.
on this page.

If you disable access by using this command, it causes the following
actions to occur:
\itemize{
\item The service can no longer create a service-linked role in the
accounts in your organization. This means that the service can't
perform operations on your behalf on any new accounts in your
organization. The service can still perform operations in older
accounts until the service completes its clean-up from AWS
Organizations.
\item The service can no longer perform tasks in the member accounts in
the organization, unless those operations are explicitly permitted
by the IAM policies that are attached to your roles. This includes
any data aggregation from the member accounts to the management
account, or to a delegated administrator account, where relevant.
\item Some services detect this and clean up any remaining data or
resources related to the integration, while other services stop
accessing the organization but leave any historical data and
configuration in place to support a possible re-enabling of the
integration.
}

Using the other service's console or commands to disable the integration
ensures that the other service is aware that it can clean up any
resources that are required only for the integration. How the service
cleans up its resources in the organization's accounts depends on that
service. For more information, see the documentation for the other AWS
service.

After you perform the
\code{\link[=organizations_disable_aws_service_access]{disable_aws_service_access}}
operation, the specified service can no longer perform operations in
your organization's accounts

For more information about integrating other services with AWS
Organizations, including the list of services that work with
Organizations, see \href{https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html}{Integrating AWS Organizations with Other AWS Services}
in the \emph{AWS Organizations User Guide.}

This operation can be called only from the organization's management
account.
}
\section{Request syntax}{
\preformatted{svc$disable_aws_service_access(
  ServicePrincipal = "string"
)
}
}

\keyword{internal}
