% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssm_operations.R
\name{ssm_create_association}
\alias{ssm_create_association}
\title{A State Manager association defines the state that you want to maintain
on your instances}
\usage{
ssm_create_association(Name, DocumentVersion, InstanceId, Parameters,
  Targets, ScheduleExpression, OutputLocation, AssociationName,
  AutomationTargetParameterName, MaxErrors, MaxConcurrency,
  ComplianceSeverity, SyncCompliance, ApplyOnlyAtCronInterval,
  TargetLocations)
}
\arguments{
\item{Name}{[required] The name of the SSM document that contains the configuration information
for the instance. You can specify Command or Automation documents.

You can specify AWS-predefined documents, documents you created, or a
document that is shared with you from another account.

For SSM documents that are shared with you from other AWS accounts, you
must specify the complete SSM document ARN, in the following format:

\code{arn:partition:ssm:region:account-id:document/document-name }

For example:

\code{arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document}

For AWS-predefined documents and SSM documents you created in your
account, you only need to specify the document name. For example,
\code{AWS-ApplyPatchBaseline} or \code{My-Document}.}

\item{DocumentVersion}{The document version you want to associate with the target(s). Can be a
specific version or the default version.}

\item{InstanceId}{The instance ID.

\code{InstanceId} has been deprecated. To specify an instance ID for an
association, use the \code{Targets} parameter. Requests that include the
parameter \code{InstanceID} with SSM documents that use schema version 2.0 or
later will fail. In addition, if you use the parameter \code{InstanceId}, you
cannot use the parameters \code{AssociationName}, \code{DocumentVersion},
\code{MaxErrors}, \code{MaxConcurrency}, \code{OutputLocation}, or
\code{ScheduleExpression}. To use these parameters, you must use the
\code{Targets} parameter.}

\item{Parameters}{The parameters for the runtime configuration of the document.}

\item{Targets}{The targets for the association. You can target instances by using tags,
AWS Resource Groups, all instances in an AWS account, or individual
instance IDs. For more information about choosing targets for an
association, see \href{https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-state-manager-targets-and-rate-controls.html}{Using targets and rate controls with State Manager associations}
in the \emph{AWS Systems Manager User Guide}.}

\item{ScheduleExpression}{A cron expression when the association will be applied to the target(s).}

\item{OutputLocation}{An S3 bucket where you want to store the output details of the request.}

\item{AssociationName}{Specify a descriptive name for the association.}

\item{AutomationTargetParameterName}{Specify the target for the association. This target is required for
associations that use an Automation document and target resources by
using rate controls.}

\item{MaxErrors}{The number of errors that are allowed before the system stops sending
requests to run the association on additional targets. You can specify
either an absolute number of errors, for example 10, or a percentage of
the target set, for example 10\%. If you specify 3, for example, the
system stops sending requests when the fourth error is received. If you
specify 0, then the system stops sending requests after the first error
is returned. If you run an association on 50 instances and set MaxError
to 10\%, then the system stops sending the request when the sixth error
is received.

Executions that are already running an association when MaxErrors is
reached are allowed to complete, but some of these executions may fail
as well. If you need to ensure that there won't be more than max-errors
failed executions, set MaxConcurrency to 1 so that executions proceed
one at a time.}

\item{MaxConcurrency}{The maximum number of targets allowed to run the association at the same
time. You can specify a number, for example 10, or a percentage of the
target set, for example 10\%. The default value is 100\%, which means all
targets run the association at the same time.

If a new instance starts and attempts to run an association while
Systems Manager is running MaxConcurrency associations, the association
is allowed to run. During the next association interval, the new
instance will process its association within the limit specified for
MaxConcurrency.}

\item{ComplianceSeverity}{The severity level to assign to the association.}

\item{SyncCompliance}{The mode for generating association compliance. You can specify \code{AUTO}
or \code{MANUAL}. In \code{AUTO} mode, the system uses the status of the
association execution to determine the compliance status. If the
association execution runs successfully, then the association is
\code{COMPLIANT}. If the association execution doesn't run successfully, the
association is \code{NON-COMPLIANT}.

In \code{MANUAL} mode, you must specify the \code{AssociationId} as a parameter
for the \code{\link[=ssm_put_compliance_items]{put_compliance_items}} API action.
In this case, compliance data is not managed by State Manager. It is
managed by your direct call to the
\code{\link[=ssm_put_compliance_items]{put_compliance_items}} API action.

By default, all associations use \code{AUTO} mode.}

\item{ApplyOnlyAtCronInterval}{By default, when you create a new associations, the system runs it
immediately after it is created and then according to the schedule you
specified. Specify this option if you don't want an association to run
immediately after you create it. This parameter is not supported for
rate expressions.}

\item{TargetLocations}{A location is a combination of AWS Regions and AWS accounts where you
want to run the association. Use this action to create an association in
multiple Regions and multiple accounts.}
}
\value{
A list with the following syntax:\preformatted{list(
  AssociationDescription = list(
    Name = "string",
    InstanceId = "string",
    AssociationVersion = "string",
    Date = as.POSIXct(
      "2015-01-01"
    ),
    LastUpdateAssociationDate = as.POSIXct(
      "2015-01-01"
    ),
    Status = list(
      Date = as.POSIXct(
        "2015-01-01"
      ),
      Name = "Pending"|"Success"|"Failed",
      Message = "string",
      AdditionalInfo = "string"
    ),
    Overview = list(
      Status = "string",
      DetailedStatus = "string",
      AssociationStatusAggregatedCount = list(
        123
      )
    ),
    DocumentVersion = "string",
    AutomationTargetParameterName = "string",
    Parameters = list(
      list(
        "string"
      )
    ),
    AssociationId = "string",
    Targets = list(
      list(
        Key = "string",
        Values = list(
          "string"
        )
      )
    ),
    ScheduleExpression = "string",
    OutputLocation = list(
      S3Location = list(
        OutputS3Region = "string",
        OutputS3BucketName = "string",
        OutputS3KeyPrefix = "string"
      )
    ),
    LastExecutionDate = as.POSIXct(
      "2015-01-01"
    ),
    LastSuccessfulExecutionDate = as.POSIXct(
      "2015-01-01"
    ),
    AssociationName = "string",
    MaxErrors = "string",
    MaxConcurrency = "string",
    ComplianceSeverity = "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"UNSPECIFIED",
    SyncCompliance = "AUTO"|"MANUAL",
    ApplyOnlyAtCronInterval = TRUE|FALSE,
    TargetLocations = list(
      list(
        Accounts = list(
          "string"
        ),
        Regions = list(
          "string"
        ),
        TargetLocationMaxConcurrency = "string",
        TargetLocationMaxErrors = "string",
        ExecutionRoleName = "string"
      )
    )
  )
)
}
}
\description{
A State Manager association defines the state that you want to maintain
on your instances. For example, an association can specify that
anti-virus software must be installed and running on your instances, or
that certain ports must be closed. For static targets, the association
specifies a schedule for when the configuration is reapplied. For
dynamic targets, such as an AWS Resource Group or an AWS Autoscaling
Group, State Manager applies the configuration when new instances are
added to the group. The association also specifies actions to take when
applying the configuration. For example, an association for anti-virus
software might run once a day. If the software is not installed, then
State Manager installs it. If the software is installed, but the service
is not running, then the association might instruct State Manager to
start the service.
}
\section{Request syntax}{
\preformatted{svc$create_association(
  Name = "string",
  DocumentVersion = "string",
  InstanceId = "string",
  Parameters = list(
    list(
      "string"
    )
  ),
  Targets = list(
    list(
      Key = "string",
      Values = list(
        "string"
      )
    )
  ),
  ScheduleExpression = "string",
  OutputLocation = list(
    S3Location = list(
      OutputS3Region = "string",
      OutputS3BucketName = "string",
      OutputS3KeyPrefix = "string"
    )
  ),
  AssociationName = "string",
  AutomationTargetParameterName = "string",
  MaxErrors = "string",
  MaxConcurrency = "string",
  ComplianceSeverity = "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"UNSPECIFIED",
  SyncCompliance = "AUTO"|"MANUAL",
  ApplyOnlyAtCronInterval = TRUE|FALSE,
  TargetLocations = list(
    list(
      Accounts = list(
        "string"
      ),
      Regions = list(
        "string"
      ),
      TargetLocationMaxConcurrency = "string",
      TargetLocationMaxErrors = "string",
      ExecutionRoleName = "string"
    )
  )
)
}
}

\keyword{internal}
