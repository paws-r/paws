% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.sagemaker_operations.R
\name{create_hyper_parameter_tuning_job}
\alias{create_hyper_parameter_tuning_job}
\title{Starts a hyperparameter tuning job}
\usage{
create_hyper_parameter_tuning_job(HyperParameterTuningJobName,
  HyperParameterTuningJobConfig, TrainingJobDefinition, Tags = NULL)
}
\arguments{
\item{HyperParameterTuningJobName}{[required] The name of the tuning job. This name is the prefix for the names of all training jobs that this tuning job launches. The name must be unique within the same AWS account and AWS Region. Names are not case sensitive, and must be between 1-32 characters.}

\item{HyperParameterTuningJobConfig}{[required] The HyperParameterTuningJobConfig object that describes the tuning job, including the search strategy, metric used to evaluate training jobs, ranges of parameters to search, and resource limits for the tuning job.}

\item{TrainingJobDefinition}{[required] The HyperParameterTrainingJobDefinition object that describes the training jobs that this tuning job launches, including static hyperparameters, input data configuration, output data configuration, resource configuration, and stopping condition.}

\item{Tags}{An array of key-value pairs. You can use tags to categorize your AWS resources in different ways, for example, by purpose, owner, or environment. For more information, see \href{https://aws.amazon.com/answers/account-management/aws-tagging-strategies/}{AWS Tagging Strategies}.

Tags that you specify for the tuning job are also added to all training jobs that the tuning job launches.}
}
\description{
Starts a hyperparameter tuning job.
}
\section{Accepted Parameters}{
\preformatted{create_hyper_parameter_tuning_job(
  HyperParameterTuningJobName = "string",
  HyperParameterTuningJobConfig = list(
    Strategy = "Bayesian",
    HyperParameterTuningJobObjective = list(
      Type = "Maximize"|"Minimize",
      MetricName = "string"
    ),
    ResourceLimits = list(
      MaxNumberOfTrainingJobs = 123,
      MaxParallelTrainingJobs = 123
    ),
    ParameterRanges = list(
      IntegerParameterRanges = list(
        list(
          Name = "string",
          MinValue = "string",
          MaxValue = "string"
        )
      ),
      ContinuousParameterRanges = list(
        list(
          Name = "string",
          MinValue = "string",
          MaxValue = "string"
        )
      ),
      CategoricalParameterRanges = list(
        list(
          Name = "string",
          Values = list(
            "string"
          )
        )
      )
    )
  ),
  TrainingJobDefinition = list(
    StaticHyperParameters = list(
      "string"
    ),
    AlgorithmSpecification = list(
      TrainingImage = "string",
      TrainingInputMode = "Pipe"|"File",
      MetricDefinitions = list(
        list(
          Name = "string",
          Regex = "string"
        )
      )
    ),
    RoleArn = "string",
    InputDataConfig = list(
      list(
        ChannelName = "string",
        DataSource = list(
          S3DataSource = list(
            S3DataType = "ManifestFile"|"S3Prefix",
            S3Uri = "string",
            S3DataDistributionType = "FullyReplicated"|"ShardedByS3Key"
          )
        ),
        ContentType = "string",
        CompressionType = "None"|"Gzip",
        RecordWrapperType = "None"|"RecordIO",
        InputMode = "Pipe"|"File"
      )
    ),
    VpcConfig = list(
      SecurityGroupIds = list(
        "string"
      ),
      Subnets = list(
        "string"
      )
    ),
    OutputDataConfig = list(
      KmsKeyId = "string",
      S3OutputPath = "string"
    ),
    ResourceConfig = list(
      InstanceType = "ml.m4.xlarge"|"ml.m4.2xlarge"|"ml.m4.4xlarge"|"ml.m4.10xlarge"|"ml.m4.16xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.12xlarge"|"ml.m5.24xlarge"|"ml.c4.xlarge"|"ml.c4.2xlarge"|"ml.c4.4xlarge"|"ml.c4.8xlarge"|"ml.p2.xlarge"|"ml.p2.8xlarge"|"ml.p2.16xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.18xlarge",
      InstanceCount = 123,
      VolumeSizeInGB = 123,
      VolumeKmsKeyId = "string"
    ),
    StoppingCondition = list(
      MaxRuntimeInSeconds = 123
    )
  ),
  Tags = list(
    list(
      Key = "string",
      Value = "string"
    )
  )
)
}
}

