% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.iotanalytics_operations.R
\name{create_pipeline}
\alias{create_pipeline}
\title{Creates a pipeline}
\usage{
create_pipeline(pipelineName, pipelineActivities, tags = NULL)
}
\arguments{
\item{pipelineName}{[required] The name of the pipeline.}

\item{pipelineActivities}{[required] A list of pipeline activities.

The list can be 1-25 \strong{PipelineActivity} objects. Activities perform transformations on your messages, such as removing, renaming, or adding message attributes; filtering messages based on attribute values; invoking your Lambda functions on messages for advanced processing; or performing mathematical transformations to normalize device data.}

\item{tags}{Metadata which can be used to manage the pipeline.}
}
\description{
Creates a pipeline. A pipeline consumes messages from one or more channels and allows you to process the messages before storing them in a data store.
}
\section{Accepted Parameters}{
\preformatted{create_pipeline(
  pipelineName = "string",
  pipelineActivities = list(
    list(
      channel = list(
        name = "string",
        channelName = "string",
        next = "string"
      ),
      lambda = list(
        name = "string",
        lambdaName = "string",
        batchSize = 123,
        next = "string"
      ),
      datastore = list(
        name = "string",
        datastoreName = "string"
      ),
      addAttributes = list(
        name = "string",
        attributes = list(
          "string"
        ),
        next = "string"
      ),
      removeAttributes = list(
        name = "string",
        attributes = list(
          "string"
        ),
        next = "string"
      ),
      selectAttributes = list(
        name = "string",
        attributes = list(
          "string"
        ),
        next = "string"
      ),
      filter = list(
        name = "string",
        filter = "string",
        next = "string"
      ),
      math = list(
        name = "string",
        attribute = "string",
        math = "string",
        next = "string"
      ),
      deviceRegistryEnrich = list(
        name = "string",
        attribute = "string",
        thingName = "string",
        roleArn = "string",
        next = "string"
      ),
      deviceShadowEnrich = list(
        name = "string",
        attribute = "string",
        thingName = "string",
        roleArn = "string",
        next = "string"
      )
    )
  ),
  tags = list(
    list(
      key = "string",
      value = "string"
    )
  )
)
}
}

