% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.iotanalytics_operations.R
\name{create_dataset}
\alias{create_dataset}
\title{Creates a data set}
\usage{
create_dataset(datasetName, actions, triggers = NULL,
  contentDeliveryRules = NULL, retentionPeriod = NULL, tags = NULL)
}
\arguments{
\item{datasetName}{[required] The name of the data set.}

\item{actions}{[required] A list of actions that create the data set contents.}

\item{triggers}{A list of triggers. A trigger causes data set contents to be populated at a specified time interval or when another data set's contents are created. The list of triggers can be empty or contain up to five \strong{DataSetTrigger} objects.}

\item{contentDeliveryRules}{When data set contents are created they are delivered to destinations specified here.}

\item{retentionPeriod}{[Optional] How long, in days, message data is kept for the data set. If not given or set to null, the latest version of the dataset content plus the latest succeeded version (if they are different) are retained for at most 90 days.}

\item{tags}{Metadata which can be used to manage the data set.}
}
\description{
Creates a data set. A data set stores data retrieved from a data store by applying a "queryAction" (a SQL query) or a "containerAction" (executing a containerized application). This operation creates the skeleton of a data set. The data set can be populated manually by calling "CreateDatasetContent" or automatically according to a "trigger" you specify.
}
\section{Accepted Parameters}{
\preformatted{create_dataset(
  datasetName = "string",
  actions = list(
    list(
      actionName = "string",
      queryAction = list(
        sqlQuery = "string",
        filters = list(
          list(
            deltaTime = list(
              offsetSeconds = 123,
              timeExpression = "string"
            )
          )
        )
      ),
      containerAction = list(
        image = "string",
        executionRoleArn = "string",
        resourceConfiguration = list(
          computeType = "ACU_1"|"ACU_2",
          volumeSizeInGB = 123
        ),
        variables = list(
          list(
            name = "string",
            stringValue = "string",
            doubleValue = 123.0,
            datasetContentVersionValue = list(
              datasetName = "string"
            ),
            outputFileUriValue = list(
              fileName = "string"
            )
          )
        )
      )
    )
  ),
  triggers = list(
    list(
      schedule = list(
        expression = "string"
      ),
      dataset = list(
        name = "string"
      )
    )
  ),
  contentDeliveryRules = list(
    list(
      entryName = "string",
      destination = list(
        iotEventsDestinationConfiguration = list(
          inputName = "string",
          roleArn = "string"
        )
      )
    )
  ),
  retentionPeriod = list(
    unlimited = TRUE|FALSE,
    numberOfDays = 123
  ),
  tags = list(
    list(
      key = "string",
      value = "string"
    )
  )
)
}
}

