% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/devicefarm_operations.R
\name{devicefarm_create_upload}
\alias{devicefarm_create_upload}
\title{Uploads an app or test scripts}
\usage{
devicefarm_create_upload(projectArn, name, type, contentType)
}
\arguments{
\item{projectArn}{[required] The ARN of the project for the upload.}

\item{name}{[required] The upload's file name. The name should not contain the '/'
character. If uploading an iOS app, the file name needs to end with the
\code{.ipa} extension. If uploading an Android app, the file name needs to
end with the \code{.apk} extension. For all others, the file name must end
with the \code{.zip} file extension.}

\item{type}{[required] The upload's upload type.

Must be one of the following values:
\itemize{
\item ANDROID\_APP: An Android upload.
\item IOS\_APP: An iOS upload.
\item WEB\_APP: A web application upload.
\item EXTERNAL\_DATA: An external data upload.
\item APPIUM\_JAVA\_JUNIT\_TEST\_PACKAGE: An Appium Java JUnit test
package upload.
\item APPIUM\_JAVA\_TESTNG\_TEST\_PACKAGE: An Appium Java TestNG test
package upload.
\item APPIUM\_PYTHON\_TEST\_PACKAGE: An Appium Python test package upload.
\item APPIUM\_NODE\_TEST\_PACKAGE: An Appium Node.js test package upload.
\item APPIUM\_RUBY\_TEST\_PACKAGE: An Appium Ruby test package upload.
\item APPIUM\_WEB\_JAVA\_JUNIT\_TEST\_PACKAGE: An Appium Java JUnit test
package upload for a web app.
\item APPIUM\_WEB\_JAVA\_TESTNG\_TEST\_PACKAGE: An Appium Java TestNG test
package upload for a web app.
\item APPIUM\_WEB\_PYTHON\_TEST\_PACKAGE: An Appium Python test package
upload for a web app.
\item APPIUM\_WEB\_NODE\_TEST\_PACKAGE: An Appium Node.js test package
upload for a web app.
\item APPIUM\_WEB\_RUBY\_TEST\_PACKAGE: An Appium Ruby test package upload
for a web app.
\item CALABASH\_TEST\_PACKAGE: A Calabash test package upload.
\item INSTRUMENTATION\_TEST\_PACKAGE: An instrumentation upload.
\item UIAUTOMATION\_TEST\_PACKAGE: A uiautomation test package upload.
\item UIAUTOMATOR\_TEST\_PACKAGE: A uiautomator test package upload.
\item XCTEST\_TEST\_PACKAGE: An XCode test package upload.
\item XCTEST\_UI\_TEST\_PACKAGE: An XCode UI test package upload.
\item APPIUM\_JAVA\_JUNIT\_TEST\_SPEC: An Appium Java JUnit test spec
upload.
\item APPIUM\_JAVA\_TESTNG\_TEST\_SPEC: An Appium Java TestNG test spec
upload.
\item APPIUM\_PYTHON\_TEST\_SPEC: An Appium Python test spec upload.
\item APPIUM\_NODE\_TEST\_SPEC: An Appium Node.js test spec upload.
\item APPIUM\_RUBY\_TEST\_SPEC: An Appium Ruby test spec upload.
\item APPIUM\_WEB\_JAVA\_JUNIT\_TEST\_SPEC: An Appium Java JUnit test spec
upload for a web app.
\item APPIUM\_WEB\_JAVA\_TESTNG\_TEST\_SPEC: An Appium Java TestNG test
spec upload for a web app.
\item APPIUM\_WEB\_PYTHON\_TEST\_SPEC: An Appium Python test spec upload
for a web app.
\item APPIUM\_WEB\_NODE\_TEST\_SPEC: An Appium Node.js test spec upload
for a web app.
\item APPIUM\_WEB\_RUBY\_TEST\_SPEC: An Appium Ruby test spec upload for a
web app.
\item INSTRUMENTATION\_TEST\_SPEC: An instrumentation test spec upload.
\item XCTEST\_UI\_TEST\_SPEC: An XCode UI test spec upload.
}

\strong{Note} If you call \code{CreateUpload} with \code{WEB_APP} specified, AWS Device
Farm throws an \code{ArgumentException} error.}

\item{contentType}{The upload's content type (for example, "application/octet-stream").}
}
\description{
Uploads an app or test scripts.
}
\section{Request syntax}{
\preformatted{devicefarm$create_upload(
  projectArn = "string",
  name = "string",
  type = "ANDROID_APP"|"IOS_APP"|"WEB_APP"|"EXTERNAL_DATA"|"APPIUM_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_PYTHON_TEST_PACKAGE"|"APPIUM_NODE_TEST_PACKAGE"|"APPIUM_RUBY_TEST_PACKAGE"|"APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE"|"APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE"|"APPIUM_WEB_PYTHON_TEST_PACKAGE"|"APPIUM_WEB_NODE_TEST_PACKAGE"|"APPIUM_WEB_RUBY_TEST_PACKAGE"|"CALABASH_TEST_PACKAGE"|"INSTRUMENTATION_TEST_PACKAGE"|"UIAUTOMATION_TEST_PACKAGE"|"UIAUTOMATOR_TEST_PACKAGE"|"XCTEST_TEST_PACKAGE"|"XCTEST_UI_TEST_PACKAGE"|"APPIUM_JAVA_JUNIT_TEST_SPEC"|"APPIUM_JAVA_TESTNG_TEST_SPEC"|"APPIUM_PYTHON_TEST_SPEC"|"APPIUM_NODE_TEST_SPEC"|"APPIUM_RUBY_TEST_SPEC"|"APPIUM_WEB_JAVA_JUNIT_TEST_SPEC"|"APPIUM_WEB_JAVA_TESTNG_TEST_SPEC"|"APPIUM_WEB_PYTHON_TEST_SPEC"|"APPIUM_WEB_NODE_TEST_SPEC"|"APPIUM_WEB_RUBY_TEST_SPEC"|"INSTRUMENTATION_TEST_SPEC"|"XCTEST_UI_TEST_SPEC",
  contentType = "string"
)
}
}

\examples{
# The following example creates a new Appium Python test package upload
# inside an existing project.
\donttest{devicefarm$create_upload(
  name = "MyAppiumPythonUpload",
  type = "APPIUM_PYTHON_TEST_PACKAGE",
  projectArn = "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
)}

}
\keyword{internal}
