% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.organizations_operations.R
\name{update_policy}
\alias{update_policy}
\title{Updates an existing policy with a new name, description, or content}
\usage{
update_policy(PolicyId, Name = NULL, Description = NULL,
  Content = NULL)
}
\arguments{
\item{PolicyId}{[required] The unique identifier (ID) of the policy that you want to update.

The \href{http://wikipedia.org/wiki/regex}{regex pattern} for a policy ID string requires "p-" followed by from 8 to 128 lower-case letters or digits.}

\item{Name}{If provided, the new name for the policy.

The \href{http://wikipedia.org/wiki/regex}{regex pattern} that is used to validate this parameter is a string of any of the characters in the ASCII character range.}

\item{Description}{If provided, the new description for the policy.}

\item{Content}{If provided, the new content for the policy. The text must be correctly formatted JSON that complies with the syntax for the policy's type. For more information, see \href{http://docs.aws.amazon.com/organizations/latest/userguide/orgs_reference_scp-syntax.html}{Service Control Policy Syntax} in the \emph{AWS Organizations User Guide}.}
}
\description{
Updates an existing policy with a new name, description, or content. If any parameter is not supplied, that value remains unchanged. Note that you cannot change a policy's type.
}
\details{
This operation can be called only from the organization's master account.
}
\section{Accepted Parameters}{
\preformatted{update_policy(
  PolicyId = "string",
  Name = "string",
  Description = "string",
  Content = "string"
)
}
}

\examples{
# The following example shows how to rename a policy and give it a new
# description and new content. The output confirms the new name and
# description text:/n/n
\donttest{update_policy(
  Description = "This description replaces the original.",
  Name = "Renamed-Policy",
  PolicyId = "p-examplepolicyid111"
)}

# The following example shows how to replace the JSON text of the SCP from
# the preceding example with a new JSON policy text string that allows S3
# actions instead of EC2 actions:/n/n
\donttest{update_policy(
  Content = "{ \\\\\\"Version\\\\\\": \\\\\\"2012-10-17\\\\\\", \\\\\\"Statement\\\\\\": {\\\\\\"Effect\\\\\\": \\\\\\"Allow\\\\\\", \\\\\\"Action\\\\\\": \\\\\\"s3:*\\\\\\", \\\\\\"Resource\\\\\\": \\\\\\"*\\\\\\" } }",
  PolicyId = "p-examplepolicyid111"
)}

}
