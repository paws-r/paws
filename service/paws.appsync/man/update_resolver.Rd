% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.appsync_operations.R
\name{update_resolver}
\alias{update_resolver}
\title{Updates a Resolver object}
\usage{
update_resolver(apiId, typeName, fieldName, dataSourceName = NULL,
  requestMappingTemplate, responseMappingTemplate = NULL, kind = NULL,
  pipelineConfig = NULL)
}
\arguments{
\item{apiId}{[required] The API ID.}

\item{typeName}{[required] The new type name.}

\item{fieldName}{[required] The new field name.}

\item{dataSourceName}{The new data source name.}

\item{requestMappingTemplate}{[required] The new request mapping template.}

\item{responseMappingTemplate}{The new response mapping template.}

\item{kind}{The resolver type.
\itemize{
\item \strong{UNIT}: A UNIT resolver type. A UNIT resolver is the default resolver type. A UNIT resolver enables you to execute a GraphQL query against a single data source.
\item \strong{PIPELINE}: A PIPELINE resolver type. A PIPELINE resolver enables you to execute a series of \code{Function} in a serial manner. You can use a pipeline resolver to execute a GraphQL query against multiple data sources.
}}

\item{pipelineConfig}{The \code{PipelineConfig}.}
}
\description{
Updates a \code{Resolver} object.
}
\section{Accepted Parameters}{
\preformatted{update_resolver(
  apiId = "string",
  typeName = "string",
  fieldName = "string",
  dataSourceName = "string",
  requestMappingTemplate = "string",
  responseMappingTemplate = "string",
  kind = "UNIT"|"PIPELINE",
  pipelineConfig = list(
    functions = list(
      "string"
    )
  )
)
}
}

