% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.kinesis_operations.R
\name{deregister_stream_consumer}
\alias{deregister_stream_consumer}
\title{To deregister a consumer, provide its ARN}
\usage{
deregister_stream_consumer(StreamARN = NULL, ConsumerName = NULL,
  ConsumerARN = NULL)
}
\arguments{
\item{StreamARN}{The ARN of the Kinesis data stream that the consumer is registered with. For more information, see \href{https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kinesis-streams}{Amazon Resource Names (ARNs) and AWS Service Namespaces}.}

\item{ConsumerName}{The name that you gave to the consumer.}

\item{ConsumerARN}{The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.}
}
\description{
To deregister a consumer, provide its ARN. Alternatively, you can provide the ARN of the data stream and the name you gave the consumer when you registered it. You may also provide all three parameters, as long as they don't conflict with each other. If you don't know the name or ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its name and ARN.
}
\details{
This operation has a limit of five transactions per second per account.
}
\section{Accepted Parameters}{
\preformatted{deregister_stream_consumer(
  StreamARN = "string",
  ConsumerName = "string",
  ConsumerARN = "string"
)
}
}

