% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.codedeploy_operations.R
\name{batch_get_deployment_targets}
\alias{batch_get_deployment_targets}
\title{Returns an array of targets associated with a deployment}
\usage{
batch_get_deployment_targets(deploymentId = NULL, targetIds = NULL)
}
\arguments{
\item{deploymentId}{The unique ID of a deployment.}

\item{targetIds}{The unique IDs of the deployment targets. The compute platform of the deployment determines the type of the targets and their formats.
\itemize{
\item For deployments that use the EC2/On-premises compute platform, the target IDs are EC2 or on-premises instances IDs, and their target type is \code{instanceTarget}.
\item For deployments that use the AWS Lambda compute platform, the target IDs are the names of Lambda functions, and their target type is \code{instanceTarget}.
\item For deployments that use the Amazon ECS compute platform, the target IDs are pairs of Amazon ECS clusters and services specified using the format \code{<clustername>:<servicename>}. Their target type is \code{ecsTarget}.
}}
}
\description{
Returns an array of targets associated with a deployment. This method works with all compute types and should be used instead of the deprecated \code{BatchGetDeploymentInstances}.
}
\details{
The type of targets returned depends on the deployment's compute platform:
\itemize{
\item \strong{EC2/On-premises}: Information about EC2 instance targets.
\item \strong{AWS Lambda}: Information about Lambda functions targets.
\item \strong{Amazon ECS}: Information about Amazon ECS service targets.
}
}
\section{Accepted Parameters}{
\preformatted{batch_get_deployment_targets(
  deploymentId = "string",
  targetIds = list(
    "string"
  )
)
}
}

