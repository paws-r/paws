% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.apigatewayv2_operations.R
\name{update_integration}
\alias{update_integration}
\title{Updates an Integration}
\usage{
update_integration(ApiId, ConnectionId = NULL, ConnectionType = NULL,
  ContentHandlingStrategy = NULL, CredentialsArn = NULL,
  Description = NULL, IntegrationId, IntegrationMethod = NULL,
  IntegrationType = NULL, IntegrationUri = NULL,
  PassthroughBehavior = NULL, RequestParameters = NULL,
  RequestTemplates = NULL, TemplateSelectionExpression = NULL,
  TimeoutInMillis = NULL)
}
\arguments{
\item{ApiId}{[required] The API identifier.}

\item{ConnectionId}{The identifier of the VpcLink used for the integration when the connectionType is VPC\_LINK; otherwise undefined.}

\item{ConnectionType}{The type of the network connection to the integration endpoint. The valid value is INTERNET for connections through the public routable internet or VPC\_LINK for private connections between API Gateway and a network load balancer in a VPC. The default value is INTERNET.}

\item{ContentHandlingStrategy}{Specifies how to handle response payload content type conversions. Supported values are CONVERT\_TO\_BINARY and CONVERT\_TO\_TEXT, with the following behaviors:

CONVERT\_TO\_BINARY: Converts a response payload from a Base64-encoded string to the corresponding binary blob.

CONVERT\_TO\_TEXT: Converts a response payload from a binary blob to a Base64-encoded string.

If this property is not defined, the response payload will be passed through from the integration response to the route response or method response without modification.}

\item{CredentialsArn}{Specifies the credentials required for the integration, if any. For AWS integrations, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify the string arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null.}

\item{Description}{The description of the integration}

\item{IntegrationId}{[required] The integration ID.}

\item{IntegrationMethod}{Specifies the integration's HTTP method type.}

\item{IntegrationType}{The integration type of an integration. One of the following:

AWS: for integrating the route or method request with an AWS service action, including the Lambda function-invoking action. With the Lambda function-invoking action, this is referred to as the Lambda custom integration. With any other AWS service action, this is known as AWS integration.

AWS\_PROXY: for integrating the route or method request with the Lambda function-invoking action with the client request passed through as-is. This integration is also referred to as Lambda proxy integration.

HTTP: for integrating the route or method request with an HTTP endpoint, including a private HTTP endpoint within a VPC. This integration is also referred to as the HTTP custom integration.

HTTP\_PROXY: for integrating route or method request with an HTTP endpoint, including a private HTTP endpoint within a VPC, with the client request passed through as-is. This is also referred to as HTTP proxy integration.

MOCK: for integrating the route or method request with API Gateway as a "loopback" endpoint without invoking any backend.}

\item{IntegrationUri}{Specifies the Uniform Resource Identifier (URI) of the integration endpoint.

For HTTP or HTTP\_PROXY integrations, the URI must be a fully formed, encoded HTTP(S) URL according to the \href{https://en.wikipedia.org/wiki/Uniform_Resource_Identifier}{RFC-3986 specification}, for either standard integration, where connectionType is not VPC\_LINK, or private integration, where connectionType is VPC\_LINK. For a private HTTP integration, the URI is not used for routing.

For AWS or AWS\_PROXY integrations, the URI is of the form arn:aws:apigateway:{region}:{subdomain.service|service}:path|action/{service\_api}. Here, {Region} is the API Gateway region (e.g., us-east-1); {service} is the name of the integrated AWS service (e.g., s3); and {subdomain} is a designated subdomain supported by certain AWS service for fast host-name lookup. action can be used for an AWS service action-based API, using an Action={name}&{p1}={v1}&p2={v2}... query string. The ensuing {service\_api} refers to a supported action {name} plus any required input parameters. Alternatively, path can be used for an AWS service path-based API. The ensuing service\_api refers to the path to an AWS service resource, including the region of the integrated AWS service, if applicable. For example, for integration with the S3 API of GetObject, the URI can be either arn:aws:apigateway:us-west-2:s3:action/GetObject&Bucket={bucket}&Key={key} or arn:aws:apigateway:us-west-2:s3:path/{bucket}/{key}}

\item{PassthroughBehavior}{Specifies the pass-through behavior for incoming requests based on the Content-Type header in the request, and the available mapping templates specified as the requestTemplates property on the Integration resource. There are three valid values: WHEN\_NO\_MATCH, WHEN\_NO\_TEMPLATES, and NEVER.

WHEN\_NO\_MATCH passes the request body for unmapped content types through to the integration backend without transformation.

NEVER rejects unmapped content types with an HTTP 415 Unsupported Media Type response.

WHEN\_NO\_TEMPLATES allows pass-through when the integration has no content types mapped to templates. However, if there is at least one content type defined, unmapped content types will be rejected with the same HTTP 415 Unsupported Media Type response.}

\item{RequestParameters}{A key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.{location}.{name} , where {location} is querystring, path, or header; and {name} must be a valid and unique method request parameter name.}

\item{RequestTemplates}{Represents a map of Velocity templates that are applied on the request payload based on the value of the Content-Type header sent by the client. The content type value is the key in this map, and the template (as a String) is the value.}

\item{TemplateSelectionExpression}{The template selection expression for the integration.}

\item{TimeoutInMillis}{Custom timeout between 50 and 29,000 milliseconds. The default value is 29,000 milliseconds or 29 seconds.}
}
\description{
Updates an Integration.
}
\section{Accepted Parameters}{
\preformatted{update_integration(
  ApiId = "string",
  ConnectionId = "string",
  ConnectionType = "INTERNET"|"VPC_LINK",
  ContentHandlingStrategy = "CONVERT_TO_BINARY"|"CONVERT_TO_TEXT",
  CredentialsArn = "string",
  Description = "string",
  IntegrationId = "string",
  IntegrationMethod = "string",
  IntegrationType = "AWS"|"HTTP"|"MOCK"|"HTTP_PROXY"|"AWS_PROXY",
  IntegrationUri = "string",
  PassthroughBehavior = "WHEN_NO_MATCH"|"NEVER"|"WHEN_NO_TEMPLATES",
  RequestParameters = list(
    "string"
  ),
  RequestTemplates = list(
    "string"
  ),
  TemplateSelectionExpression = "string",
  TimeoutInMillis = 123
)
}
}

