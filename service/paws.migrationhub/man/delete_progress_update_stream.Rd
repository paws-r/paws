% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paws.migrationhub_operations.R
\name{delete_progress_update_stream}
\alias{delete_progress_update_stream}
\title{Deletes a progress update stream, including all of its tasks, which was previously created as an AWS resource used for access control}
\usage{
delete_progress_update_stream(ProgressUpdateStreamName, DryRun = NULL)
}
\arguments{
\item{ProgressUpdateStreamName}{[required] The name of the ProgressUpdateStream.}

\item{DryRun}{Optional boolean flag to indicate whether any effect should take place. Used to test if the caller has permission to make the call.}
}
\description{
Deletes a progress update stream, including all of its tasks, which was previously created as an AWS resource used for access control. This API has the following traits:
}
\details{
\itemize{
\item The only parameter needed for \code{DeleteProgressUpdateStream} is the stream name (same as a \code{CreateProgressUpdateStream} call).
\item The call will return, and a background process will asynchronously delete the stream and all of its resources (tasks, associated resources, resource attributes, created artifacts).
\item If the stream takes time to be deleted, it might still show up on a \code{ListProgressUpdateStreams} call.
\item \code{CreateProgressUpdateStream}, \code{ImportMigrationTask}, \code{NotifyMigrationTaskState}, and all Associate[*] APIs realted to the tasks belonging to the stream will throw "InvalidInputException" if the stream of the same name is in the process of being deleted.
\item Once the stream and all of its resources are deleted, \code{CreateProgressUpdateStream} for a stream of the same name will succeed, and that stream will be an entirely new logical resource (without any resources associated with the old stream).
}
}
\section{Accepted Parameters}{
\preformatted{delete_progress_update_stream(
  ProgressUpdateStreamName = "string",
  DryRun = TRUE|FALSE
)
}
}

